{"version":3,"sources":["webpack://shootR/webpack/universalModuleDefinition","webpack://shootR/webpack/bootstrap","webpack://shootR/src/Main.ts","webpack://shootR/node_modules/@aspnet/signalr/dist/esm/index.js","webpack://shootR/node_modules/@aspnet/signalr/dist/esm/Errors.js","webpack://shootR/node_modules/tslib/tslib.es6.js","webpack://shootR/node_modules/@aspnet/signalr/dist/esm/HttpClient.js","webpack://shootR/node_modules/@aspnet/signalr/dist/esm/ILogger.js","webpack://shootR/node_modules/@aspnet/signalr/dist/esm/HubConnection.js","webpack://shootR/node_modules/@aspnet/signalr/dist/esm/HandshakeProtocol.js","webpack://shootR/node_modules/@aspnet/signalr/dist/esm/TextMessageFormat.js","webpack://shootR/node_modules/@aspnet/signalr/dist/esm/IHubProtocol.js","webpack://shootR/node_modules/@aspnet/signalr/dist/esm/Utils.js","webpack://shootR/node_modules/@aspnet/signalr/dist/esm/Loggers.js","webpack://shootR/node_modules/@aspnet/signalr/dist/esm/HubConnectionBuilder.js","webpack://shootR/node_modules/@aspnet/signalr/dist/esm/HttpConnection.js","webpack://shootR/node_modules/@aspnet/signalr/dist/esm/ITransport.js","webpack://shootR/node_modules/@aspnet/signalr/dist/esm/LongPollingTransport.js","webpack://shootR/node_modules/@aspnet/signalr/dist/esm/AbortController.js","webpack://shootR/node_modules/@aspnet/signalr/dist/esm/ServerSentEventsTransport.js","webpack://shootR/node_modules/@aspnet/signalr/dist/esm/WebSocketTransport.js","webpack://shootR/node_modules/@aspnet/signalr/dist/esm/JsonHubProtocol.js","webpack://shootR/src/Game.ts","webpack://shootR/endgate/endgate.ts","webpack://shootR/endgate/Bounds/Bounds.ts","webpack://shootR/endgate/Assets/Vectors/Vector2d.ts","webpack://shootR/endgate/Extensions/MathExtensions.ts","webpack://shootR/endgate/Assets/Vectors/Helpers/Vector2dHelpers.ts","webpack://shootR/endgate/Assets/Vectors/Helpers/MinMax.ts","webpack://shootR/endgate/Collision/Collision.ts","webpack://shootR/endgate/Assets/Sizes/Size2d.ts","webpack://shootR/endgate/Utilities/EventHandler1.ts","webpack://shootR/endgate/Utilities/EventHandler.ts","webpack://shootR/endgate/Utilities/EventHandler2.ts","webpack://shootR/endgate/Graphics/Graphics.ts","webpack://shootR/endgate/Assets/TimeSpan.ts","webpack://shootR/endgate/Extensions/Helpers.ts","webpack://shootR/endgate/Input/Input.ts","webpack://shootR/endgate/Utilities/NoopTripInvoker.ts","webpack://shootR/endgate/InputControllers/InputControllers.ts","webpack://shootR/endgate/MovementControllers/MovementControllers.ts","webpack://shootR/endgate/MapLoaders/MapLoaders.ts","webpack://shootR/endgate/Particles/Particles.ts","webpack://shootR/endgate/Tweening/Tweening.ts","webpack://shootR/endgate/Tweening/Functions/Functions.ts","webpack://shootR/endgate/Rendering/Rendering.ts","webpack://shootR/endgate/Sound/Sound.ts","webpack://shootR/endgate/Content/Content.ts","webpack://shootR/endgate/Utilities/EventHandler3.ts","webpack://shootR/endgate/Game.ts","webpack://shootR/endgate/GameTime.ts","webpack://shootR/endgate/GameConfiguration.ts","webpack://shootR/endgate/GameRunner.ts","webpack://shootR/endgate/Loopers/Loopers.ts","webpack://shootR/endgate/Extensions/WindowExtensions.ts","webpack://shootR/endgate/Assets/Matrixes/Matrix2x2.ts","webpack://shootR/src/Configuration/ConfigurationManager.ts","webpack://shootR/src/Ships/Ship.ts","webpack://shootR/src/Ships/Graphics/ShipGraphic.ts","webpack://shootR/src/Ships/Graphics/ShipBodyGraphic.ts","webpack://shootR/src/Ships/Graphics/ShipDamageGraphic.ts","webpack://shootR/src/Ships/Graphics/ShipLifeGraphic.ts","webpack://shootR/src/Ships/ShipLifeController.ts","webpack://shootR/src/Common/LifeController.ts","webpack://shootR/src/Ships/Graphics/ShipStatusTextGraphic.ts","webpack://shootR/src/Ships/Graphics/StatusText.ts","webpack://shootR/src/Ships/Graphics/ShipNameGraphic.ts","webpack://shootR/src/Ships/ShipMovementController.ts","webpack://shootR/src/Ships/ShipInterpolationManager.ts","webpack://shootR/src/Ships/Abilities/AbilityHandlers/ShipAbilityHandler.ts","webpack://shootR/src/Ships/Abilities/AbilityHandlers/AbilityHandler.ts","webpack://shootR/src/Ships/Abilities/Boost.ts","webpack://shootR/src/Ships/Abilities/MovementAbility.ts","webpack://shootR/src/Ships/Abilities/Ability.ts","webpack://shootR/src/Space/MapBoundary.ts","webpack://shootR/src/Space/Map.ts","webpack://shootR/src/Space/AreaRenderer.ts","webpack://shootR/src/Space/Area.ts","webpack://shootR/src/Ships/Animations/ShipAnimationHandler.ts","webpack://shootR/src/Ships/Animations/ShipThrustAnimation.ts","webpack://shootR/src/Ships/Animations/ShipBoostAnimation.ts","webpack://shootR/src/Common/Animation.ts","webpack://shootR/src/Ships/Animations/ShipDeathAnimation.ts","webpack://shootR/src/Ships/Levels/ShipLevelManager.ts","webpack://shootR/src/Ships/ShipFireController.ts","webpack://shootR/src/GameScreen.ts","webpack://shootR/src/Utilities/UtilityFunctions.ts","webpack://shootR/src/Bullets/Bullet.ts","webpack://shootR/src/Bullets/BulletGraphic.ts","webpack://shootR/src/Bullets/BulletMovementController.ts","webpack://shootR/src/Bullets/Animations/BulletAnimationHandler.ts","webpack://shootR/src/Bullets/Animations/BulletExplosionAnimation.ts","webpack://shootR/src/Powerups/HealthPack.ts","webpack://shootR/src/Powerups/Powerup.ts","webpack://shootR/src/Powerups/Graphics/HealthPackGraphic.ts","webpack://shootR/src/HUD/LeaderboardManager.ts","webpack://shootR/src/HUD/DeathScreen.ts","webpack://shootR/src/User/LatencyResolver.ts","webpack://shootR/src/Ships/ShipManager.ts","webpack://shootR/src/Bullets/BulletManager.ts","webpack://shootR/src/Powerups/PowerupManager.ts","webpack://shootR/src/Debug/DebugManager.ts","webpack://shootR/src/Debug/ServerGhost.ts","webpack://shootR/src/Debug/GameInformer.ts","webpack://shootR/src/Debug/UpdateRate.ts","webpack://shootR/src/Debug/RateMonitor.ts","webpack://shootR/src/Debug/DrawRate.ts","webpack://shootR/src/Debug/PayloadRate.ts","webpack://shootR/src/Debug/ConnectionMonitor.ts","webpack://shootR/src/HUD/HUDManager.ts","webpack://shootR/src/HUD/ShipStatMonitor.ts","webpack://shootR/src/HUD/HealthMonitor.ts","webpack://shootR/src/HUD/ExperienceMonitor.ts","webpack://shootR/src/HUD/RankingsManager.ts","webpack://shootR/src/HUD/EnvironmentMonitor.ts","webpack://shootR/src/HUD/NotificationManager.ts","webpack://shootR/src/HUD/UserInformationManager.ts","webpack://shootR/src/HUD/Chat.ts","webpack://shootR/src/User/UserShipManager.ts","webpack://shootR/src/Ships/ShipInputController.ts","webpack://shootR/src/User/UserCameraController.ts","webpack://shootR/src/Server/ServerAdapter.ts","webpack://shootR/src/Server/PayloadDecompressor.ts","webpack://shootR/src/Server/ServerConnectionManager.ts"],"names":[],"mappings":"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,gCAAgC,uCAAuC,aAAa,EAAE,EAAE,OAAO,kBAAkB;AACjH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4CAA4C;AAC5C;;;;;;;;;;;;;;ACzLA;AAAA;AACA;AACA;AACkC;AACf;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA4C,YAAY,0BAA0B;AAClF;AACA;AACA,0EAA4C,YAAY,2BAA2B;AACnF;AACA;AACA,0EAA4C,YAAY,6BAA6B;AACrF;AACA;AACA,CAAC;AACO;AACR,+BAA+B,iBAAiB;AAChD;AACA;AACA,uCAAuC,wBAAwB,sBAAsB,cAAc;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA,gDAAgD,8DAA8D,EAAE;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACO;AACR,sC;;;;;;;;AC7FA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B,mC;;;;;;;;;;;;;ACxBA;AAAA;AACA;AACA;AAC4B;AACN;AACH;AACI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,wCAAwC;AAC7F,oDAAoD,sCAAsC;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,wBAAwB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,8BAA8B,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,oDAAoD,EAAE;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mDAAmD,gCAAgC,EAAE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR,yC;;;;;;;;;AC/XA;AAAA;AACA;AAC4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR,6C;;;;;;;;ACjDA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR,6C;;;;;;;;ACtBA;AAAA;AACA;AACA;AACA;AACA;AACA,2EAA2E,wBAAwB;AACnG;AACA,0EAA0E,wBAAwB;AAClG;AACA,0EAA0E,wBAAwB;AAClG;AACA,iFAAiF,8BAA8B;AAC/G;AACA,iFAAiF,8BAA8B;AAC/G;AACA,oEAAoE,kBAAkB;AACtF;AACA,qEAAqE,mBAAmB;AACxF;AACA,CAAC,kCAAkC;AACnC,wC;;;;;;;;;;;;;;;;;;ACpBA;AAAA;AACA;AACA;AACmB;AACE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,EAAE;AAChE;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR,iC;;;;;;;;ACrKA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iBAAiB;AACxD;AACA;AACA,CAAC;AACO;AACR,mC;;;;;;;;;;;;;ACdA;AAAA;AACA;AACyB;AACD;AACE;AACL;AACQ;AAC7B,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oBAAoB;AAC5C;AACA,eAAe,aAAa,eAAe,mBAAmB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA,iBAAiB,cAAc,iBAAiB,oBAAoB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA,gD;;;;;;;;;;;;;;;;ACvEA;AAAA;AACA;AACA;AAC4B;AACT;AACyB;AACb;AACK;AACR;AACC;AAC7B;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA,iFAAiF,aAAa,EAAE;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,gBAAgB;AACnF;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,sBAAsB;AAC3G;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,gCAAgC;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,sEAA0B,EAAE;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA,0C;;;;;;;;;AC3WA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;AACzC,sC;;;;;;;;;;;;;;ACvBA;AAAA;AACA;AACA;AAC0B;AACQ;AACf;AACM;AACiB;AAC1C;AACA;AACA;AACA;AACA;AACA,sEAAsE,aAAa,EAAE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;AACO;AACR,gD;;;;;;;;AC7NA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACO;AACR,2C;;;;;;;;;;;;ACnCA;AAAA;AACA;AACA;AACmB;AACM;AACiB;AAC1C;AACA;AACA;AACA,sEAAsE,aAAa,EAAE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,wBAAwB;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR,qD;;;;;;;;;;;;ACzGA;AAAA;AACA;AACA;AACmB;AACM;AACI;AAC7B;AACA;AACA;AACA,sEAAsE,aAAa,EAAE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR,8C;;;;;;;;;;;;;ACvFA;AAAA;AACA;AACsB;AACH;AACM;AACJ;AACO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,wBAAwB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iBAAiB;AAC/C;AACA,eAAe,WAAW;AAC1B,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR,2C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzG4C;AACgC;AAC1B;AACM;AACG;AACP;AACN;AACJ;AAGyB;AACV;AAEvB;AAGlC;IAA0B,wBAAO;IAW7B,cAAY,UAA6B,EAAE,UAAsB,EAAE,aAA4B,EAAE,kBAAyC;QAA1I,YACI,kBAAM,UAAU,CAAC,SA4BpB;QA1BG,IAAI,CAAC,iBAAiB,GAAG,IAAI,wFAAoB,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;QAEpF,KAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,mBAAmB,GAAG,IAAI,uDAAS,CAAC,EAAE,CAAC,CAAC,CAAC,iBAAiB;QACpG,KAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,mBAAmB,GAAG,IAAI,uDAAS,CAAC,KAAK,CAAC,CAAC,CAAC,uBAAuB;QAE7G,KAAI,CAAC,iBAAiB,GAAG,IAAI,uDAAS,CAAC,iBAAiB,CAAC,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,sDAAU,CAAC,kBAAkB,CAAC,CAAC,CAAC;QAChJ,KAAI,CAAC,YAAY,GAAG,IAAI,8DAAW,CAAC,KAAI,CAAC,iBAAiB,EAAE,KAAI,CAAC,KAAK,EAAE,KAAI,CAAC,gBAAgB,EAAE,KAAI,CAAC,OAAO,CAAC,CAAC;QAC7G,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,qEAAe,CAAC,kBAAkB,CAAC,MAAM,EAAE,KAAI,CAAC,YAAY,EAAE,KAAI,CAAC,gBAAgB,EAAE,KAAI,CAAC,KAAK,EAAE,KAAI,CAAC,KAAK,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC,CAAC;QACrK,KAAI,CAAC,cAAc,GAAG,IAAI,oEAAa,CAAC,KAAI,CAAC,iBAAiB,EAAE,KAAI,CAAC,KAAK,EAAE,KAAI,CAAC,OAAO,CAAC,CAAC;QAC1F,KAAI,CAAC,eAAe,GAAG,IAAI,uEAAc,CAAC,KAAI,CAAC,iBAAiB,EAAE,KAAI,CAAC,KAAK,EAAE,KAAI,CAAC,OAAO,CAAC,CAAC;QAC5F,KAAI,CAAC,IAAI,GAAG,IAAI,+CAAG,CAAC,KAAI,CAAC,KAAK,EAAE,KAAI,CAAC,gBAAgB,EAAE,KAAI,CAAC,OAAO,EAAE,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;QACzG,KAAI,CAAC,aAAa,GAAG,IAAI,gEAAY,CAAC,kBAAkB,CAAC,MAAM,EAAE,KAAI,EAAE,aAAa,CAAC,CAAC;QACtF,KAAI,CAAC,IAAI,GAAG,IAAI,0DAAU,CAAC,kBAAkB,EAAE,KAAI,CAAC,YAAY,EAAiB,KAAI,CAAC,IAAI,CAAC,YAAa,EAAE,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;QAE9I,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,UAAC,OAAqB;YAC/C,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YACvC,KAAI,CAAC,cAAc,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YACzC,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YAC1C,KAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YAC/B,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAC,OAAkB;YACxC,KAAI,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;YAClC,KAAI,CAAC,iBAAiB,CAAC,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,sDAAU,CAAC,kBAAkB,CAAC,CAAC;QAC7E,CAAC,CAAC,CAAC;;IACP,CAAC;IAEM,0BAAW,GAAlB;QACI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,gBAAgB,EAAE,sBAAsB,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAC7E,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,iBAAiB,EAAE,sCAAsC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAC5F,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,eAAe,EAAE,sCAAsC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1F,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,EAAE,mBAAmB,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAC9D,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,EAAE,6BAA6B,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACvE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,EAAE,6BAA6B,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACvE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,EAAE,6BAA6B,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACvE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,EAAE,6BAA6B,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACvE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,EAAE,6BAA6B,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACvE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,EAAE,6BAA6B,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACvE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,EAAE,8BAA8B,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACzE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,EAAE,4BAA4B,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACvE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,EAAE,uCAAuC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QACpF,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,aAAa,EAAE,uCAAuC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QACzF,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,EAAE,0CAA0C,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QACtF,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,YAAY,EAAE,sCAAsC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QACvF,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,aAAa,EAAE,mCAAmC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACnF,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,aAAa,EAAE,mCAAmC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACnF,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,aAAa,EAAE,mCAAmC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACnF,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,aAAa,EAAE,mCAAmC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAEnF,+EAAe,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACjD,CAAC;IAEM,qBAAM,GAAb,UAAc,QAAqB;QAC/B,IAAI,CAAC,iBAAiB,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC;QAE7D,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACnC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACrC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC3B,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACxC,CAAC;IAED,0CAA0C;IAC1C,kFAAkF;IAClF,+GAA+G;IACxG,mBAAI,GAAX,UAAY,OAAiC;QACzC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IACL,WAAC;AAAD,CAAC,CAnFyB,qDAAO,GAmFhC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnG+B;AACM;AACF;AACN;AACsB;AACZ;AACkB;AACpB;AACA;AACR;AACM;AACF;AAC8C;AACxB;AACE;AACA;AACA;AAC5B;AAC0B;AAClB;AACkB;AACT;AACF;AACQ;;;;;;;;;;;;;;;;;;;;;;ACvBC;AACsB;AAKtE,IAAQ,MAAM,CAuZnB;AAvZD,WAAc,MAAM;IAChB;;MAEE;IACF;QAuBI,kBAAY,QAAkB,EAAE,QAAiB;YAtB1C,gBAAW,GAAW,UAAU,CAAC;YAuBpC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,CAAC,CAAC;QAClC,CAAC;QAED;;;;UAIE;QACK,wBAAK,GAAZ,UAAa,CAAS,EAAE,CAAS;YAC7B,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAChD,CAAC;QAED;;;UAGE;QACK,gCAAa,GAApB,UAAqB,KAAe;YAChC,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAChD,CAAC;QAED;;;UAGE;QACK,iCAAc,GAArB,UAAsB,MAAsB;YACxC,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAChD,CAAC;QAED;;;UAGE;QACK,oCAAiB,GAAxB,UAAyB,SAA4B;YACjD,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAChD,CAAC;QAYM,2BAAQ,GAAf,UAAgB,GAAQ;YACpB,IAAI,GAAG,CAAC,WAAW,KAAK,gBAAgB,EAAE;gBACtC,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;aACnC;iBACI,IAAI,GAAG,CAAC,WAAW,KAAK,mBAAmB,EAAE;gBAC9C,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;aACtC;iBACI,IAAI,GAAG,CAAC,KAAK,KAAK,UAAU,EAAE;gBAC/B,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;aAClC;iBACI;gBACD,MAAM,IAAI,KAAK,CAAC,uHAAuH,CAAC,CAAC;aAC5I;QACL,CAAC;QAOM,6BAAU,GAAjB,UAAkB,GAAQ;YACtB,IAAI,GAAG,CAAC,WAAW,KAAK,gBAAgB,EAAE;gBACtC,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;aACrC;iBACI,IAAI,GAAG,CAAC,WAAW,KAAK,mBAAmB,EAAE;gBAC9C,OAAO,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;aACxC;iBACI;gBACD,MAAM,IAAI,KAAK,CAAC,2FAA2F,CAAC,CAAC;aAChH;QACL,CAAC;QAED;;;UAGE;QACK,mCAAgB,GAAvB,UAAwB,MAAsB;YAC1C,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAChD,CAAC;QAED;;;UAGE;QACK,sCAAmB,GAA1B,UAA2B,SAA4B;YACnD,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAChD,CAAC;QACL,eAAC;IAAD,CAAC;IAtHY,eAAQ,WAsHpB;IAED;;MAEE;IACF;QAAoC,kCAAQ;QASxC;;;;UAIE;QACF,wBAAY,QAAkB,EAAE,MAAc;YAA9C,YACI,kBAAM,QAAQ,CAAC,SAGlB;YAjBM,WAAK,GAAW,gBAAgB,CAAC;YACjC,iBAAW,GAAW,gBAAgB,CAAC;YAe1C,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;;QACzB,CAAC;QAED;;;UAGE;QACK,8BAAK,GAAZ,UAAa,KAAa;YACtB,oEAAoE;YACpE,qDAAqD;YACrD,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC;QACzB,CAAC;QAED;;UAEE;QACK,6BAAI,GAAX;YACI,OAAO,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC/C,CAAC;QAED;;UAEE;QACK,sCAAa,GAApB;YACI,OAAO,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QACrC,CAAC;QAED;;;UAGE;QACK,yCAAgB,GAAvB,UAAwB,MAAsB;YAC1C,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC1F,CAAC;QAED;;;UAGE;QACK,4CAAmB,GAA1B,UAA2B,SAA4B;YACnD,IAAI,UAAU,GAAG,CAAC,SAAS,CAAC,QAAQ,KAAK,CAAC,CAAC;gBACvC,CAAC,CAAC,IAAI,CAAC,QAAQ;gBACf,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAE1E,IAAI,cAAc,GAAG,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAE7D,IAAI,cAAc,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE;gBAAE,OAAO,KAAK,CAAC;aAAE;YAClF,IAAI,cAAc,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE;gBAAE,OAAO,KAAK,CAAC;aAAE;YAEnF,IAAI,cAAc,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;gBAAE,OAAO,IAAI,CAAC;aAAE;YACpE,IAAI,cAAc,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;gBAAE,OAAO,IAAI,CAAC;aAAE;YAErE,IAAI,iBAAiB,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;YAE7I,OAAO,CAAC,iBAAiB,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QAC9D,CAAC;QAED;;;UAGE;QACK,sCAAa,GAApB,UAAqB,KAAe;YAChC,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QACnE,CAAC;QAED;;;UAGE;QACK,uCAAc,GAArB,UAAsB,MAAsB;YACxC,OAAO,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC;QAC3F,CAAC;QAED;;;UAGE;QACK,0CAAiB,GAAxB,UAAyB,SAA4B;YACjD,IAAI,OAAO,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC;YAElC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;oBACjC,OAAO,KAAK,CAAC;iBAChB;aACJ;YAED,OAAO,IAAI,CAAC;QAChB,CAAC;QACL,qBAAC;IAAD,CAAC,CAzGmC,QAAQ,GAyG3C;IAzGY,qBAAc,iBAyG1B;IAED;;MAEE;IACF;QAAuC,qCAAQ;QAS3C;;;;UAIE;QACF,2BAAY,QAAkB,EAAE,IAAY;YAA5C,YACI,kBAAM,QAAQ,CAAC,SAElB;YAhBM,WAAK,GAAW,mBAAmB,CAAC;YACpC,iBAAW,GAAW,mBAAmB,CAAC;YAc7C,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;QACrB,CAAC;QAED;;;;UAIE;QACK,iCAAK,GAAZ,UAAa,CAAS,EAAE,CAAS;YAC7B,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;YACrB,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC;QAC1B,CAAC;QAKD,sBAAW,sCAAO;YAHlB;;cAEE;iBACF;gBACI,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;oBACrB,OAAO,IAAI,iEAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;iBACtG;gBAED,OAAO,IAAI,iEAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YAClJ,CAAC;;;WAAA;QAKD,sBAAW,uCAAQ;YAHnB;;cAEE;iBACF;gBACI,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;oBACrB,OAAO,IAAI,iEAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;iBACtG;gBAED,OAAO,IAAI,iEAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YAClJ,CAAC;;;WAAA;QAKD,sBAAW,sCAAO;YAHlB;;cAEE;iBACF;gBACI,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;oBACrB,OAAO,IAAI,iEAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;iBACtG;gBAED,OAAO,IAAI,iEAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YAClJ,CAAC;;;WAAA;QAKD,sBAAW,uCAAQ;YAHnB;;cAEE;iBACF;gBACI,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;oBACrB,OAAO,IAAI,iEAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;iBACtG;gBAED,OAAO,IAAI,iEAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YAClJ,CAAC;;;WAAA;QAED;;UAEE;QACK,mCAAO,GAAd;YACI,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtE,CAAC;QAED;;;UAGE;QACK,4CAAgB,GAAvB,UAAwB,MAAsB;YAC1C,OAAO,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QAC5C,CAAC;QAED;;;UAGE;QACK,+CAAmB,GAA1B,UAA2B,SAA4B;YACnD,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,SAAS,CAAC,QAAQ,KAAK,CAAC,EAAE;gBACjD,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,EACxB,UAAU,GAAG,IAAI,CAAC,QAAQ,EAC1B,YAAY,GAAG,SAAS,CAAC,OAAO,EAChC,aAAa,GAAG,SAAS,CAAC,QAAQ,CAAC;gBAEvC,OAAO,YAAY,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,IAAI,YAAY,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC;aAC/I;iBACI,IAAI,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAC,qFAAqF;gBAC/L,IAAI,QAAQ,GAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACxM,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;gBAChC,IAAI,aAAa,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC;gBAExC,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC9C,IAAI,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACtB,IAAI,aAAa,GAAG,uFAAe,CAAC,oBAAoB,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;oBAC1E,IAAI,gBAAgB,GAAG,uFAAe,CAAC,oBAAoB,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC;oBAEhF,eAAe;oBACf,IAAI,gBAAgB,CAAC,GAAG,GAAG,aAAa,CAAC,GAAG,IAAI,aAAa,CAAC,GAAG,GAAG,gBAAgB,CAAC,GAAG,EAAE;wBACtF,OAAO,KAAK,CAAC;qBAChB;iBACJ;gBAED,OAAO,IAAI,CAAC;aACf;YAED,OAAO,KAAK,CAAC;QACjB,CAAC;QAED;;;UAGE;QACK,yCAAa,GAApB,UAAqB,KAAe;YAChC,IAAI,aAAa,GAAW,IAAI,CAAC,QAAQ,CAAC;YAE1C,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;gBACrB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;gBAClB,KAAK,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,CAAC;aAC7D;YAED,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,EACxB,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC;YAE/B,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC;YAE9B,OAAO,KAAK,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC;QAClH,CAAC;QAED;;;UAGE;QACK,0CAAc,GAArB,UAAsB,MAAsB;YACxC,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,iEAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACzF,IAAI,CAAC,aAAa,CAAC,IAAI,iEAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;gBACtF,IAAI,CAAC,aAAa,CAAC,IAAI,iEAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACtF,IAAI,CAAC,aAAa,CAAC,IAAI,iEAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;QAC/F,CAAC;QAED;;;UAGE;QACK,6CAAiB,GAAxB,UAAyB,SAA4B;YACjD,IAAI,OAAO,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC;YAElC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;oBACjC,OAAO,KAAK,CAAC;iBAChB;aACJ;YAED,OAAO,IAAI,CAAC;QAChB,CAAC;QACL,wBAAC;IAAD,CAAC,CAzKsC,QAAQ,GAyK9C;IAzKY,wBAAiB,oBAyK7B;AACL,CAAC,EAvZa,MAAM,KAAN,MAAM,QAuZnB;;;;;;;;;;;AC1Z6D;AAE9D;;EAEE;AACF;IAsBI,kBAAY,CAAU,EAAE,CAAU;QArB3B,UAAK,GAAW,UAAU,CAAC;QAsB9B,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAChB,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;IAKD,sBAAkB,gBAAI;QAHtB;;UAEE;aACF;YACI,OAAO,IAAI,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9B,CAAC;;;OAAA;IAKD,sBAAkB,eAAG;QAHrB;;UAEE;aACF;YACI,OAAO,IAAI,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9B,CAAC;;;OAAA;IAED;;;MAGE;IACK,0BAAO,GAAd,UAAe,MAAgB;QAC3B,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,EAAE,EAC1B,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QAEnC,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;IAClF,CAAC;IAED;;;MAGE;IACK,8BAAW,GAAlB,UAAmB,MAAgB;QAC/B,OAAO,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;IAClE,CAAC;IAeM,+BAAY,GAAnB,UAAoB,KAAe,EAAE,KAAa,EAAE,SAAqB;QAArB,yCAAqB;QACrE,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACzB,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAEzB,OAAO,IAAI,QAAQ,CACf,8EAAW,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC,EACnF,8EAAW,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC,CACtF,CAAC;IACN,CAAC;IAED;;;MAGE;IACK,wBAAK,GAAZ,UAAa,MAA+B;QACxC,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACxB,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC;IAED;;;MAGE;IACK,0BAAO,GAAd,UAAe,MAA6B;QACxC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACf,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAED;;MAEE;IACK,6BAAU,GAAjB;QACI,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QACjC,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,SAAS,EAAE,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;IAChE,CAAC;IAED;;MAEE;IACK,4BAAS,GAAhB;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAED;;MAEE;IACK,yBAAM,GAAb;QACI,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;IAC5B,CAAC;IAED;;;MAGE;IACK,sBAAG,GAAV,UAAW,MAAgB;QACvB,OAAO,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;IACjD,CAAC;IAED;;MAEE;IACK,sBAAG,GAAV;QACI,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED;;MAEE;IACK,uBAAI,GAAX;QACI,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED;;MAEE;IACK,uBAAI,GAAX;QACI,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAEjC,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,SAAS,EAAE,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;IAChE,CAAC;IAED;;MAEE;IACK,2BAAQ,GAAf,UAAgB,MAAgB;QAC5B,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAClF,CAAC;IAiBM,sBAAG,GAAV,UAAW,GAAQ;QACf,IAAI,GAAG,CAAC,KAAK,KAAK,UAAU,EAAE;YAC1B,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;SACvD;aACI,IAAI,GAAG,CAAC,KAAK,KAAK,QAAQ,EAAE;YAC7B,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;SAChE;aACI;YACD,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;SACnD;IACL,CAAC;IAiBM,2BAAQ,GAAf,UAAgB,GAAQ;QACpB,IAAI,GAAG,CAAC,KAAK,KAAK,UAAU,EAAE;YAC1B,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;SACvD;aACI,IAAI,GAAG,CAAC,KAAK,KAAK,QAAQ,EAAE;YAC7B,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;SAChE;aACI;YACD,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;SACnD;IACL,CAAC;IAiBM,2BAAQ,GAAf,UAAgB,GAAQ;QACpB,IAAI,GAAG,CAAC,KAAK,KAAK,UAAU,EAAE;YAC1B,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;SACvD;aACI,IAAI,GAAG,CAAC,KAAK,KAAK,QAAQ,EAAE;YAC7B,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;SAChE;aACI;YACD,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;SACnD;IACL,CAAC;IAiBM,+BAAY,GAAnB,UAAoB,GAAQ;QACxB,IAAI,GAAG,CAAC,KAAK,KAAK,UAAU,EAAE;YAC1B,OAAO,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;SACvD;aACI,IAAI,GAAG,CAAC,KAAK,KAAK,QAAQ,EAAE;YAC7B,OAAO,IAAI,QAAQ,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;SAChE;aACI;YACD,OAAO,IAAI,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;SACnD;IACL,CAAC;IAiBM,yBAAM,GAAb,UAAc,GAAQ;QAClB,IAAI,GAAG,CAAC,KAAK,KAAK,UAAU,EAAE;YAC1B,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;SACvD;aACI,IAAI,GAAG,CAAC,KAAK,KAAK,QAAQ,EAAE;YAC7B,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;SAChE;aACI;YACD,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;SACnD;IACL,CAAC;IAiBM,6BAAU,GAAjB,UAAkB,GAAQ;QACtB,IAAI,GAAG,CAAC,KAAK,KAAK,UAAU,EAAE;YAC1B,OAAO,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;SACvD;aACI,IAAI,GAAG,CAAC,KAAK,KAAK,QAAQ,EAAE;YAC7B,OAAO,IAAI,QAAQ,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;SAChE;aACI;YACD,OAAO,IAAI,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;SACnD;IACL,CAAC;IAED;;MAEE;IACK,yBAAM,GAAb;QACI,OAAO,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;IACxC,CAAC;IAED;;MAEE;IACK,yBAAM,GAAb;QACI,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAClD,CAAC;IAED;;;MAGE;IACK,6BAAU,GAAjB,UAAkB,MAAgB;QAC9B,OAAO,IAAI,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC;IACtD,CAAC;IAED;;MAEE;IACK,wBAAK,GAAZ;QACI,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACxC,CAAC;IAED;;MAEE;IACK,2BAAQ,GAAf;QACI,OAAO,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC;IAC9C,CAAC;IACL,eAAC;AAAD,CAAC;;;;;;;;;;;AC9WK,qBAAsB,GAAW,EAAE,QAAgB;IACrD,IAAI,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;IAExC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,UAAU,CAAC,GAAG,UAAU,CAAC;AACrD,CAAC;AAAA,CAAC;;;;;;;;;;;ACHgC;AAElC;IAAA;IAmBA,CAAC;IAlBiB,oCAAoB,GAAlC,UAAmC,IAAc,EAAE,QAAoB;QACnE,IAAI,GAAG,GAAW,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAI,GAAG,GAAW,GAAG,CAAC;QAEtB,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC9C,IAAI,MAAM,GAAa,QAAQ,CAAC,CAAC,CAAC,CAAC;YACnC,IAAI,KAAK,GAAW,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAEvD,IAAI,KAAK,GAAG,GAAG,EAAE;gBACb,GAAG,GAAG,KAAK,CAAC;aACf;iBACI,IAAI,KAAK,GAAG,GAAG,EAAE;gBAClB,GAAG,GAAG,KAAK,CAAC;aACf;SACJ;QAED,OAAO,IAAI,8CAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAChC,CAAC;IACL,sBAAC;AAAD,CAAC;;;;;;;;;;ACtBD;AAAA;IAII,gBAAY,GAAW,EAAE,GAAW;QAChC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACnB,CAAC;IACL,aAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACR+C;AAEN;AACiB;AAIL;AACG;AACE;AAErD,IAAQ,SAAS,CAomBtB;AApmBD,WAAc,SAAS;IACnB;;MAEE;IACF;QAcI;;;UAGE;QACF,oBAAY,MAAwB;YAjB7B,UAAK,GAAW,YAAY,CAAC;YAkBhC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YAEvB,IAAI,CAAC,MAAM,GAAqB,MAAO,CAAC;YACxC,IAAI,CAAC,GAAG,GAAG,UAAU,CAAC,cAAc,EAAE,CAAC;YAEvC,IAAI,CAAC,YAAY,GAAG,IAAI,sEAAa,EAAiB,CAAC;YACvD,IAAI,CAAC,WAAW,GAAG,IAAI,sEAAa,EAAc,CAAC;QACvD,CAAC;QAKD,sBAAW,mCAAW;YAHtB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC;YAC7B,CAAC;;;WAAA;QAID,sBAAW,kCAAU;YAHrB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,WAAW,CAAC;YAC5B,CAAC;;;WAAA;QAED;;;UAGE;QACK,oCAAe,GAAtB,UAAuB,KAAiB;YACpC,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAChD,CAAC;QAED;;;UAGE;QACK,6BAAQ,GAAf,UAAgB,IAAmB;YAC/B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACnC,CAAC;QAED;;UAEE;QACK,4BAAO,GAAd;YACI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAC9B,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;gBAC1B,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;aAC9B;iBACI;gBACD,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;aAChE;QACL,CAAC;QA7Dc,yBAAc,GAAW,CAAC,CAAC;QA8D9C,iBAAC;KAAA;IAvEY,oBAAU,aAuEtB;IAED;;MAEE;IACF;QAMI,gCAAY,mBAA2B;YACnC,IAAI,CAAC,oBAAoB,GAAG,mBAAmB,CAAC;YAChD,IAAI,CAAC,oBAAoB,GAAG,sBAAsB,CAAC,2BAA2B,CAAC;YAC/E,IAAI,CAAC,SAAS,GAAG,IAAI,oEAAY,EAAE,CAAC;QACxC,CAAC;QAOD,sBAAW,uDAAmB;YAH9B;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,CAAC;YAC7C,CAAC;iBACD,UAA+B,OAAe;gBAC1C,IAAI,OAAO,CAAC,KAAK,KAAK,OAAO,CAAC,MAAM,EAAE;oBAClC,MAAM,IAAI,KAAK,CAAC,4EAA4E,CAAC,CAAC;iBACjG;gBAED,IAAI,CAAC,oBAAoB,GAAG,OAAO,CAAC;gBACpC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;YAC7B,CAAC;;;WARA;QAaD,sBAAW,uDAAmB;YAH9B;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,oBAAoB,CAAC;YACrC,CAAC;iBACD,UAA+B,OAAe;gBAC1C,IAAI,OAAO,CAAC,KAAK,KAAK,OAAO,CAAC,MAAM,EAAE;oBAClC,MAAM,IAAI,KAAK,CAAC,4EAA4E,CAAC,CAAC;iBACjG;qBACI,IAAI,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,KAAK,CAAC,EAAE;oBAC5D,MAAM,IAAI,KAAK,CAAC,mEAAmE,CAAC,CAAC;iBACxF;gBAED,IAAI,CAAC,oBAAoB,GAAG,OAAO,CAAC;gBACpC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;YAC7B,CAAC;;;WAXA;QAjCa,kDAA2B,GAAW,IAAI,2DAAM,CAAC,EAAE,CAAC,CAAC;QA6CvE,6BAAC;KAAA;IA9CY,gCAAsB,yBA8ClC;IAED;;MAEE;IACF;QAMI;;;UAGE;QACF,uBAAY,CAAa;YACrB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QAClB,CAAC;QACL,oBAAC;IAAD,CAAC;IAbY,uBAAa,gBAazB;IAOD;;MAEE;IACF;QASI;;UAEE;QACF,0BAAY,aAAqC;YAX1C,UAAK,GAAW,kBAAkB,CAAC;YAYtC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;YAChC,IAAI,CAAC,SAAS,GAAG,IAAI,QAAQ,CAAC,aAAa,CAAC,CAAC;YAC7C,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,YAAY,GAAG,IAAI,sEAAa,EAA0B,CAAC;QACpE,CAAC;QAKD,sBAAW,yCAAW;YAHtB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC;YAC7B,CAAC;;;WAAA;QAgBM,kCAAO,GAAd,UAAe,GAAe,EAAE,cAA+B;YAA/D,iBAmBC;YAnB+B,uDAA+B;YAC3D,IAAI,OAAO,GAAwB;gBAC/B,UAAU,EAAE,GAAG;gBACf,SAAS,EAAE,UAAC,UAAU;oBAClB,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;gBAC/B,CAAC;aACJ,CAAC;YAEF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YAErB,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YAEvC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAEhC,IAAI,CAAC,cAAc,EAAE;gBACjB,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACxC;YAED,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC/B,CAAC;QAED;;;;UAIE;QACK,oCAAS,GAAhB,UAAiB,GAAe;YAC5B,IAAI,KAAa,CAAC;YAElB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC/C,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,EAAE;oBACjD,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;oBAClF,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC/B,MAAM;iBACT;aACJ;YAED,KAAK,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAEhD,IAAI,KAAK,IAAI,CAAC,EAAE;gBACZ,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aAC/C;YAED,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC/B,CAAC;QAED;;;UAGE;QACK,iCAAM,GAAb,UAAc,QAAkB;YAC5B,IAAI,UAAsB,EACtB,IAAY,EACZ,UAA6B,EAC7B,QAAQ,GAAgC,EAAE,EAC1C,SAAS,GAA6B,IAAI,KAAK,EAAqB,CAAC;YAEzE,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,0EAA0E;gBAC1E,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBAEhC,8BAA8B;gBAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACxD,UAAU,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;oBAC3C,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;oBAE5D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACxC,uCAAuC;wBACvC,IAAI,UAAU,CAAC,GAAG,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,UAAU,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;4BACnF,SAAS,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;yBAC/C;qBACJ;iBACJ;gBAED,4BAA4B;gBAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACvC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAEtD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;wBACjB,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;wBAEtB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC7D,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAE7D,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC9D;iBACJ;aACJ;QACL,CAAC;QAED;;UAEE;QACK,kCAAO,GAAd;YACI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBAEtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC/C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;iBACnD;gBAED,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;gBACvB,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;gBAChC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;gBAC5B,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;iBACI;gBACD,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;aACzE;QACL,CAAC;QAEO,kCAAO,GAAf,UAAgB,EAAc,EAAE,EAAc;YAC1C,OAAO,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;QACrF,CAAC;QAEL,uBAAC;IAAD,CAAC;IA7JY,0BAAgB,mBA6J5B;IAQD;QAOI,kBAAY,aAAqC;YAC7C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC,mBAAmB,CAAC;YACtD,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;YACzB,IAAI,CAAC,wBAAwB,GAAG,EAAE,CAAC;YAEnC,IAAI,CAAC,KAAK,GAAG,IAAI,YAAY,CAAC,IAAI,iEAAQ,CAAC,aAAa,CAAC,mBAAmB,CAAC,SAAS,EAAE,aAAa,CAAC,mBAAmB,CAAC,UAAU,CAAC,EAAE,aAAa,CAAC,mBAAmB,EAAE,aAAa,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;QACvN,CAAC;QAEM,yBAAM,GAAb,UAAc,GAAe,EAAE,cAA+B;YAA/B,uDAA+B;YAC1D,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;gBACzC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aACpB;YAED,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG;gBAC3B,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC;gBAC5B,UAAU,EAAE,GAAG;gBACf,cAAc,EAAE,cAAc;aACjC,CAAC;YAEF,IAAI,CAAC,cAAc,EAAE;gBACjB,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aACzE;QACL,CAAC;QAEM,yBAAM,GAAb,UAAc,GAAe;YACzB,IAAI,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YAE7C,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACpC,OAAO,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAE9C,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC;QAEM,sCAAmB,GAA1B,UAA2B,GAAe;YACtC,IAAI,IAAI,GAAiB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,EACtD,OAAO,GAAsB,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAE3D,0BAA0B;YAC1B,OAAO,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;gBACzB,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBAE/C,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;aACtB;YAED,OAAO,OAAO,CAAC;QACnB,CAAC;QAEM,wBAAK,GAAZ,UAAa,SAAmC;YAC5C,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACvC,CAAC;QAEM,yBAAM,GAAb,UAAc,KAAiB;YAC3B,IAAI,UAAU,GAAwD,IAAI,CAAC,KAAK,CAAC,MAAO,EACpF,eAAe,GAAG,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,EAC7E,gBAAgB,GAAG,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,EAC/E,eAAe,GAAG,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,EAC7E,gBAAgB,GAAG,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,EAC/E,qBAAqB,GAAG,IAAI,CAAC,GAAG,CAAC,eAAe,EAAE,gBAAgB,EAAE,eAAe,EAAE,gBAAgB,CAAC,EACtG,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EACrC,OAAqB,CAAC;YAE1B,IAAI,qBAAqB,KAAK,eAAe,EAAE,EAAE,oGAAoG;gBACjJ,OAAO,GAAG,IAAI,YAAY,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;gBACjF,OAAO,CAAC,SAAS,EAAE,CAAC;gBACpB,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC;aACtC;iBACI,IAAI,qBAAqB,KAAK,gBAAgB,EAAE,EAAE,oGAAoG;gBACvJ,OAAO,GAAG,IAAI,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;gBAClF,OAAO,CAAC,SAAS,EAAE,CAAC;gBACpB,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC;aACrC;iBACI,IAAI,qBAAqB,KAAK,eAAe,EAAE,EAAE,oGAAoG;gBACtJ,OAAO,GAAG,IAAI,YAAY,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;gBACjF,OAAO,CAAC,SAAS,EAAE,CAAC;gBACpB,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC;aACtC;iBACI,IAAI,qBAAqB,KAAK,gBAAgB,EAAE,EAAE,oGAAoG;gBACvJ,OAAO,GAAG,IAAI,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;gBAClF,OAAO,CAAC,SAAS,EAAE,CAAC;gBACpB,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC;aACrC;iBACI;gBACD,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;aAC5C;YAED,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC;YAC5B,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;QACzB,CAAC;QAEM,yBAAM,GAAb,UAAc,QAAkB;YAC5B,IAAI,IAAkB,EAAE,MAAsB,EAAE,UAAsB,EAAE,OAAqB,CAAC;YAE9F,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,wBAAwB,EAAE;gBAC1C,MAAM,GAAG,IAAI,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAC;gBAC3C,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;gBACnB,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;gBAE/B,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;gBAExB,sFAAsF;gBACtF,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;oBAChD,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;oBACxB,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;iBAC3C;qBACI;oBACD,mEAAmE;oBACnE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;wBACjE,4BAA4B;wBAC5B,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;qBACnD;yBACI,oEAAoE;qBACzE;wBACI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;qBACrC;iBACJ;gBAED,qFAAqF;gBACrF,IAAI,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,OAAO,CAAC;aACpD;QACL,CAAC;QAEM,0BAAO,GAAd;YACI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACzB;iBACI;gBACD,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;aAChE;QACL,CAAC;QACL,eAAC;IAAD,CAAC;IAzIY,kBAAQ,WAyIpB;IAED;QAAkC,gCAAU;QAQxC,sBAAY,QAAkB,EAAE,IAAY,EAAE,WAAmB,EAAE,MAA2B;YAA9F,YACI,kBAAM,IAAI,qDAAM,CAAC,iBAAiB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,SAMtD;YALG,KAAI,CAAC,YAAY,GAAG,WAAW,CAAC;YAChC,KAAI,CAAC,SAAS,GAAG,IAAI,KAAK,EAAgB,CAAC;YAC3C,KAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,EAAc,CAAC;YACxC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;;QAC9B,CAAC;QAED,sBAAW,kCAAQ;iBAAnB;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;YAC1B,CAAC;;;WAAA;QAED,sBAAW,sCAAY;iBAAvB;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC7B,CAAC;iBACD,UAAwB,QAAsB;gBAC1C,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC;YACjC,CAAC;;;WAHA;QAKD,sBAAW,uCAAa;iBAAxB;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC7B,CAAC;iBACD,UAAyB,QAAsB;gBAC3C,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC;YACjC,CAAC;;;WAHA;QAKD,sBAAW,sCAAY;iBAAvB;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC7B,CAAC;iBACD,UAAwB,QAAsB;gBAC1C,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC;YACjC,CAAC;;;WAHA;QAKD,sBAAW,uCAAa;iBAAxB;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC7B,CAAC;iBACD,UAAyB,QAAsB;gBAC3C,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC;YACjC,CAAC;;;WAHA;QAKM,oCAAa,GAApB;YACI,OAAO,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC;QAEM,gCAAS,GAAhB;YACI,IAAI,eAAe,GAAG,IAAI,2DAAM,CAAC,IAAI,CAAC,KAAK,CAA4B,IAAI,CAAC,MAAO,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,EACjG,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;YAE1C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YAEzB,IAAI,eAAe,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;gBACjD,OAAO;aACV;YAED,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,cAAc,CAAC,QAAQ,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAE,eAAe,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC;YACvI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,IAAI,iEAAQ,CAAC,cAAc,CAAC,CAAC,GAAG,eAAe,CAAC,KAAK,GAAG,CAAC,EAAE,cAAc,CAAC,CAAC,GAAG,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,eAAe,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC;YAC3L,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,IAAI,iEAAQ,CAAC,cAAc,CAAC,CAAC,GAAG,eAAe,CAAC,KAAK,GAAG,CAAC,EAAE,cAAc,CAAC,CAAC,GAAG,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,eAAe,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC;YAC3L,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,cAAc,CAAC,GAAG,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAE,eAAe,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC;QACtI,CAAC;QAEM,6BAAM,GAAb,UAAc,GAAe;YACzB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;gBACpB,IAAI,CAAC,SAAS,EAAE,CAAC;aACpB;YAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC5C,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;oBAC/C,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;iBACxC;aACJ;YAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAExB,OAAO,IAAI,CAAC;QAChB,CAAC;QAEM,oCAAa,GAApB,UAAqB,GAAe;YAChC,4EAA4E;YAC5E,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;gBACnC,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;oBACrB,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;iBACzC;aACJ;YAED,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC5B,CAAC;QAEM,4BAAK,GAAZ,UAAa,SAAmC;YAC5C,IAAI,OAAO,GAAG,IAAI,KAAK,EAAc,EACjC,KAAmB,CAAC;YAExB,4FAA4F;YAC5F,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC3C,IAAI,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE;oBAC/C,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;iBAClC;aACJ;YAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC5C,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAE1B,yDAAyD;gBACzD,kDAAkD;gBAClD,IAAI,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;oBAClC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;oBACjD,MAAM;iBACT;gBAED,2DAA2D;gBAC3D,qCAAqC;gBACrC,IAAI,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;oBAClC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC,CAAC;oBACrD,SAAS;iBACZ;gBAED,4DAA4D;gBAC5D,iDAAiD;gBACjD,IAAI,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;oBACpC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;iBACpD;aACJ;YAED,OAAO,OAAO,CAAC;QACnB,CAAC;QAEM,6BAAM,GAAb,UAAc,GAAe;YACzB,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAEvC,IAAI,KAAK,IAAI,CAAC,EAAE;gBACZ,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aAClC;QACL,CAAC;QAEM,yCAAkB,GAAzB;YACI,IAAI,OAAO,GAAG,IAAI,KAAK,EAAc,CAAC;YAEtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC5C,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,kBAAkB,EAAE,CAAC,CAAC;aACpE;YAED,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAExC,OAAO,OAAO,CAAC;QACnB,CAAC;QACL,mBAAC;IAAD,CAAC,CAzJiC,UAAU,GAyJ3C;IAzJY,sBAAY,eAyJxB;AACL,CAAC,EApmBa,SAAS,KAAT,SAAS,QAomBtB;;;;;;;;;AC3mBD;AAAA;;EAEE;AACF;IAuBI,gBAAY,KAAa,EAAE,MAAe;QAtBnC,UAAK,GAAW,QAAQ,CAAC;QAuB5B,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,OAAO,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;IACtE,CAAC;IAKD,sBAAkB,cAAI;QAHtB;;UAEE;aACF;YACI,OAAO,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5B,CAAC;;;OAAA;IAKD,sBAAkB,aAAG;QAHrB;;UAEE;aACF;YACI,OAAO,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5B,CAAC;;;OAAA;IAKD,sBAAW,0BAAM;QAHjB;;UAEE;aACF;YACI,OAAO,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QAC/E,CAAC;;;OAAA;IAKD,sBAAW,6BAAS;QAHpB;;UAEE;aACF;YACI,OAAO,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QAC1B,CAAC;;;OAAA;IAKD,sBAAW,8BAAU;QAHrB;;UAEE;aACF;YACI,OAAO,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAC3B,CAAC;;;OAAA;IAED;;;MAGE;IACK,sBAAK,GAAZ,UAAa,MAA+B;QACxC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,CAAC;IAED;;;MAGE;IACK,wBAAO,GAAd,UAAe,MAA6B;QACxC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxB,CAAC;IAiBM,oBAAG,GAAV,UAAW,GAAQ;QACf,IAAI,GAAG,CAAC,KAAK,KAAK,QAAQ,EAAE;YACxB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;SACvE;aACI,IAAI,GAAG,CAAC,KAAK,KAAK,UAAU,EAAE;YAC/B,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;SAC9D;aACI;YACD,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,EAAE,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;SAC1D;IACL,CAAC;IAiBM,yBAAQ,GAAf,UAAgB,GAAQ;QACpB,IAAI,GAAG,CAAC,KAAK,KAAK,QAAQ,EAAE;YACxB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;SACvE;aACI,IAAI,GAAG,CAAC,KAAK,KAAK,UAAU,EAAE;YAC/B,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;SAC9D;aACI;YACD,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,EAAE,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;SAC1D;IACL,CAAC;IAiBM,yBAAQ,GAAf,UAAgB,GAAQ;QACpB,IAAI,GAAG,CAAC,KAAK,KAAK,QAAQ,EAAE;YACxB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;SACvE;aACI,IAAI,GAAG,CAAC,KAAK,KAAK,UAAU,EAAE;YAC/B,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;SAC9D;aACI;YACD,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,EAAE,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;SAC1D;IACL,CAAC;IAiBM,6BAAY,GAAnB,UAAoB,GAAQ;QACxB,IAAI,GAAG,CAAC,KAAK,KAAK,QAAQ,EAAE;YACxB,OAAO,IAAI,MAAM,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;SACvE;aACI,IAAI,GAAG,CAAC,KAAK,KAAK,UAAU,EAAE;YAC/B,OAAO,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;SAC9D;aACI;YACD,OAAO,IAAI,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;SAC1D;IACL,CAAC;IAiBM,uBAAM,GAAb,UAAc,GAAQ;QAClB,IAAI,GAAG,CAAC,KAAK,KAAK,QAAQ,EAAE;YACxB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;SACvE;aACI,IAAI,GAAG,CAAC,KAAK,KAAK,UAAU,EAAE;YAC/B,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;SAC9D;aACI;YACD,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,EAAE,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;SAC1D;IACL,CAAC;IAiBM,2BAAU,GAAjB,UAAkB,GAAQ;QACtB,IAAI,GAAG,CAAC,KAAK,KAAK,QAAQ,EAAE;YACxB,OAAO,IAAI,MAAM,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;SACvE;aACI,IAAI,GAAG,CAAC,KAAK,KAAK,UAAU,EAAE;YAC/B,OAAO,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;SAC9D;aACI;YACD,OAAO,IAAI,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;SAC1D;IACL,CAAC;IAED;;MAEE;IACK,uBAAM,GAAb;QACI,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IACzD,CAAC;IAED;;;MAGE;IACK,2BAAU,GAAjB,UAAkB,IAAY;QAC1B,OAAO,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC;IACpE,CAAC;IAED;;MAEE;IACK,sBAAK,GAAZ;QACI,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IAC/C,CAAC;IAED;;MAEE;IACK,yBAAQ,GAAf;QACI,OAAO,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;IACvD,CAAC;IACL,aAAC;AAAD,CAAC;;;;;;;;;;ACnRD;AAAA;;EAEE;AACF;IAKI;;MAEE;IACF;QAPO,UAAK,GAAW,eAAe,CAAC;QAQnC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACvB,CAAC;IAED;;;MAGE;IACK,4BAAI,GAAX,UAAY,MAAuB;QAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;IAED;;;;MAIE;IACK,+BAAO,GAAd,UAAe,MAAuB,EAAE,YAAoB;QACxD,IAAI,IAAI,GAAG,IAAI,EACX,QAAQ,GAAW,CAAC,EACpB,IAAI,GAAoB;YACpB,IAAI,EAAE,QAAQ,IAAI,YAAY,EAAE;gBAC5B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aACrB;YAED,aAAa;YACb,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAClC,CAAC,CAAC;QAEN,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED;;;MAGE;IACK,8BAAM,GAAb,UAAc,MAAuB;QACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC3C,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE;gBAC7B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAE3B,OAAO;aACV;SACJ;IACL,CAAC;IAED;;MAEE;IACK,mCAAW,GAAlB;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;IACpC,CAAC;IAED;;;MAGE;IACK,+BAAO,GAAd,UAAe,GAAM;QACjB,IAAI,OAAO,CAAC;QAEZ,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;YACpB,4EAA4E;YAC5E,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAEjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aACnB;SACJ;IACL,CAAC;IAED;;MAEE;IACK,+BAAO,GAAd;QACI,kBAAkB;QAClB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACvB,CAAC;IACL,oBAAC;AAAD,CAAC;;;;;;;;;;ACxFD;AAAA;;EAEE;AACF;IAKI;;MAEE;IACF;QAPO,UAAK,GAAW,cAAc,CAAC;QAQlC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACvB,CAAC;IAED;;;MAGE;IACK,2BAAI,GAAX,UAAY,MAAgB;QACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;IAED;;;;MAIE;IACK,8BAAO,GAAd,UAAe,MAAgB,EAAE,YAAoB;QACjD,IAAI,IAAI,GAAG,IAAI,EACX,QAAQ,GAAW,CAAC,EACpB,IAAI,GAAa;YACb,IAAI,EAAE,QAAQ,IAAI,YAAY,EAAE;gBAC5B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aACrB;YAED,aAAa;YACb,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAClC,CAAC,CAAC;QAEN,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED;;;MAGE;IACK,6BAAM,GAAb,UAAc,MAAgB;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC3C,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE;gBAC7B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAE3B,OAAO;aACV;SACJ;IACL,CAAC;IAED;;MAEE;IACK,kCAAW,GAAlB;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;IACpC,CAAC;IAED;;MAEE;IACK,8BAAO,GAAd;QACI,IAAI,OAAO,CAAC;QAEZ,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;YACpB,4EAA4E;YAC5E,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAEjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;aAChB;SACJ;IACL,CAAC;IAED;;MAEE;IACK,8BAAO,GAAd;QACI,kBAAkB;QAClB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACvB,CAAC;IACL,mBAAC;AAAD,CAAC;;;;;;;;;;ACvFD;AAAA;;EAEE;AACF;IAKI;;MAEE;IACF;QAPO,UAAK,GAAW,eAAe,CAAC;QAQnC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACvB,CAAC;IAED;;;MAGE;IACK,4BAAI,GAAX,UAAY,MAAiC;QACzC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;IAED;;;;MAIE;IACK,+BAAO,GAAd,UAAe,MAAiC,EAAE,YAAoB;QAClE,IAAI,IAAI,GAAG,IAAI,EACX,QAAQ,GAAW,CAAC,EACpB,IAAI,GAA8B;YAC9B,IAAI,EAAE,QAAQ,IAAI,YAAY,EAAE;gBAC5B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aACrB;YAED,aAAa;YACb,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAClC,CAAC,CAAC;QAEN,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED;;;MAGE;IACK,8BAAM,GAAb,UAAc,MAAiC;QAC3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC3C,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE;gBAC7B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAE3B,OAAO;aACV;SACJ;IACL,CAAC;IAED;;MAEE;IACK,mCAAW,GAAlB;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;IACpC,CAAC;IAED;;;;MAIE;IACK,+BAAO,GAAd,UAAe,IAAO,EAAE,IAAO;QAC3B,IAAI,OAAO,CAAC;QAEZ,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;YACpB,4EAA4E;YAC5E,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAEjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aAC1B;SACJ;IACL,CAAC;IAED;;MAEE;IACK,+BAAO,GAAd;QACI,kBAAkB;QAClB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACvB,CAAC;IACL,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5FqD;AACN;AACN;AAEe;AAKE;AACb;AACa;AAET;AAE5C,IAAQ,QAAQ,CA6iIrB;AA7iID,WAAc,QAAQ;IAElB;QAGI;YACI,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QAC3B,CAAC;QAED,sBAAW,uCAAW;iBAAtB;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;YAC5C,CAAC;iBACD,UAAuB,KAAa;gBAChC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,GAAG,KAAK;YAC5C,CAAC;;;WAHA;QAKD,sBAAW,qCAAS;iBAApB;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;YAC1C,CAAC;iBACD,UAAqB,KAAa;gBAC9B,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC;YAC3C,CAAC;;;WAHA;QAKD,sBAAW,uCAAW;iBAAtB;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;YAC5C,CAAC;iBACD,UAAuB,KAAa;gBAChC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC;YAC7C,CAAC;;;WAHA;QAKD,sBAAW,qCAAS;iBAApB;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;YAC1C,CAAC;iBACD,UAAqB,KAAa;gBAC9B,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC;YAC3C,CAAC;;;WAHA;QAKD,sBAAW,mCAAO;iBAAlB;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;YACxC,CAAC;iBACD,UAAmB,KAAa;gBAC5B,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;YACzC,CAAC;;;WAHA;QAKD,sBAAW,oCAAQ;iBAAnB;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;YACzC,CAAC;iBACD,UAAoB,KAAa;gBAC7B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC;YAC1C,CAAC;;;WAHA;QAKD,sBAAW,sCAAU;iBAArB;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;YAC3C,CAAC;iBACD,UAAsB,KAAa;gBAC/B,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC;YAC5C,CAAC;;;WAHA;QAKD,sBAAW,yCAAa;iBAAxB;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;YAC9C,CAAC;iBACD,UAAyB,KAAa;gBAClC,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,GAAG,KAAK,CAAC;YAC/C,CAAC;;;WAHA;QAKD,sBAAW,yCAAa;iBAAxB;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;YAC9C,CAAC;iBACD,UAAyB,KAAa;gBAClC,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,GAAG,KAAK,CAAC;YAC/C,CAAC;;;WAHA;QAKD,sBAAW,sCAAU;iBAArB;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;YAC3C,CAAC;iBACD,UAAsB,KAAa;gBAC/B,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC;YAC5C,CAAC;;;WAHA;QAKD,sBAAW,uCAAW;iBAAtB;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;YAC5C,CAAC;iBACD,UAAuB,KAAa;gBAChC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC;YAC7C,CAAC;;;WAHA;QAKD,sBAAW,oDAAwB;iBAAnC;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC,0BAA0B,CAAC,CAAC;YACzD,CAAC;iBACD,UAAoC,KAAa;gBAC7C,IAAI,CAAC,YAAY,CAAC,0BAA0B,CAAC,GAAG,KAAK,CAAC;YAC1D,CAAC;;;WAHA;QAKD,sBAAW,gCAAI;iBAAf;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YACrC,CAAC;iBACD,UAAgB,KAAa;gBACzB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;YACtC,CAAC;;;WAHA;QAKD,sBAAW,qCAAS;iBAApB;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;YAC1C,CAAC;iBACD,UAAqB,KAAa;gBAC9B,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC;YAC3C,CAAC;;;WAHA;QAKD,sBAAW,wCAAY;iBAAvB;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;YAC7C,CAAC;iBACD,UAAwB,KAAa;gBACjC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,GAAG,KAAK,CAAC;YAC9C,CAAC;;;WAHA;QAKM,wCAAe,GAAtB,UAAuB,OAAiC;YACpD,KAAK,IAAI,GAAG,IAAI,IAAI,CAAC,YAAY,EAAE;gBAC/B,aAAa;gBACb,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;aACzC;QACL,CAAC;QACL,qBAAC;IAAD,CAAC;IAtHY,uBAAc,iBAsH1B;IAED;;MAEE;IACF;QAoCI;;;UAGE;QACF,mBAAY,QAAkB;YAvCvB,UAAK,GAAW,WAAW,CAAC;YAwC/B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,MAAM,GAAG,IAAI,cAAc,EAAE,CAAC;YACnC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,IAAI,CAAC,wBAAwB,GAAG,EAAE,CAAC;YACnC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,WAAW,GAAG,IAAI,sEAAa,EAAa,CAAC;QACtD,CAAC;QAKD,sBAAW,uCAAgB;YAH3B;;cAEE;iBACF;gBACI,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,EACxB,IAAI,GAAqB,IAAI,CAAC;gBAElC,4DAA4D;gBAC5D,OAAO,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE;oBACvB,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC1C;gBAED,OAAO,QAAQ,CAAC;YACpB,CAAC;;;WAAA;QAKD,sBAAW,iCAAU;YAHrB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,WAAW,CAAC;YAC5B,CAAC;;;WAAA;QAKD,sBAAW,8BAAO;YAHlB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;YACnC,CAAC;iBACD,UAAmB,KAAa;gBAC5B,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC;YACpC,CAAC;;;WAHA;QAKD;;UAEE;QACK,+BAAW,GAAlB;YACI,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACnC,CAAC;QAED;;;;UAIE;QACK,4BAAQ,GAAf,UAAgB,OAAkB;YAAlC,iBAiBC;YAhBG,IAAI,cAA4C,CAAC;YAEjD,IAAI,OAAO,CAAC,MAAM,KAAK,IAAI,EAAE;gBACzB,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;aAC5E;YAED,cAAc,GAAG,UAAC,OAAkB;gBAChC,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YAC9B,CAAC,CAAC;YAEF,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;YACtB,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAExC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC7B,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YACnD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAC/C,CAAC;QAED;;;UAGE;QACK,+BAAW,GAAlB,UAAmB,OAAkB;YACjC,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAE5C,IAAI,KAAK,IAAI,CAAC,EAAE;gBACZ,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;gBACpC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC9E,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBAChC,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBAC/C,OAAO,IAAI,CAAC;aACf;YAED,OAAO,KAAK,CAAC;QACjB,CAAC;QAEM,8BAAU,GAAjB,UAAkB,OAAiC;YAC/C,OAAO,CAAC,IAAI,EAAE,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;YAErC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAEpD,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;gBACrB,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACjC;QACL,CAAC;QAEM,4BAAQ,GAAf,UAAgB,OAAiC;YAC7C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC5C,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;oBAC3B,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBACnC;aACJ;YAED,OAAO,CAAC,OAAO,EAAE,CAAC;QACtB,CAAC;QAED;;;UAGE;QACK,wBAAI,GAAX,UAAY,OAAiC;YACzC,MAAM,IAAI,KAAK,CAAC,oEAAoE,CAAC,CAAC;QAC1F,CAAC;QAED;;UAEE;QACK,iCAAa,GAApB;YACI,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;QAC1E,CAAC;QAED;;;UAGE;QACK,yBAAK,GAAZ,UAAa,KAAa;YACtB,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAC;QAClE,CAAC;QAED;;UAEE;QACK,yBAAK,GAAZ;YACI,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAC;QAClE,CAAC;QAED,kDAAkD;QAC3C,0BAAM,GAAb,UAAc,OAAkB;YAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC5C,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;aAC/C;YAED,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC/B,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YACjC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC/B,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QACjC,CAAC;QAED;;UAEE;QACK,2BAAO,GAAd;YACI,IAAI,aAAa,CAAC;YAElB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBAEtB,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAExC,sEAAsE;gBACtE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC3C,aAAa,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;iBAC9B;gBAED,OAAO,IAAI,CAAC,SAAS,CAAC;gBACtB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAC9B,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;aAC7B;iBACI;gBACD,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;aAC7D;QACL,CAAC;QAhMa,qBAAW,GAA2C,UAAC,CAAY,EAAE,CAAY,IAAO,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAiMxI,gBAAC;KAAA;IA9NY,kBAAS,YA8NrB;IAED;;MAEE;IACF;QAA4B,0BAAS;QAoDjC,gBAAY,KAAa,EAAE,KAAa,EAAE,GAAW,EAAE,GAAW,EAAE,SAAqB,EAAE,KAAW;YAAlC,yCAAqB;YAAzF,YACI,kBAAM,iEAAQ,CAAC,IAAI,CAAC,SAoBvB;YAxEM,WAAK,GAAW,QAAQ,CAAC;YAsD5B,KAAI,CAAC,KAAK,GAAG,IAAI,iEAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YACxC,KAAI,CAAC,GAAG,GAAG,IAAI,iEAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YAClC,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,KAAI,CAAC,cAAc,EAAE,CAAC;YAEtB,KAAI,CAAC,iBAAiB,GAAG,UAAC,KAAY;gBAClC,KAAI,CAAC,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;YAC/C,CAAC,CAAC;YAEF,IAAI,OAAO,KAAK,KAAK,WAAW,EAAE;gBAC9B,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;oBAC3B,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;iBAC5B;gBACD,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;aAC1C;iBACI;gBACD,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC;aAChD;;QACL,CAAC;QAKD,sBAAW,wBAAI;YAHf;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC;YACtB,CAAC;iBACD,UAAgB,WAAqB;gBACjC,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC;gBACzB,IAAI,CAAC,cAAc,EAAE,CAAC;YAC1B,CAAC;;;WAJA;QASD,sBAAW,sBAAE;YAHb;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,GAAG,CAAC;YACpB,CAAC;iBACD,UAAc,WAAqB;gBAC/B,IAAI,CAAC,GAAG,GAAG,WAAW,CAAC;gBACvB,IAAI,CAAC,cAAc,EAAE,CAAC;YAC1B,CAAC;;;WAJA;QASD,sBAAW,yBAAK;YAHhB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC;YAC7B,CAAC;iBACD,UAAiB,KAAK;gBAClB,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;oBAC3B,KAAK,GAAG,IAAI,KAAK,CAAM,KAAK,CAAC,CAAC;iBACjC;gBAED,aAAa;gBACb,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBAC1D,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,WAAW;gBACX,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBACxD,eAAe;gBACf,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;YAClC,CAAC;;;WAbA;QAkBD,sBAAW,6BAAS;YAHpB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;YACjC,CAAC;iBACD,UAAqB,KAAa;gBAC9B,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,KAAK,CAAC;YAClC,CAAC;;;WAHA;QAQD,sBAAW,2BAAO;YAHlB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;YAC/B,CAAC;iBACD,UAAmB,GAAW;gBAC1B,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC;YAC9B,CAAC;;;WAHA;QAKD;;;UAGE;QACK,qBAAI,GAAX,UAAY,OAAiC;YACzC,+GAA+G;YAC/G,yBAAyB;YACzB,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;gBAC1D,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;aAC1D;YAED,iBAAM,UAAU,YAAC,OAAO,CAAC,CAAC;YAE1B,yHAAyH;YACzH,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACjD,IAAI,CAAC,YAAY,EAAE,CAAC;aACvB;YAED,oDAAoD;YACpD,OAAO,CAAC,SAAS,EAAE,CAAC;YACpB,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC/E,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC3E,OAAO,CAAC,MAAM,EAAE,CAAC;YAEjB,iBAAM,QAAQ,YAAC,OAAO,CAAC,CAAC;QAC5B,CAAC;QAED;;UAEE;QACK,8BAAa,GAApB;YACI,IAAI,MAAM,GAAG,IAAI,qDAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,2DAAM,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YAExG,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;YAErF,OAAO,MAAM,CAAC;QAClB,CAAC;QAED;;;UAGE;QACK,sBAAK,GAAZ,UAAa,KAAa;YACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;YACjF,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;QACjF,CAAC;QAED;;UAEE;QACK,sBAAK,GAAZ;YACI,IAAI,OAAO,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;YAE7G,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAE/B,iBAAM,MAAM,YAAC,OAAO,CAAC,CAAC;YAEtB,OAAO,OAAO,CAAC;QACnB,CAAC;QAEM,wBAAO,GAAd;YACI,iBAAM,OAAO,WAAE,CAAC;YAEhB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC9D,CAAC;QAEO,+BAAc,GAAtB;YACI,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YACvD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACjD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;YAC3D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACjD,CAAC;QAEO,6BAAY,GAApB;YACI,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YAC9D,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACjD,CAAC;QACL,aAAC;IAAD,CAAC,CA1N2B,SAAS,GA0NpC;IA1NY,eAAM,SA0NlB;IAED;;MAEE;IACF;QA4DI,aAAa;QACb,qBAAY,KAAU,EAAE,KAAc,EAAE,MAAe,EAAE,KAAiB,EAAE,KAAiB,EAAE,SAAyB,EAAE,UAA2B;YAA5F,iCAAiB;YAAE,iCAAiB;YAAE,6CAAyB;YAAE,gDAA2B;YAArJ,iBAuEC;YAtEG,IAAI,WAAW,GAAY,OAAO,KAAK,KAAK,WAAW,EAAE,aAAqB,CAAC;YAE/E,IAAI,CAAC,SAAS,GAAG,IAAI,sEAAa,EAAe,CAAC;YAElD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;gBAC3B,aAAa,GAAG,KAAK,CAAC;gBACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;gBAC1B,IAAI,CAAC,SAAS,GAAG,UAAC,CAAQ;oBACtB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBAEpB,IAAI,CAAC,WAAW,EAAE;wBACd,KAAI,CAAC,KAAK,GAAG,IAAI,2DAAM,CAAC,KAAI,CAAC,MAAM,CAAC,KAAK,EAAE,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;wBAC/D,KAAI,CAAC,YAAY,GAAG,iEAAQ,CAAC,IAAI,CAAC;wBAClC,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;qBACtC;oBAED,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAI,CAAC,CAAC;gBACjC,CAAC,CAAC;gBAEF,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,aAAa,CAAC;gBAChC,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;gBAEpC,IAAI,WAAW,EAAE;oBACb,aAAa;oBACb,IAAI,CAAC,KAAK,GAAG,IAAI,2DAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;oBACvC,IAAI,CAAC,YAAY,GAAG,IAAI,iEAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;oBAC/C,IAAI,CAAC,QAAQ,GAAG,IAAI,2DAAM,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;iBACrD;qBACI;oBACD,aAAa;oBACb,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,gDAAgD;iBACzE;aACJ;iBAAM;gBACH,SAAS,GAAG,KAAK,CAAC;gBAClB,UAAU,GAAG,KAAK,CAAC;gBACnB,aAAa;gBACb,KAAK,GAAG,KAAK,CAAC;gBACd,aAAa;gBACb,KAAK,GAAG,MAAM,CAAC;gBAEf,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,GAAG,CAAC;gBAEhC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBAErB,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;oBACtB,IAAI,CAAC,SAAS,GAAG,UAAC,CAAQ;wBACtB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;wBACpB,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAI,CAAC,CAAC;oBACjC,CAAC,CAAC;oBAEF,IAAI,CAAC,KAAK,GAAG,IAAI,2DAAM,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;iBACtD;qBAAM;oBACH,IAAI,CAAC,SAAS,GAAG,UAAC,CAAQ;wBACtB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;wBACpB,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAI,CAAC,CAAC;wBAC7B,KAAI,CAAC,KAAK,GAAG,IAAI,2DAAM,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;oBACvD,CAAC,CAAC;iBACL;gBAED,IAAI,CAAC,YAAY,GAAG,IAAI,iEAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gBAC/C,IAAI,CAAC,QAAQ,GAAG,IAAI,2DAAM,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;aACrD;YAED,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;gBACvB,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;aAC/D;iBAAM;gBACH,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;aACjC;QACL,CAAC;QAKD,sBAAW,iCAAQ;YAHnB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;YAC1B,CAAC;;;WAAA;QAKD,sBAAW,6BAAI;YAHf;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YAC9B,CAAC;;;WAAA;QAED;;UAEE;QACK,8BAAQ,GAAf;YACI,OAAO,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;QAED;;;;;;UAME;QACK,6BAAO,GAAd,UAAe,KAAa,EAAE,KAAa,EAAE,SAAiB,EAAE,UAAkB;YAC9E,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;QAC1H,CAAC;QAED;;UAEE;QACK,6BAAO,GAAd;YACI,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YACxD,aAAa;YACb,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;QAC7B,CAAC;QAED;;UAEE;QACK,2BAAK,GAAZ;YACI,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;aAC5H;iBAAM;gBACH,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACvC;QACL,CAAC;QACL,kBAAC;IAAD,CAAC;IA1LY,oBAAW,cA0LvB;IAGD;;MAEE;IACF;QAA8B,4BAAS;QA4BnC,kBAAY,CAAS,EAAE,CAAS,EAAE,KAAkB,EAAE,KAAoC,EAAE,MAAsC;YAA5E,gCAAgB,KAAK,CAAC,QAAQ,CAAC,KAAK;YAAE,kCAAiB,KAAK,CAAC,QAAQ,CAAC,MAAM;YAAlI,YACI,kBAAM,IAAI,iEAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAI5B;YAhCM,WAAK,GAAW,UAAU,CAAC;YA8B9B,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,KAAI,CAAC,IAAI,GAAG,IAAI,2DAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;;QAC1C,CAAC;QAED;;;UAGE;QACK,uBAAI,GAAX,UAAY,OAAiC;YACzC,iBAAM,UAAU,YAAC,OAAO,CAAC,CAAC;YAE1B,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAE,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YAEnO,iBAAM,QAAQ,YAAC,OAAO,CAAC,CAAC;QAC5B,CAAC;QAED;;UAEE;QACK,gCAAa,GAApB;YACI,IAAI,MAAM,GAAG,IAAI,qDAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YAEpE,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAEhC,OAAO,MAAM,CAAC;QAClB,CAAC;QAED;;;UAGE;QACK,wBAAK,GAAZ,UAAa,KAAa;YACtB,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC;YACzB,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC;QAC9B,CAAC;QAED;;UAEE;QACK,wBAAK,GAAZ;YACI,IAAI,OAAO,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAEpH,iBAAM,MAAM,YAAC,OAAO,CAAC,CAAC;YAEtB,OAAO,OAAO,CAAC;QACnB,CAAC;QACL,eAAC;IAAD,CAAC,CA7E6B,SAAS,GA6EtC;IA7EY,iBAAQ,WA6EpB;IACD;;MAEE;IACF;QAmMI,eAAY,CAAO,EAAE,CAAO,EAAE,CAAO,EAAE,CAAO;YAlMvC,UAAK,GAAW,OAAO,CAAC;YA8J/B,aAAa;YACL,YAAO,GAAW,SAAS,CAAC;YAoChC,IAAI,CAAC,SAAS,GAAG,IAAI,sEAAa,EAAS,CAAC;YAE5C,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBACzC,IAAI,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;aACrC;iBAAM;gBACH,uCAAuC;gBACvC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;aACd;QACL,CAAC;QAKD,sBAAW,2BAAQ;YAHnB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;YAC1B,CAAC;;;WAAA;QAKD,sBAAW,oBAAC;YAHZ;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,EAAE,CAAC;YACnB,CAAC;iBACD,UAAa,CAAS;gBAClB,aAAa;gBACb,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;gBACzB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;gBACpD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACjC,CAAC;;;WANA;QAWD,sBAAW,oBAAC;YAHZ;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,EAAE,CAAC;YACnB,CAAC;iBACD,UAAa,CAAS;gBAClB,aAAa;gBACb,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;gBACzB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;gBACpD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACjC,CAAC;;;WANA;QAWD,sBAAW,oBAAC;YAHZ;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,EAAE,CAAC;YACnB,CAAC;iBACD,UAAa,CAAS;gBAClB,aAAa;gBACb,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;gBACzB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;gBACpD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACjC,CAAC;;;WANA;QAWD,sBAAW,oBAAC;YAHZ;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,EAAE,CAAC;YACnB,CAAC;iBACD,UAAa,CAAS;gBAClB,aAAa;gBACb,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;gBACzB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACtC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACjC,CAAC;;;WANA;QAQD;;;;;UAKE;QACY,aAAO,GAArB,UAAsB,CAAS,EAAE,CAAS,EAAE,CAAS;YACjD,OAAO,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9B,CAAC;QAED;;;;;;UAME;QACY,cAAQ,GAAtB,UAAuB,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS;YAC7D,OAAO,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACjC,CAAC;QAED;;;;;;UAME;QACY,cAAQ,GAAtB,UAAuB,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS;YAC7D,OAAO,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACjC,CAAC;QAED;;;UAGE;QACY,aAAO,GAArB,UAAsB,GAAW;YAC7B,OAAO,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;QAC1B,CAAC;QAED;;;UAGE;QACY,cAAQ,GAAtB,UAAuB,IAAY;YAC/B,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC;QAED,mEAAmE;QACnE,kCAAkC;QACnB,2BAAqB,GAApC,UAAqC,GAAW;YAC5C,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;gBAClB,wDAAwD;gBACxD,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;aACnB;YAED,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;gBAClB,2CAA2C;gBAC3C,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,aAAa,EAAE,UAAU,CAAC,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE;oBAC9D,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACzC,CAAC,CAAC,CAAC;aACN;YAED,OAAO,GAAG,CAAC;QACf,CAAC;QAED,wDAAwD;QACxD,0CAA0C;QAC1C,4CAA4C;QACpC,yCAAyB,GAAjC,UAAkC,KAAa;YAC3C,sBAAsB;YACtB,IAAI,UAAU,GAAQ,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YAClD,aAAa;YACb,IAAI,MAAM,GAAU,IAAI,CAAC;YAEzB,IAAI,OAAO,CAAC,UAAU,CAAC,KAAK,QAAQ,EAAE;gBAClC,MAAM,GAAG,IAAI,CAAC,2BAA2B,CAAC,UAAU,CAAC,CAAC;aACzD;iBAAM;gBACH,MAAM,GAAG,UAAU,CAAC;aACvB;YAED,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;QACtB,CAAC;QAED,iDAAiD;QACzC,2CAA2B,GAAnC,UAAoC,GAAW;YAC3C,wCAAwC;YACxC,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;gBACvB,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aACvB;YAED,mCAAmC;YACnC,GAAG,GAAG,KAAK,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC;YAEvC,iCAAiC;YACjC,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;gBAClB,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC;aACpB;YAED,6CAA6C;YAC7C,+CAA+C;YAC/C,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;gBAClB,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;aAClC;YAED,wDAAwD;YACxD,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAC9B,CAAC;QAED,oDAAoD;QAC5C,wBAAQ,GAAhB,UAAiB,GAAW;YACxB,IAAI,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACvC,IAAI,MAAM,EAAE;gBACR,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBAErB,QAAQ,IAAI,EAAE;oBACV,KAAK,KAAK,EAAE,cAAc;wBACtB,OAAO,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpF,KAAK,MAAM,EAAE,kBAAkB;wBAC3B,OAAO,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC3G,KAAK,MAAM,EAAE,kBAAkB;wBAC3B,OAAO,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC9G;aACJ;YAED,sDAAsD;YACtD,0DAA0D;YAC1D,mDAAmD;YACnD,OAAO,KAAK,CAAC,OAAO,CAAC;QACzB,CAAC;QAED,+CAA+C;QAC/C,gDAAgD;QACxC,6BAAa,GAArB,UAAsB,GAAW;YAC7B,IAAI,CAAS,EACT,CAAS,EACT,CAAS,EACT,CAAS,CAAC;YAEd,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAChD,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAChD,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAChD,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC;YAEtD,OAAO,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACjC,CAAC;QAED,8EAA8E;QACtE,wBAAQ,GAAhB,UAAiB,GAAW;YACxB,IAAI,CAAS,EACT,CAAS,EACT,CAAS,CAAC;YAEd,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAChD,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAChD,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAEhD,OAAO,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9B,CAAC;QAED,qEAAqE;QACrE,gDAAgD;QACxC,+BAAe,GAAvB,UAAwB,KAAa;YACjC,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE;gBAC/B,OAAO,KAAK,CAAC;aAChB;YACD,aAAa;YACb,IAAI,OAAO,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,KAAK,WAAW,EAAE;gBAChE,aAAa;gBACb,OAAO,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;aAClD;YAED,OAAO,KAAK,CAAC;QACjB,CAAC;QAKD,sBAAkB,oBAAW;YAH7B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;YAClD,CAAC;;;WAAA;QAKD,sBAAkB,kBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAChD,CAAC;;;WAAA;QAKD,sBAAkB,qBAAY;YAH9B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YACnD,CAAC;;;WAAA;QAKD,sBAAkB,aAAI;YAHtB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAC3C,CAAC;;;WAAA;QAKD,sBAAkB,mBAAU;YAH5B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YACjD,CAAC;;;WAAA;QAKD,sBAAkB,cAAK;YAHvB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YAC5C,CAAC;;;WAAA;QAKD,sBAAkB,cAAK;YAHvB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YAC5C,CAAC;;;WAAA;QAKD,sBAAkB,eAAM;YAHxB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YAC7C,CAAC;;;WAAA;QAKD,sBAAkB,cAAK;YAHvB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YAC5C,CAAC;;;WAAA;QAKD,sBAAkB,uBAAc;YAHhC;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;YACrD,CAAC;;;WAAA;QAKD,sBAAkB,aAAI;YAHtB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAC3C,CAAC;;;WAAA;QAKD,sBAAkB,mBAAU;YAH5B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YACjD,CAAC;;;WAAA;QAKD,sBAAkB,cAAK;YAHvB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YAC5C,CAAC;;;WAAA;QAKD,sBAAkB,kBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAChD,CAAC;;;WAAA;QAKD,sBAAkB,kBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAChD,CAAC;;;WAAA;QAKD,sBAAkB,mBAAU;YAH5B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YACjD,CAAC;;;WAAA;QAKD,sBAAkB,kBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAChD,CAAC;;;WAAA;QAKD,sBAAkB,cAAK;YAHvB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YAC5C,CAAC;;;WAAA;QAKD,sBAAkB,uBAAc;YAHhC;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;YACrD,CAAC;;;WAAA;QAKD,sBAAkB,iBAAQ;YAH1B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YAC/C,CAAC;;;WAAA;QAKD,sBAAkB,gBAAO;YAHzB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YAC9C,CAAC;;;WAAA;QAKD,sBAAkB,aAAI;YAHtB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAC3C,CAAC;;;WAAA;QAKD,sBAAkB,iBAAQ;YAH1B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YAC/C,CAAC;;;WAAA;QAKD,sBAAkB,iBAAQ;YAH1B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YAC/C,CAAC;;;WAAA;QAKD,sBAAkB,sBAAa;YAH/B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YACpD,CAAC;;;WAAA;QAKD,sBAAkB,iBAAQ;YAH1B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YAC/C,CAAC;;;WAAA;QAKD,sBAAkB,kBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAChD,CAAC;;;WAAA;QAKD,sBAAkB,kBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAChD,CAAC;;;WAAA;QAKD,sBAAkB,oBAAW;YAH7B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;YAClD,CAAC;;;WAAA;QAKD,sBAAkB,uBAAc;YAHhC;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;YACrD,CAAC;;;WAAA;QAKD,sBAAkB,mBAAU;YAH5B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YACjD,CAAC;;;WAAA;QAKD,sBAAkB,mBAAU;YAH5B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YACjD,CAAC;;;WAAA;QAKD,sBAAkB,gBAAO;YAHzB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YAC9C,CAAC;;;WAAA;QAKD,sBAAkB,mBAAU;YAH5B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YACjD,CAAC;;;WAAA;QAKD,sBAAkB,qBAAY;YAH9B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YACnD,CAAC;;;WAAA;QAKD,sBAAkB,sBAAa;YAH/B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YACpD,CAAC;;;WAAA;QAKD,sBAAkB,sBAAa;YAH/B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YACpD,CAAC;;;WAAA;QAKD,sBAAkB,sBAAa;YAH/B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YACpD,CAAC;;;WAAA;QAKD,sBAAkB,mBAAU;YAH5B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YACjD,CAAC;;;WAAA;QAKD,sBAAkB,iBAAQ;YAH1B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YAC/C,CAAC;;;WAAA;QAKD,sBAAkB,oBAAW;YAH7B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;YAClD,CAAC;;;WAAA;QAKD,sBAAkB,gBAAO;YAHzB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YAC9C,CAAC;;;WAAA;QAKD,sBAAkB,mBAAU;YAH5B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YACjD,CAAC;;;WAAA;QAKD,sBAAkB,kBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAChD,CAAC;;;WAAA;QAKD,sBAAkB,oBAAW;YAH7B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;YAClD,CAAC;;;WAAA;QAKD,sBAAkB,oBAAW;YAH7B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;YAClD,CAAC;;;WAAA;QAKD,sBAAkB,gBAAO;YAHzB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YAC9C,CAAC;;;WAAA;QAKD,sBAAkB,kBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAChD,CAAC;;;WAAA;QAKD,sBAAkB,mBAAU;YAH5B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YACjD,CAAC;;;WAAA;QAKD,sBAAkB,aAAI;YAHtB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAC3C,CAAC;;;WAAA;QAKD,sBAAkB,kBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAChD,CAAC;;;WAAA;QAKD,sBAAkB,aAAI;YAHtB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAC3C,CAAC;;;WAAA;QAKD,sBAAkB,cAAK;YAHvB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YAC5C,CAAC;;;WAAA;QAKD,sBAAkB,oBAAW;YAH7B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;YAClD,CAAC;;;WAAA;QAKD,sBAAkB,iBAAQ;YAH1B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YAC/C,CAAC;;;WAAA;QAKD,sBAAkB,gBAAO;YAHzB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YAC9C,CAAC;;;WAAA;QAKD,sBAAkB,kBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAChD,CAAC;;;WAAA;QAKD,sBAAkB,eAAM;YAHxB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YAC7C,CAAC;;;WAAA;QAKD,sBAAkB,cAAK;YAHvB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YAC5C,CAAC;;;WAAA;QAKD,sBAAkB,cAAK;YAHvB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YAC5C,CAAC;;;WAAA;QAKD,sBAAkB,iBAAQ;YAH1B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YAC/C,CAAC;;;WAAA;QAKD,sBAAkB,sBAAa;YAH/B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YACpD,CAAC;;;WAAA;QAKD,sBAAkB,kBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAChD,CAAC;;;WAAA;QAKD,sBAAkB,qBAAY;YAH9B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YACnD,CAAC;;;WAAA;QAKD,sBAAkB,kBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAChD,CAAC;;;WAAA;QAKD,sBAAkB,mBAAU;YAH5B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YACjD,CAAC;;;WAAA;QAKD,sBAAkB,kBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAChD,CAAC;;;WAAA;QAKD,sBAAkB,6BAAoB;YAHtC;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,oBAAoB,CAAC,KAAK,EAAE,CAAC;YAC3D,CAAC;;;WAAA;QAKD,sBAAkB,kBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAChD,CAAC;;;WAAA;QAKD,sBAAkB,kBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAChD,CAAC;;;WAAA;QAKD,sBAAkB,mBAAU;YAH5B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YACjD,CAAC;;;WAAA;QAKD,sBAAkB,kBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAChD,CAAC;;;WAAA;QAKD,sBAAkB,oBAAW;YAH7B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;YAClD,CAAC;;;WAAA;QAKD,sBAAkB,sBAAa;YAH/B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YACpD,CAAC;;;WAAA;QAKD,sBAAkB,qBAAY;YAH9B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YACnD,CAAC;;;WAAA;QAKD,sBAAkB,uBAAc;YAHhC;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;YACrD,CAAC;;;WAAA;QAKD,sBAAkB,uBAAc;YAHhC;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;YACrD,CAAC;;;WAAA;QAKD,sBAAkB,oBAAW;YAH7B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;YAClD,CAAC;;;WAAA;QAKD,sBAAkB,aAAI;YAHtB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAC3C,CAAC;;;WAAA;QAKD,sBAAkB,kBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAChD,CAAC;;;WAAA;QAKD,sBAAkB,cAAK;YAHvB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YAC5C,CAAC;;;WAAA;QAKD,sBAAkB,gBAAO;YAHzB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YAC9C,CAAC;;;WAAA;QAKD,sBAAkB,eAAM;YAHxB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YAC7C,CAAC;;;WAAA;QAKD,sBAAkB,yBAAgB;YAHlC;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;YACvD,CAAC;;;WAAA;QAKD,sBAAkB,mBAAU;YAH5B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YACjD,CAAC;;;WAAA;QAKD,sBAAkB,qBAAY;YAH9B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YACnD,CAAC;;;WAAA;QAKD,sBAAkB,qBAAY;YAH9B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YACnD,CAAC;;;WAAA;QAKD,sBAAkB,uBAAc;YAHhC;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;YACrD,CAAC;;;WAAA;QAKD,sBAAkB,wBAAe;YAHjC;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;YACtD,CAAC;;;WAAA;QAKD,sBAAkB,0BAAiB;YAHnC;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;YACxD,CAAC;;;WAAA;QAKD,sBAAkB,wBAAe;YAHjC;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;YACtD,CAAC;;;WAAA;QAKD,sBAAkB,wBAAe;YAHjC;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;YACtD,CAAC;;;WAAA;QAKD,sBAAkB,qBAAY;YAH9B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YACnD,CAAC;;;WAAA;QAKD,sBAAkB,kBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAChD,CAAC;;;WAAA;QAKD,sBAAkB,kBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAChD,CAAC;;;WAAA;QAKD,sBAAkB,iBAAQ;YAH1B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YAC/C,CAAC;;;WAAA;QAKD,sBAAkB,oBAAW;YAH7B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;YAClD,CAAC;;;WAAA;QAKD,sBAAkB,aAAI;YAHtB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAC3C,CAAC;;;WAAA;QAKD,sBAAkB,gBAAO;YAHzB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YAC9C,CAAC;;;WAAA;QAKD,sBAAkB,cAAK;YAHvB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YAC5C,CAAC;;;WAAA;QAKD,sBAAkB,kBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAChD,CAAC;;;WAAA;QAKD,sBAAkB,eAAM;YAHxB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YAC7C,CAAC;;;WAAA;QAKD,sBAAkB,kBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAChD,CAAC;;;WAAA;QAKD,sBAAkB,eAAM;YAHxB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YAC7C,CAAC;;;WAAA;QAKD,sBAAkB,sBAAa;YAH/B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YACpD,CAAC;;;WAAA;QAKD,sBAAkB,kBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAChD,CAAC;;;WAAA;QAKD,sBAAkB,sBAAa;YAH/B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YACpD,CAAC;;;WAAA;QAKD,sBAAkB,sBAAa;YAH/B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YACpD,CAAC;;;WAAA;QAKD,sBAAkB,mBAAU;YAH5B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YACjD,CAAC;;;WAAA;QAKD,sBAAkB,kBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAChD,CAAC;;;WAAA;QAKD,sBAAkB,aAAI;YAHtB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAC3C,CAAC;;;WAAA;QAKD,sBAAkB,aAAI;YAHtB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAC3C,CAAC;;;WAAA;QAKD,sBAAkB,aAAI;YAHtB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAC3C,CAAC;;;WAAA;QAKD,sBAAkB,mBAAU;YAH5B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YACjD,CAAC;;;WAAA;QAKD,sBAAkB,eAAM;YAHxB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YAC7C,CAAC;;;WAAA;QAKD,sBAAkB,YAAG;YAHrB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;YAC1C,CAAC;;;WAAA;QAKD,sBAAkB,kBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAChD,CAAC;;;WAAA;QAKD,sBAAkB,kBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAChD,CAAC;;;WAAA;QAKD,sBAAkB,oBAAW;YAH7B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;YAClD,CAAC;;;WAAA;QAKD,sBAAkB,eAAM;YAHxB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YAC7C,CAAC;;;WAAA;QAKD,sBAAkB,mBAAU;YAH5B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YACjD,CAAC;;;WAAA;QAKD,sBAAkB,iBAAQ;YAH1B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YAC/C,CAAC;;;WAAA;QAKD,sBAAkB,iBAAQ;YAH1B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YAC/C,CAAC;;;WAAA;QAKD,sBAAkB,eAAM;YAHxB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YAC7C,CAAC;;;WAAA;QAKD,sBAAkB,eAAM;YAHxB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YAC7C,CAAC;;;WAAA;QAKD,sBAAkB,gBAAO;YAHzB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YAC9C,CAAC;;;WAAA;QAKD,sBAAkB,kBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAChD,CAAC;;;WAAA;QAKD,sBAAkB,kBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAChD,CAAC;;;WAAA;QAKD,sBAAkB,aAAI;YAHtB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAC3C,CAAC;;;WAAA;QAKD,sBAAkB,oBAAW;YAH7B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;YAClD,CAAC;;;WAAA;QAKD,sBAAkB,kBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAChD,CAAC;;;WAAA;QAKD,sBAAkB,YAAG;YAHrB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;YAC1C,CAAC;;;WAAA;QAKD,sBAAkB,aAAI;YAHtB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAC3C,CAAC;;;WAAA;QAKD,sBAAkB,gBAAO;YAHzB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YAC9C,CAAC;;;WAAA;QAKD,sBAAkB,eAAM;YAHxB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YAC7C,CAAC;;;WAAA;QAKD,sBAAkB,kBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAChD,CAAC;;;WAAA;QAKD,sBAAkB,eAAM;YAHxB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YAC7C,CAAC;;;WAAA;QAKD,sBAAkB,cAAK;YAHvB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YAC5C,CAAC;;;WAAA;QAKD,sBAAkB,cAAK;YAHvB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YAC5C,CAAC;;;WAAA;QAKD,sBAAkB,mBAAU;YAH5B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YACjD,CAAC;;;WAAA;QAKD,sBAAkB,eAAM;YAHxB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YAC7C,CAAC;;;WAAA;QAKD,sBAAkB,oBAAW;YAH7B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;YAClD,CAAC;;;WAAA;QAED;;UAEE;QACK,qBAAK,GAAZ;YACI,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QACrD,CAAC;QAED;;UAEE;QACK,uBAAO,GAAd;YACI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;QAC7B,CAAC;QAED;;UAEE;QACK,wBAAQ,GAAf;YACI,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS,EAAE;gBAC5B,IAAI,CAAC,OAAO,GAAG,OAAO,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC;aACtF;YACD,OAAO,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;QAn7CD,gEAAgE;QACjD,mBAAa,GAAW,yCAAyC,CAAC;QAEjF,8FAA8F;QAC/E,eAAS,GAAW,0HAA0H,CAAC;QAE9J,uDAAuD;QACxC,gBAAU,GAAW,gCAAgC,CAAC;QAErE,uCAAuC;QACvC,gEAAgE;QACjD,kBAAY,GAAG;YAC1B,aAAa,EAAE,IAAI,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;YAC1C,WAAW,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACjC,cAAc,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACpC,MAAM,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC5B,YAAY,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAClC,OAAO,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC7B,OAAO,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC7B,QAAQ,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC9B,OAAO,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC7B,gBAAgB,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACtC,MAAM,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC5B,YAAY,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAClC,OAAO,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC7B,WAAW,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACjC,WAAW,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACjC,YAAY,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAClC,WAAW,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACjC,OAAO,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC7B,gBAAgB,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACtC,UAAU,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAChC,SAAS,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC/B,MAAM,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC5B,UAAU,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAChC,UAAU,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAChC,eAAe,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACrC,UAAU,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAChC,WAAW,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACjC,WAAW,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACjC,aAAa,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACnC,gBAAgB,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACtC,YAAY,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAClC,YAAY,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAClC,SAAS,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC/B,YAAY,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAClC,cAAc,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACpC,eAAe,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACrC,eAAe,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACrC,eAAe,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACrC,YAAY,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAClC,UAAU,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAChC,aAAa,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACnC,SAAS,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC/B,YAAY,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAClC,WAAW,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACjC,aAAa,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACnC,aAAa,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACnC,SAAS,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC/B,WAAW,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACjC,YAAY,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAClC,MAAM,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC5B,WAAW,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACjC,MAAM,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC5B,OAAO,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC7B,aAAa,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACnC,UAAU,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAChC,SAAS,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC/B,WAAW,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACjC,QAAQ,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC9B,OAAO,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC7B,OAAO,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC7B,UAAU,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAChC,eAAe,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACrC,WAAW,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACjC,cAAc,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACpC,WAAW,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACjC,YAAY,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAClC,WAAW,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACjC,sBAAsB,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC5C,WAAW,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACjC,WAAW,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACjC,YAAY,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAClC,WAAW,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACjC,aAAa,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACnC,eAAe,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACrC,cAAc,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACpC,gBAAgB,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACtC,gBAAgB,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACtC,aAAa,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACnC,MAAM,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC5B,WAAW,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACjC,OAAO,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC7B,SAAS,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC/B,QAAQ,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC9B,kBAAkB,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACxC,YAAY,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAClC,cAAc,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACpC,cAAc,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACpC,gBAAgB,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACtC,iBAAiB,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACvC,mBAAmB,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACzC,iBAAiB,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACvC,iBAAiB,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACvC,cAAc,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACpC,WAAW,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACjC,WAAW,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACjC,UAAU,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAChC,aAAa,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACnC,MAAM,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC5B,SAAS,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC/B,OAAO,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC7B,WAAW,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACjC,QAAQ,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC9B,WAAW,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACjC,QAAQ,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC9B,eAAe,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACrC,WAAW,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACjC,eAAe,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACrC,eAAe,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACrC,YAAY,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAClC,WAAW,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACjC,MAAM,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC5B,MAAM,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC5B,MAAM,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC5B,YAAY,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAClC,QAAQ,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC9B,KAAK,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC3B,WAAW,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACjC,WAAW,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACjC,aAAa,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACnC,QAAQ,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC9B,YAAY,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAClC,UAAU,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAChC,UAAU,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAChC,QAAQ,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC9B,QAAQ,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC9B,SAAS,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC/B,WAAW,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACjC,WAAW,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACjC,MAAM,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC5B,aAAa,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACnC,WAAW,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACjC,KAAK,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC3B,MAAM,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC5B,SAAS,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC/B,QAAQ,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC9B,WAAW,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YACjC,QAAQ,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC9B,OAAO,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC7B,OAAO,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC7B,YAAY,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAClC,QAAQ,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;YAC9B,aAAa,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC;SACtC,CAAC;QA0xCN,YAAC;KAAA;IAv7CY,cAAK,QAu7CjB;IAED;;MAEE;IACF;QAA6B,2BAAkB;QAG3C;;;;;UAKE;QACF,iBAAY,CAAS,EAAE,CAAS,EAAE,SAAiC;YAAnE,YACI,kBAAM,IAAI,iEAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAG5B;YADG,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC;;QAChC,CAAC;QAED;;UAEE;QACK,uBAAK,GAAZ,UAAa,KAAa;YACtB,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;QAC9D,CAAC;QACL,cAAC;IAAD,CAAC,CArB4B,QAAQ,CAAC,SAAS,GAqB9C;IArBY,gBAAO,UAqBnB;IAED;;EAEF;IACE;QAAmC,iCAAO;QAyDtC,uBAAY,CAAS,EAAE,CAAS,EAAE,SAAiB,EAAE,UAAkB,EAAE,SAAiC,EAAE,QAAoB,EAAE,SAAyB,EAAE,aAA8B;YAAzD,4CAAyB;YAAE,qDAA8B;YAA3L,YACI,kBAAM,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,SAwBzB;YAtBG,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,KAAI,CAAC,KAAK,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,aAAa,CAAC,CAAC;YAChH,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,KAAI,CAAC,WAAW,GAAG,IAAI,sEAAa,EAAwB,CAAC;YAC7D,KAAI,CAAC,SAAS,GAAG,IAAI,oEAAY,EAAE,CAAC;YACpC,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,KAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YACrB,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,KAAK,CAAC,IAAI,GAAG,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC;YACxD,KAAI,CAAC,aAAa,GAAG,yDAAQ,CAAC,IAAI,CAAC;YACnC,KAAI,CAAC,YAAY,GAAG,yDAAQ,CAAC,IAAI,CAAC;YAElC,IAAI,KAAI,CAAC,UAAU,EAAE;gBACjB,KAAI,CAAC,UAAU,EAAE,CAAC;aACrB;YAED,yFAAyF;YACzF,UAAU,CAAC;gBACP,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE;oBACxB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBACpB,KAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;gBAC7B,CAAC,CAAC,CAAC;YACP,CAAC,EAAE,CAAC,CAAC,CAAC;;QACV,CAAC;QAKD,sBAAW,qCAAU;YAHrB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,WAAW,CAAC;YAC5B,CAAC;;;WAAA;QAKD,sBAAW,mCAAQ;YAHnB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;YAC1B,CAAC;;;WAAA;QAED;;;;;UAKE;QACY,0BAAY,GAA1B,UAA2B,WAAiC,EAAE,SAAiB,EAAE,UAAkB;YAC/F,IAAI,SAAS,GAA2B,EAAE,EACtC,YAAY,GAAW,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,GAAG,SAAS,CAAC,EACzE,IAAI,GAAW,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,GAAG,UAAU,CAAC,CAAC;YAExE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;gBAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,CAAC,EAAE,EAAE;oBACnC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,GAAG,SAAS,EAAE,CAAC,GAAG,UAAU,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC;iBAC7F;aACJ;YAED,OAAO,SAAS,CAAC;QACrB,CAAC;QAED;;UAEE;QACK,gCAAQ,GAAf;YACI,OAAO,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;QAED;;;UAGE;QACK,4BAAI,GAAX,UAAY,OAAiC;YACzC,iBAAM,UAAU,YAAC,OAAO,CAAC,CAAC;YAE1B,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBAClB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC5B;iBACI;gBACD,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;aAC5F;YAED,iBAAM,QAAQ,YAAC,OAAO,CAAC,CAAC;QAC5B,CAAC;QAED;;UAEE;QACK,qCAAa,GAApB;YACI,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;YAExC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAEhC,OAAO,MAAM,CAAC;QAClB,CAAC;QAED;;UAEE;QACK,+BAAO,GAAd;YACI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;YAErB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;YACzB,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;YAC3B,iBAAM,OAAO,WAAE,CAAC;QACpB,CAAC;QAED;;UAEE;QACK,6BAAK,GAAZ;YACI,IAAI,OAAO,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YAE1J,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC/B,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YACjC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC/B,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC7B,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YACjD,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YAEnD,OAAO,OAAO,CAAC;QACnB,CAAC;QAEO,kCAAU,GAAlB;YACI,IAAI,IAAI,GAAW,IAAI,CAAC,KAAK,CAAC,IAAI,EAC9B,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;YAE3C,aAAa;YACb,IAAI,CAAC,SAAS,GAAsB,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACrE,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YACpC,aAAa;YACb,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACxD,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QACrE,CAAC;QAEO,iCAAS,GAAjB,UAAkB,IAAgB;YAC9B,mCAAmC;YACnC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACrC,CAAC;QAEO,oCAAY,GAApB,UAAqB,QAAoB,EAAE,UAAqB;YAAhE,iBAQC;YAPG,qEAAS,CAAC,UAAC,IAAgB,EAAE,YAAoB;gBAC7C,KAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,QAAQ,EAAE;oBAC3C,IAAI,EAAE,CAAC;gBACX,CAAC,CAAC,CAAC;YACP,CAAC,EAAE,QAAQ,CAAC,MAAM,EAAE;gBAChB,UAAU,EAAE,CAAC;YACjB,CAAC,CAAC,CAAC;QACP,CAAC;QAEO,0CAAkB,GAA1B,UAA2B,GAAW,EAAE,MAAc,EAAE,aAAqB,EAAE,UAAqC;YAApH,iBA8BC;YA7BG,IAAI,MAAM,GAAG;gBACT,IAAI,IAAgB,EAChB,WAAW,GAAyB,KAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;gBAEvE,IAAI,GAAG,IAAI,UAAU,CAAC,WAAW,EAAE,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBAE1F,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;gBAEnC,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC;oBACpB,IAAI,EAAE,IAAI;oBACV,GAAG,EAAE,GAAG;oBACR,MAAM,EAAE,MAAM;oBACd,aAAa,EAAE,aAAa;oBAC5B,MAAM,EAAE,KAAI;iBACf,EAAE,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,WAAW,CAAC,CAAC;gBAExC,IAAI,KAAI,CAAC,UAAU,EAAE;oBACjB,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;iBACxB;gBAED,UAAU,CAAC,IAAI,CAAC,CAAC;YACrB,CAAC,CAAC;YAEF,IAAI,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,CAAC,EAAE;gBACrC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;aACvD;iBACI;gBACD,MAAM,EAAE,CAAC;aACZ;QACL,CAAC;QAED,iDAAiD;QACzC,yCAAiB,GAAzB,UAA0B,QAAgB,EAAE,QAAoB,EAAE,UAAqB;YAAvF,iBAiBC;YAhBG,UAAU,CAAC;gBACP,qEAAS,CAAC,UAAC,IAAgB,EAAE,WAAmB;oBAC5C,KAAI,CAAC,WAAW,EAAE,CAAC;oBAEnB,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE;wBACtC,KAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,WAAW,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,EAAE,UAAC,IAAgB;4BAC7F,IAAI,EAAE,CAAC;wBACX,CAAC,CAAC,CAAC;qBACN;yBACI;wBACD,IAAI,EAAE,CAAC;qBACV;gBACL,CAAC,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE;oBAC1B,UAAU,EAAE,CAAC;gBACjB,CAAC,CAAC,CAAC;YACP,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QACvC,CAAC;QACL,oBAAC;IAAD,CAAC,CAnQkC,OAAO,GAmQzC;IAnQY,sBAAa,gBAmQzB;IAED;;MAEE;IACF;QAAgC,8BAAQ;QACpC;;;;;UAKE;QACF,oBAAY,KAA2B,EAAE,KAAa,EAAE,MAAc;mBAClE,kBAAM,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC;QACrC,CAAC;QACL,iBAAC;IAAD,CAAC,CAV+B,QAAQ,GAUvC;IAVY,mBAAU,aAUtB;IAgCD;;MAEE;IACF;QAmCI,yBAAY,WAAwB,EAAE,GAAW,EAAE,SAAiB,EAAE,UAAkB,EAAE,WAAqC;YAArC,4CAAwB,iEAAQ,CAAC,IAAI;YAA/H,iBA0BC;YAzBG,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;YAChC,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;YAC9B,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;YAChC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;YACvB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YAErB,IAAI,CAAC,WAAW,GAAG,IAAI,oEAAY,EAAE,CAAC;YAEtC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;YAEf,IAAI,WAAW,CAAC,QAAQ,KAAK,IAAI,IAAI,WAAW,CAAC,QAAQ,EAAE,EAAE;gBACzD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,EAAE,UAAU,CAAC,CAAC;gBAClH,IAAI,CAAC,iBAAiB,EAAE,CAAC;aAC5B;iBACI;gBACD,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,KAA2B;oBACrD,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,EAAE,UAAU,CAAC,CAAC;oBAClH,KAAI,CAAC,iBAAiB,EAAE,CAAC;gBAC7B,CAAC,EAAE,CAAC,CAAC,CAAC;gBAEN,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;aAC1B;QACL,CAAC;QAKD,sBAAW,uCAAU;YAHrB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,WAAW,CAAC;YAC5B,CAAC;;;WAAA;QAKD,sBAAW,gCAAG;YAHd;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,IAAI,CAAC;YACrB,CAAC;iBACD,UAAe,MAAc;gBACzB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;gBACnB,IAAI,CAAC,UAAU,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACvC,CAAC;;;WAJA;QAMD;;UAEE;QACK,mCAAS,GAAhB;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC;QACzB,CAAC;QAED;;UAEE;QACK,iCAAO,GAAd;YACI,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QACxC,CAAC;QAWM,8BAAI,GAAX,UAAY,MAAuB;YAAvB,uCAAuB;YAC/B,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE;gBAC7B,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;aACnD;YAED,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;YACxC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;YACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC7B,CAAC;QAED;;UAEE;QACK,+BAAK,GAAZ;YACI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAC1B,CAAC;QAWM,8BAAI,GAAX,UAAY,KAAiB;YAAjB,iCAAiB;YACzB,IAAI,CAAC,aAAa,IAAI,KAAK,CAAC;YAE5B,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,WAAW,EAAE;gBACxC,IAAI,IAAI,CAAC,UAAU,EAAE;oBACjB,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,WAAW,CAAC;iBAC1C;qBACI;oBACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;oBAC1C,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;oBAC1B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACpB;aACJ;YAED,IAAI,KAAK,KAAK,CAAC,EAAE;gBACb,IAAI,CAAC,iBAAiB,EAAE,CAAC;aAC5B;QACL,CAAC;QAWM,8BAAI,GAAX,UAAY,UAA0B;YAA1B,8CAA0B;YAClC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,UAAU,EAAE;gBACZ,IAAI,CAAC,KAAK,EAAE,CAAC;aAChB;QACL,CAAC;QAED;;UAEE;QACK,+BAAK,GAAZ;YACI,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;YACvB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC7B,CAAC;QAED;;;UAGE;QACK,gCAAM,GAAb,UAAc,QAAkB;YAC5B,IAAI,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,WAAW,EACzD,SAAS,GAAG,CAAC,CAAC;YAElB,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;gBACxD,IAAI,SAAS,GAAG,CAAC,EAAE;oBACf,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;oBAC1C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iBACxB;aACJ;QACL,CAAC;QAED;;UAEE;QACK,iCAAO,GAAd;YACI,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;QAC/B,CAAC;QAEO,2CAAiB,GAAzB;YACI,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,EAAE,EACxB,MAAM,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;YAEnC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;YACxF,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;YACtF,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC;QACjD,CAAC;QAEO,qCAAW,GAAnB;YACI,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;QAC/D,CAAC;QAEO,wCAAc,GAAtB;YACI,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;QAC9D,CAAC;QACL,sBAAC;IAAD,CAAC;IAtNY,wBAAe,kBAsN3B;IAED;;EAEF;IACE;QAA2B,yBAAS;QA0BhC,eAAY,QAAkB,EAAE,KAAW;YAA3C,YACI,kBAAM,QAAQ,CAAC,SA2BlB;YArDM,WAAK,GAAW,OAAO,CAAC;YA4B3B,KAAI,CAAC,eAAe,GAAG,UAAC,KAAY;gBAChC,KAAI,CAAC,MAAM,CAAC,SAAS,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;YAC7C,CAAC,CAAC;YAEF,KAAI,CAAC,iBAAiB,GAAG,UAAC,KAAY;gBAClC,KAAI,CAAC,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;YAC/C,CAAC,CAAC;YAEF,KAAI,CAAC,iBAAiB,GAAG,UAAC,KAAY;gBAClC,KAAI,CAAC,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;YAC/C,CAAC,CAAC;YAEF,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC;YACnD,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC;YAEnD,IAAI,OAAO,KAAK,KAAK,WAAW,EAAE;gBAC9B,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;oBAC3B,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;iBAC5B;gBAED,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aACxC;iBACI;gBACD,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC;aAC9C;;QACL,CAAC;QAKD,sBAAW,wBAAK;YAHhB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,UAAU,CAAC;YAC3B,CAAC;iBACD,UAAiB,KAAK;gBAClB,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;oBAC3B,KAAK,GAAG,IAAI,KAAK,CAAM,KAAK,CAAC,CAAC;iBACjC;gBAED,aAAa;gBACb,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;gBACtD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,WAAW;gBACX,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;gBACpD,eAAe;gBACf,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YAChC,CAAC;;;WAbA;QAkBD,sBAAW,kCAAe;YAH1B;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;YACjC,CAAC;iBACD,UAA2B,SAAiB;gBACxC,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;YACtC,CAAC;;;WAHA;QAQD,sBAAW,8BAAW;YAHtB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC;YAC7B,CAAC;iBACD,UAAuB,KAAK;gBACxB,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;oBAC3B,KAAK,GAAG,IAAI,KAAK,CAAM,KAAK,CAAC,CAAC;iBACjC;gBAED,aAAa;gBACb,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBAC1D,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,WAAW;gBACX,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBACxD,eAAe;gBACf,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;YAClC,CAAC;;;WAbA;QAkBD,sBAAW,8BAAW;YAHtB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC;YAC7B,CAAC;iBACD,UAAuB,KAAK;gBACxB,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;oBAC3B,KAAK,GAAG,IAAI,KAAK,CAAM,KAAK,CAAC,CAAC;iBACjC;gBAED,aAAa;gBACb,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBAC1D,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,WAAW;gBACX,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBACxD,eAAe;gBACf,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;YAClC,CAAC;;;WAbA;QAkBD,sBAAW,0BAAO;YAHlB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;YACrC,CAAC;iBACD,UAAmB,CAAS;gBACxB,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,CAAC,CAAC;YAClC,CAAC;;;WAHA;QAQD,sBAAW,0BAAO;YAHlB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;YACrC,CAAC;iBACD,UAAmB,CAAS;gBACxB,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,CAAC,CAAC;YAClC,CAAC;;;WAHA;QAQD,sBAAW,6BAAU;YAHrB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;YAClC,CAAC;iBACD,UAAsB,IAAY;gBAC9B,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC;YAClC,CAAC;;;WAHA;QAiBM,sBAAM,GAAb,UAAc,SAAiB,EAAE,KAAU;YACvC,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;YACjC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC7B,CAAC;QAsCM,sBAAM,GAAb,UAAc,CAAS,EAAE,CAAS,EAAE,KAAW,EAAE,IAAa;YAC1D,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,aAAa;YACb,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAC3B,CAAC;QAEM,0BAAU,GAAjB,UAAkB,OAAiC;YAC/C,iBAAM,UAAU,YAAC,OAAO,CAAC,CAAC;YAC1B,OAAO,CAAC,SAAS,EAAE,CAAC;QACxB,CAAC;QAEM,wBAAQ,GAAf,UAAgB,OAAiC;YAC7C,OAAO,CAAC,IAAI,EAAE,CAAC;YAEf,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,EAAE;gBAC3B,OAAO,CAAC,MAAM,EAAE,CAAC;aACpB;iBACI;gBACD,OAAO,CAAC,SAAS,EAAE,CAAC;aACvB;YAED,iBAAM,QAAQ,YAAC,OAAO,CAAC,CAAC;QAC5B,CAAC;QAED,gEAAgE;QACzD,0BAAU,GAAjB,UAAkB,OAAiC;QACnD,CAAC;QAED;;;UAGE;QACK,oBAAI,GAAX,UAAY,OAAiC;YACzC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YACzB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YACzB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC3B,CAAC;QAEM,uBAAO,GAAd;YACI,iBAAM,OAAO,WAAE,CAAC;YAEhB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YACtD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAC1D,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC9D,CAAC;QAEM,sBAAM,GAAb,UAAc,OAAc;YACxB,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC;YAC/D,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YAEtF,iBAAM,MAAM,YAAC,OAAO,CAAC,CAAC;QAC1B,CAAC;QACL,YAAC;IAAD,CAAC,CAvQ0B,SAAS,GAuQnC;IAvQY,cAAK,QAuQjB;IAED;;EAEF;IACE;QAA+B,6BAAK;QAkChC,mBAAY,CAAS,EAAE,CAAS,EAAE,KAAa,EAAE,MAAc,EAAE,KAAW;YAA5E,YACI,kBAAM,IAAI,iEAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,SAGnC;YArCM,WAAK,GAAW,WAAW,CAAC;YAoC/B,KAAI,CAAC,IAAI,GAAG,IAAI,2DAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;;QAC1C,CAAC;QAED;;UAEE;QACK,iCAAa,GAApB;YACI,IAAI,MAAM,GAAG,IAAI,qDAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YAEpE,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAEhC,OAAO,MAAM,CAAC;QAClB,CAAC;QAED;;;UAGE;QACK,yBAAK,GAAZ,UAAa,KAAa;YACtB,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC;YACzB,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC;QAC9B,CAAC;QAED;;UAEE;QACK,yBAAK,GAAZ;YACI,IAAI,OAAO,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;YAErH,iBAAM,MAAM,YAAC,OAAO,CAAC,CAAC;YAEtB,OAAO,OAAO,CAAC;QACnB,CAAC;QAEM,8BAAU,GAAjB,UAAkB,OAAiC;YAC/C,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACjG,CAAC;QACL,gBAAC;IAAD,CAAC,CA1E8B,KAAK,GA0EnC;IA1EY,kBAAS,YA0ErB;IAED;;EAEF;IACE;QAA4B,0BAAK;QA+B7B,gBAAY,CAAS,EAAE,CAAS,EAAE,MAAc,EAAE,KAAW;YAA7D,YACI,kBAAM,IAAI,iEAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,SAGnC;YAlCM,WAAK,GAAW,QAAQ,CAAC;YAiC5B,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;;QACzB,CAAC;QAED;;UAEE;QACK,8BAAa,GAApB;YACI,IAAI,MAAM,GAAG,IAAI,qDAAM,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YAEnE,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAEhC,OAAO,MAAM,CAAC;QAClB,CAAC;QAED;;;UAGE;QACK,sBAAK,GAAZ,UAAa,KAAa;YACtB,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC;QACzB,CAAC;QAED;;UAEE;QACK,sBAAK,GAAZ;YACI,IAAI,OAAO,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;YAE5F,iBAAM,MAAM,YAAC,OAAO,CAAC,CAAC;YAEtB,OAAO,OAAO,CAAC;QACnB,CAAC;QAEM,2BAAU,GAAjB,UAAkB,OAAiC;YAC/C,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,EAAQ,IAAK,CAAC,KAAK,CAAC,CAAC;QACzD,CAAC;QACL,aAAC;IAAD,CAAC,CAtE2B,KAAK,GAsEhC;IAtEY,eAAM,SAsElB;IAED;;EAEF;IACE;QAA4B,0BAAK;QAiC7B,gBAAY,CAAS,EAAE,CAAS,EAAE,IAAY,EAAE,KAAwB;YAAxB,gCAAa,KAAK,CAAC,KAAK;YAAxE,YACI,kBAAM,IAAI,iEAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,SAUnC;YA3CM,WAAK,GAAW,QAAQ,CAAC;YAmC5B,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAElB,KAAI,CAAC,WAAW,GAAG,IAAI,qDAAM,CAAC,iBAAiB,CAAC,KAAI,CAAC,QAAQ,EAAE,2DAAM,CAAC,GAAG,CAAC,CAAC;YAC3E,KAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;YAEnC,KAAI,CAAC,aAAa,GAAG,IAAI,YAAY,EAAE,CAAC;YACxC,KAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;YACtB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;;QAC7B,CAAC;QAKD,sBAAW,yBAAK;YAHhB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;YACjC,CAAC;iBACD,UAAiB,SAAiB;gBAC9B,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;YACtC,CAAC;;;WAHA;QAQD,sBAAW,4BAAQ;YAHnB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;YACpC,CAAC;iBACD,UAAoB,QAAgB;gBAChC,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,QAAQ,CAAC;YACxC,CAAC;;;WAHA;QAQD,sBAAW,gCAAY;YAHvB;;cAEE;iBACF;gBACI,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;gBAEnC,OAAO,IAAI,CAAC,aAAa,CAAC;YAC9B,CAAC;;;WAAA;QAKD,sBAAW,wBAAI;YAHf;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC;YACtB,CAAC;iBACD,UAAgB,IAAY;gBACxB,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;gBACnC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YACtB,CAAC;;;WAJA;QAMM,2BAAU,GAAjB,UAAkB,OAAiC;YAC/C,OAAO,CAAC,IAAI,EAAE,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;YAErC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAEpD,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;gBACrB,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACjC;QACL,CAAC;QAEM,yBAAQ,GAAf,UAAgB,OAAiC;YAC7C,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YAElC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACtC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;oBACrB,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBAC7B;aACJ;YAED,OAAO,CAAC,OAAO,EAAE,CAAC;QACtB,CAAC;QAED;;;UAGE;QACK,qBAAI,GAAX,UAAY,OAAiC;YACzC,IAAI,QAAQ,CAAC;YAEb,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAEnD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YAEzB,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACnC,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,EAAE;gBAC3B,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;aACxC;YAED,+EAA+E;YAC/E,IAAI,IAAI,CAAC,sBAAsB,EAAE;gBAC7B,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;gBACpC,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC3C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;gBAC7C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC;aAC9E;YAED,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC3B,CAAC;QAED;;UAEE;QACK,8BAAa,GAApB;YACI,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC1C,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAE1C,OAAO,IAAI,CAAC,WAAW,CAAC;QAC5B,CAAC;QAED;;;UAGE;QACK,sBAAK,GAAZ,UAAa,KAAa;YACtB,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;YAEhD,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;QAChH,CAAC;QAED;;UAEE;QACK,sBAAK,GAAZ;YACI,IAAI,OAAO,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;YAE1F,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YAC3B,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YACjC,OAAO,CAAC,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;YAC/D,OAAO,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;YAC3D,OAAO,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;YAC7D,OAAO,CAAC,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;YACjE,OAAO,CAAC,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;YAE/D,iBAAM,MAAM,YAAC,OAAO,CAAC,CAAC;YAEtB,OAAO,OAAO,CAAC;QACnB,CAAC;QACL,aAAC;IAAD,CAAC,CA9K2B,KAAK,GA8KhC;IA9KY,eAAM,SA8KlB;IAED;;EAEF;IACE,IAAY,WAGX;IAHD,WAAY,WAAW;QACnB,iDAAM;QACN,uDAAS;IACb,CAAC,EAHW,WAAW,GAAX,oBAAW,KAAX,oBAAW,QAGtB;IAAA,CAAC;IAEF;;EAEF;IACE,IAAY,SAIX;IAJD,WAAY,SAAS;QACjB,6CAAM;QACN,6CAAM;QACN,+CAAO;IACX,CAAC,EAJW,SAAS,GAAT,kBAAS,KAAT,kBAAS,QAIpB;IAED;;EAEF;IACE;QAOI;;;;UAIE;QACF;YACI,IAAI,CAAC,YAAY,GAAG;gBAChB,QAAQ,EAAE,MAAM;gBAChB,UAAU,EAAE,UAAU,CAAC,aAAa;gBACpC,WAAW,EAAE,WAAW,CAAC,MAAM;gBAC/B,UAAU,EAAE,EAAE;gBACd,SAAS,EAAE,SAAS,CAAC,MAAM;aAC9B,CAAC;YAEF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,UAAU,EAAE,CAAC;QACtB,CAAC;QAKD,sBAAW,kCAAQ;YAHnB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;YACzC,CAAC;iBACD,UAAoB,IAAY;gBAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;YACzC,CAAC;;;WAJA;QASD,sBAAW,oCAAU;YAHrB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;YAC3C,CAAC;iBACD,UAAsB,MAAkB;gBACpC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,GAAG,MAAM,CAAC;YAC7C,CAAC;;;WAJA;QASD,sBAAW,qCAAW;YAHtB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;YAC5C,CAAC;iBACD,UAAuB,OAAoB;gBACvC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,GAAG,OAAO,CAAC;YAC/C,CAAC;;;WAJA;QASD,sBAAW,oCAAU;YAHrB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;YAC3C,CAAC;iBACD,UAAsB,MAAc;gBAChC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,GAAG,MAAM,CAAC;YAC7C,CAAC;;;WAJA;QASD,sBAAW,mCAAS;YAHpB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;YAC1C,CAAC;iBACD,UAAqB,KAAgB;gBACjC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC;YAC3C,CAAC;;;WAJA;QAMM,iCAAU,GAAjB;YACI,IAAI,IAAI,CAAC;YAET,IAAI,IAAI,CAAC,aAAa,EAAE;gBACpB,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,GAAG,GAAG,GAAG,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,GAAG,GAAG,GAAG,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;gBAEjO,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,KAAK,SAAS,EAAE;oBAC/C,IAAI,IAAI,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC;iBAC7D;gBAED,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;gBACpE,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;aAC9B;YAED,OAAO,IAAI,CAAC,WAAW,CAAC;QAC5B,CAAC;QACL,mBAAC;IAAD,CAAC;IAhGY,qBAAY,eAgGxB;IAED;;EAEF;IACE,IAAY,UAwBX;IAxBD,WAAY,UAAU;QAClB,iDAAO;QACP,6CAAK;QACL,+CAAM;QACN,yDAAW;QACX,iDAAO;QACP,qDAAS;QACT,iDAAO;QACP,uDAAU;QACV,iDAAO;QACP,+CAAM;QACN,oDAAQ;QACR,kDAAO;QACP,sDAAS;QACT,gDAAM;QACN,gDAAM;QACN,gDAAM;QACN,sDAAS;QACT,oDAAQ;QACR,8CAAK;QACL,gDAAM;QACN,8CAAK;QACL,8DAAa;QACb,kDAAO;IACX,CAAC,EAxBW,UAAU,GAAV,mBAAU,KAAV,mBAAU,QAwBrB;IAAA,CAAC;IAEF;;MAEE;IACF;QAA0B,wBAAS;QA2D/B,cAAY,CAAS,EAAE,CAAS,EAAE,IAAY,EAAE,OAAe,EAAE,SAAiB,EAAE,UAAkB,EAAE,aAA8B,EAAE,aAAsC;YAAtE,qDAA8B;YAAE,oDAAyB,KAAK,CAAC,MAAM,CAAC;YAA9K,YACI,kBAAM,IAAI,iEAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAoB5B;YA/EM,WAAK,GAAW,MAAM,CAAC;YA6D1B,KAAI,CAAC,KAAK,GAAG,IAAI,2DAAM,CAAC,SAAS,GAAG,OAAO,EAAE,UAAU,GAAG,IAAI,CAAC,CAAC;YAChE,KAAI,CAAC,SAAS,GAAG,IAAI,2DAAM,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;YACnD,KAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,KAAI,CAAC,aAAa,GAAG,aAAa,CAAC;YACnC,KAAI,CAAC,aAAa,GAAG,aAAa,CAAC;YAEnC,sBAAsB;YACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBACjC,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gBAEnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE;oBACpC,aAAa;oBACb,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC5B;aACJ;;QACL,CAAC;QAKD,sBAAW,+BAAa;YAHxB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,cAAc,CAAC;YAC/B,CAAC;iBACD,UAAyB,UAAmB;gBACxC,IAAI,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC5C,IAAI,CAAC,cAAc,EAAE,CAAC;iBACzB;gBAED,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC;YACrC,CAAC;;;WAPA;QAYD,sBAAW,+BAAa;YAHxB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,cAAc,CAAC;YAC/B,CAAC;iBACD,UAAyB,KAAK;gBAC1B,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;oBAC3B,KAAK,GAAG,IAAI,KAAK,CAAM,KAAK,CAAC,CAAC;iBACjC;gBACD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAE5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC7C,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;iBACpC;YACL,CAAC;;;WAVA;QAeD,sBAAW,sBAAI;YAHf;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YAC9B,CAAC;;;WAAA;QAKD,sBAAW,0BAAQ;YAHnB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAClC,CAAC;;;WAAA;QAKD,sBAAW,sBAAI;YAHf;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC;YACtB,CAAC;;;WAAA;QAKD,sBAAW,yBAAO;YAHlB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,QAAQ,CAAC;YACzB,CAAC;;;WAAA;QAED;;;;;UAKE;QACK,mBAAI,GAAX,UAAY,GAAW,EAAE,MAAc,EAAE,OAAkB;YACvD,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE;gBAC9D,OAAO;aACV;YAED,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;YAE3D,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC;YAClC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC3B,CAAC;QAeM,sBAAO,GAAd,UAAe,GAAW,EAAE,WAAwB,EAAE,YAAwB;YAAxB,+CAAwB;YAC1E,IAAI,OAAkB,CAAC;YAEvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzC,OAAO,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;gBACzB,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,GAAG,EAAE,CAAC,GAAG,YAAY,CAAC,CAAC;gBAErE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,GAAG,OAAO,CAAC;gBAC5C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;aAC1B;QACL,CAAC;QAeM,yBAAU,GAAjB,UAAkB,MAAc,EAAE,WAAwB,EAAE,SAAqB;YAArB,yCAAqB;YAC7E,IAAI,OAAkB,CAAC;YAEvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzC,OAAO,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;gBACzB,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC,GAAG,SAAS,EAAE,MAAM,CAAC,CAAC;gBAErE,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC;gBAC5C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;aAC1B;QACL,CAAC;QAED;;;;;UAKE;QACK,wBAAS,GAAhB,UAAiB,GAAW,EAAE,MAAc,EAAE,WAA0B;YACpE,IAAI,OAAkB,CAAC;YAEvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC5C,OAAO,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5B,IAAI,OAAO,EAAE;wBACT,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC;wBAEnE,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,OAAO,CAAC;wBAC1C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;qBAC1B;iBACJ;aACJ;QACL,CAAC;QAED;;;;UAIE;QACK,kBAAG,GAAV,UAAW,GAAW,EAAE,MAAc;YAClC,aAAa;YACb,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE;gBAClD,aAAa;gBACb,OAAO,IAAI,CAAC;aACf;YAED,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;QACnC,CAAC;QAaM,qBAAM,GAAb,UAAc,GAAW,EAAE,YAAwB;YAAxB,+CAAwB;YAC/C,IAAI,OAAO,GAAgB,EAAE,CAAC;YAE9B,KAAK,IAAI,CAAC,GAAG,YAAY,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE;gBAC/C,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACpC;YAED,OAAO,OAAO,CAAC;QACnB,CAAC;QAaM,wBAAS,GAAhB,UAAiB,MAAc,EAAE,SAAqB;YAArB,yCAAqB;YAClD,IAAI,UAAU,GAAgB,EAAE,CAAC;YAEjC,KAAK,IAAI,CAAC,GAAG,SAAS,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBACzC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;aAC1C;YAED,OAAO,UAAU,CAAC;QACtB,CAAC;QAED;;;;;;UAME;QACK,uBAAQ,GAAf,UAAgB,QAAgB,EAAE,WAAmB,EAAE,MAAc,EAAE,SAAiB;YACpF,IAAI,KAAK,GAAgB,EAAE,EACvB,cAAc,GAAG,CAAC,MAAM,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC9C,iBAAiB,GAAG,CAAC,SAAS,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAE5D,KAAK,IAAI,CAAC,GAAG,QAAQ,EAAE,CAAC,KAAK,MAAM,GAAG,cAAc,EAAE,CAAC,IAAI,cAAc,EAAE;gBACvE,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE;oBACjB,MAAM;iBACT;gBAED,KAAK,IAAI,CAAC,GAAG,WAAW,EAAE,CAAC,KAAK,SAAS,GAAG,iBAAiB,EAAE,CAAC,IAAI,iBAAiB,EAAE;oBACnF,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE;wBACpB,MAAM;qBACT;oBAED,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAChC;aACJ;YAED,OAAO,KAAK,CAAC;QACjB,CAAC;QAED;;;;UAIE;QACK,oBAAK,GAAZ,UAAa,GAAW,EAAE,MAAc;YACpC,aAAa;YACb,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE;gBAClD,aAAa;gBACb,OAAO,IAAI,CAAC;aACf;YAED,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;YAElC,aAAa;YACb,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;YAC/B,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YAEtB,OAAO,GAAG,CAAC;QACf,CAAC;QAaM,uBAAQ,GAAf,UAAgB,GAAW,EAAE,YAAwB;YAAxB,+CAAwB;YACjD,IAAI,IAAI,GAAgB,EAAE,CAAC;YAE3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE;gBACpC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrC,aAAa;gBACb,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;aAC7B;YAED,OAAO,IAAI,CAAC;QAChB,CAAC;QAaM,0BAAW,GAAlB,UAAmB,MAAc,EAAE,SAAqB;YAArB,yCAAqB;YACpD,IAAI,IAAI,GAAgB,EAAE,CAAC;YAE3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBACjC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACxC,aAAa;gBACb,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;aAChC;YAED,OAAO,IAAI,CAAC;QAChB,CAAC;QAED;;;;;;UAME;QACK,yBAAU,GAAjB,UAAkB,QAAgB,EAAE,WAAmB,EAAE,MAAc,EAAE,SAAiB;YACtF,IAAI,KAAK,GAAgB,EAAE,EACvB,cAAc,GAAG,CAAC,MAAM,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC9C,iBAAiB,GAAG,CAAC,SAAS,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAE5D,KAAK,IAAI,CAAC,GAAG,QAAQ,EAAE,CAAC,KAAK,MAAM,GAAG,cAAc,EAAE,CAAC,IAAI,cAAc,EAAE;gBACvE,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE;oBAChB,MAAM;iBACT;gBAED,KAAK,IAAI,CAAC,GAAG,WAAW,EAAE,CAAC,KAAK,SAAS,GAAG,iBAAiB,EAAE,CAAC,IAAI,iBAAiB,EAAE;oBACnF,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE;wBACnB,MAAM;qBACT;oBAED,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC7B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACnC,aAAa;oBACb,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;iBAC3B;aACJ;YAED,OAAO,KAAK,CAAC;QACjB,CAAC;QAED;;;UAGE;QACK,mBAAI,GAAX,UAAY,OAAiC;YACzC,iBAAM,UAAU,YAAC,OAAO,CAAC,CAAC;YAE1B,OAAO,CAAC,IAAI,EAAE,CAAC;YACf,iBAAM,QAAQ,YAAC,OAAO,CAAC,CAAC;YAExB,IAAI,IAAI,CAAC,aAAa,EAAE;gBACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC7C,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBACpC;aACJ;YACD,OAAO,CAAC,OAAO,EAAE,CAAC;QACtB,CAAC;QAED;;UAEE;QACK,4BAAa,GAApB;YACI,IAAI,MAAM,GAAG,IAAI,qDAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YAErE,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAEhC,OAAO,MAAM,CAAC;QAClB,CAAC;QAED;;;UAGE;QACK,oBAAK,GAAZ,UAAa,KAAa;YACtB,MAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAC;QACpE,CAAC;QAED;;;UAGE;QACK,2BAAY,GAAnB,UAAoB,CAAS;YACzB,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAC/F,CAAC;QAED;;;UAGE;QACK,8BAAe,GAAtB,UAAuB,CAAS;YAC5B,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAC7F,CAAC;QAED;;UAEE;QACK,oBAAK,GAAZ;YACI,IAAI,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC,CAAC;YAEnL,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC3C,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;wBAClB,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;qBAChD;iBACJ;aACJ;YAED,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC/B,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YACjC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC/B,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAE7B,OAAO,OAAO,CAAC;QACnB,CAAC;QAEO,6BAAc,GAAtB;YACI,IAAI,QAAQ,GAAW,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,EAC1C,OAAO,GAAa,IAAI,iEAAQ,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,EACnE,WAAW,GAAa,IAAI,iEAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;YAE1E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBACjC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;gBAEjK,IAAI,CAAC,KAAK,CAAC,EAAE;oBACT,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE;wBACpC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;qBAClK;iBACJ;aACJ;YAED,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC5F,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAChG,CAAC;QAEO,oCAAqB,GAA7B,UAA8B,GAAW,EAAE,MAAc;YACrD,OAAO,IAAI,iEAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAC1L,CAAC;QAEO,uBAAQ,GAAhB,UAAiB,GAAW;YACxB,OAAO,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;QACxC,CAAC;QAEO,0BAAW,GAAnB,UAAoB,MAAc;YAC9B,OAAO,MAAM,IAAI,CAAC,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjD,CAAC;QACL,WAAC;IAAD,CAAC,CA1gByB,SAAS,GA0gBlC;IA1gBY,aAAI,OA0gBhB;AACL,CAAC,EA7iIa,QAAQ,KAAR,QAAQ,QA6iIrB;;;;;;;;;ACzjID;AAAA;;EAEE;AACF;IA4BI,kBAAY,YAAoB,EAAE,OAAmB,EAAE,OAAmB;QAAxC,qCAAmB;QAAE,qCAAmB;QA3BnE,UAAK,GAAW,UAAU,CAAC;QA4B9B,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAElB,IAAI,CAAC,YAAY,GAAG,YAAY,GAAG,OAAO,GAAG,QAAQ,CAAC,kBAAkB,GAAG,OAAO,GAAG,QAAQ,CAAC,kBAAkB,CAAC;IACrH,CAAC;IAKD,sBAAW,kCAAY;QAHvB;;UAEE;aACF;YACI,OAAO,IAAI,CAAC,aAAa,CAAC;QAC9B,CAAC;aACD,UAAwB,GAAW;YAC/B,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;YACzB,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,QAAQ,CAAC,kBAAkB,CAAC;YAClD,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,QAAQ,CAAC,kBAAkB,CAAC;QACtD,CAAC;;;OALA;IAUD,sBAAW,6BAAO;QAHlB;;UAEE;aACF;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC;QACzB,CAAC;aACD,UAAmB,GAAW;YAC1B,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;YACpB,IAAI,CAAC,aAAa,GAAG,GAAG,GAAG,QAAQ,CAAC,kBAAkB,CAAC;YACvD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,kBAAkB,CAAC;QACrE,CAAC;;;OALA;IAUD,sBAAW,6BAAO;QAHlB;;UAEE;aACF;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC;QACzB,CAAC;aACD,UAAmB,GAAW;YAC1B,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;YACpB,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,EAAE,CAAC;YACzB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,kBAAkB,CAAC;QACrE,CAAC;;;OALA;IAiBM,sBAAG,GAAV,UAAW,GAAQ;QACf,IAAI,GAAG,CAAC,KAAK,KAAK,UAAU,EAAE;YAC1B,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC;SAC7D;aACI;YACD,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,CAAC;SAChD;IACL,CAAC;IAYM,2BAAQ,GAAf,UAAgB,GAAQ;QACpB,IAAI,GAAG,CAAC,KAAK,KAAK,UAAU,EAAE;YAC1B,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC;SAC7D;aACI;YACD,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,CAAC;SAChD;IACL,CAAC;IAYM,2BAAQ,GAAf,UAAgB,GAAQ;QACpB,IAAI,GAAG,CAAC,KAAK,KAAK,UAAU,EAAE;YAC1B,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC;SAC7D;aACI;YACD,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,CAAC;SAChD;IACL,CAAC;IAYM,+BAAY,GAAnB,UAAoB,GAAQ;QACxB,IAAI,GAAG,CAAC,KAAK,KAAK,UAAU,EAAE;YAC1B,OAAO,IAAI,QAAQ,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;SAC7D;aACI;YACD,OAAO,IAAI,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;SAChD;IACL,CAAC;IAYM,yBAAM,GAAb,UAAc,GAAQ;QAClB,IAAI,GAAG,CAAC,KAAK,KAAK,UAAU,EAAE;YAC1B,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC;SAC7D;aACI;YACD,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,CAAC;SAChD;IACL,CAAC;IAYM,6BAAU,GAAjB,UAAkB,GAAQ;QACtB,IAAI,GAAG,CAAC,KAAK,KAAK,UAAU,EAAE;YAC1B,OAAO,IAAI,QAAQ,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;SAC7D;aACI;YACD,OAAO,IAAI,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;SAChD;IACL,CAAC;IAED;;;MAGE;IACK,6BAAU,GAAjB,UAAkB,QAAkB;QAChC,OAAO,IAAI,CAAC,YAAY,KAAK,QAAQ,CAAC,YAAY,CAAC;IACvD,CAAC;IAED;;MAEE;IACK,wBAAK,GAAZ;QACI,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC3C,CAAC;IAED;;MAEE;IACK,2BAAQ,GAAf;QACI,OAAO,IAAI,CAAC,YAAY,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;IACvE,CAAC;IAED;;;MAGE;IACY,yBAAgB,GAA9B,UAA+B,GAAW;QACtC,OAAO,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;IAED;;;MAGE;IACY,oBAAW,GAAzB,UAA0B,GAAW;QACjC,OAAO,IAAI,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAChC,CAAC;IAED;;;MAGE;IACY,oBAAW,GAAzB,UAA0B,GAAW;QACjC,OAAO,IAAI,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;IACnC,CAAC;IAED;;;;MAIE;IACY,iBAAQ,GAAtB,UAAuB,IAAU,EAAE,EAAQ;QACvC,OAAO,IAAI,QAAQ,CAAC,EAAE,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IACvD,CAAC;IAMD,sBAAkB,gBAAI;QAHtB;;UAEE;aACF;YACI,OAAO,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC;;;OAAA;IApPc,2BAAkB,GAAW,IAAI,CAAC;IAClC,2BAAkB,GAAW,QAAQ,CAAC,kBAAkB,GAAG,EAAE,CAAC;IAoPjF,eAAC;CAAA;AAxPoB;;;;;;;;;;ACNf,mBAAoB,MAAiD,EAAE,KAAa,EAAE,UAAsB;IAC9G,CAAC,cAAc,KAAK;QAChB,IAAI,KAAK,GAAG,KAAK,EAAE;YACf,MAAM,CAAC;gBACH,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;YACpB,CAAC,EAAE,KAAK,CAAC,CAAC;SACb;aACI,IAAG,UAAU,EAAE;YAChB,UAAU,EAAE,CAAC;SAChB;IACL,CAAC,CAAE,CAAC,CAAC,CAAC,CAAC;AACX,CAAC;;;;;;;;;;;;;;ACVwD;AACE;AACL;AACS;AAEzD,IAAQ,KAAK,CA85BlB;AA95BD,WAAc,KAAK;IAEf;QAAA;QAIA,CAAC;QAHiB,gBAAI,GAAW,MAAM,CAAC;QACtB,kBAAM,GAAW,QAAQ,CAAC;QAC1B,iBAAK,GAAW,OAAO,CAAC;QAC1C,kBAAC;KAAA;IAJY,iBAAW,cAIvB;IAED;;MAEE;IACF;QAYI;;;UAGE;QACF,sBAAY,MAAmB;YAC3B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,KAAK,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC;YACtC,IAAI,CAAC,QAAQ,GAAG,IAAI,eAAe,EAAE,CAAC;QAC1C,CAAC;QAED;;UAEE;QACK,8BAAO,GAAd;YACI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBAEtB,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;gBACrB,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;aAC3B;iBACI;gBACD,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;aACrE;QACL,CAAC;QACL,mBAAC;IAAD,CAAC;IApCY,kBAAY,eAoCxB;IAED;;EAEF;IACE;QA2CI;;;UAGE;QACF,sBAAY,MAAmB;YAA/B,iBAuCC;YAtCG,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YAEvB,IAAI,CAAC,QAAQ,GAAG,IAAI,sEAAa,EAAoB,CAAC;YACtD,IAAI,CAAC,cAAc,GAAG,IAAI,sEAAa,EAAoB,CAAC;YAC5D,IAAI,CAAC,OAAO,GAAG,IAAI,sEAAa,EAAoB,CAAC;YACrD,IAAI,CAAC,KAAK,GAAG,IAAI,sEAAa,EAAoB,CAAC;YACnD,IAAI,CAAC,OAAO,GAAG,IAAI,sEAAa,EAAe,CAAC;YAChD,IAAI,CAAC,SAAS,GAAG,IAAI,sEAAa,EAAqB,CAAC;YAExD,qCAAqC;YACrC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAE1B,IAAI,CAAC,IAAI,EAAE,CAAC;YAEZ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAC,CAAmB;gBACjC,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,aAAa;gBACb,KAAI,CAAC,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,WAAW,EAAE,GAAG,QAAQ,CAAC,GAAG,IAAI,CAAC;gBACrD,MAAM,CAAC,KAAK,EAAE,CAAC;YACnB,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAC,CAAmB;gBAC/B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,aAAa;gBACb,KAAI,CAAC,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,WAAW,EAAE,GAAG,QAAQ,CAAC,GAAG,KAAK,CAAC;gBACtD,MAAM,CAAC,KAAK,EAAE,CAAC;YACnB,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAC,CAAmB;gBAClC,MAAM,CAAC,KAAK,EAAE,CAAC;YACnB,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,UAAC,CAAmB;gBACxC,MAAM,CAAC,KAAK,EAAE,CAAC;YACnB,CAAC,CAAC,CAAC;QACP,CAAC;QAKD,sBAAW,oCAAU;YAHrB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,WAAW,CAAC;YAC5B,CAAC;;;WAAA;QAKD,sBAAW,sCAAY;YAHvB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,aAAa,CAAC;YAC9B,CAAC;;;WAAA;QAKD,sBAAW,qCAAW;YAHtB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC;YAC7B,CAAC;;;WAAA;QAKD,sBAAW,gCAAM;YAHjB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,OAAO,CAAC;YACxB,CAAC;;;WAAA;QAKD,sBAAW,iCAAO;YAHlB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,QAAQ,CAAC;YACzB,CAAC;;;WAAA;QAKD,sBAAW,uCAAa;YAHxB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,cAAc,CAAC;YAC/B,CAAC;;;WAAA;QAKD,sBAAW,gCAAM;YAHjB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,OAAO,CAAC;YACxB,CAAC;;;WAAA;QAKD,sBAAW,8BAAI;YAHf;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC;YACtB,CAAC;;;WAAA;QAKD,sBAAW,gCAAM;YAHjB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,OAAO,CAAC;YACxB,CAAC;;;WAAA;QAKD,sBAAW,kCAAQ;YAHnB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;YAC1B,CAAC;;;WAAA;QAED;;UAEE;QACK,8BAAO,GAAd;YACI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBAEtB,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;gBACxB,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;gBAC9B,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;gBACvB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;gBACvB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;gBACzB,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;gBAErB,IAAI,CAAC,MAAM,EAAE,CAAC;gBAEd,aAAa;gBACb,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;aACvB;iBACI;gBACD,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;aACrE;QACL,CAAC;QAEO,2BAAI,GAAZ;YAAA,iBAuCC;YAtCG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAmB,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;YACtH,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAmB,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;YACvG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAmB,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;YACjG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAmB,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,oBAAoB,CAAC;YAC5F,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAc,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;YAEvF,0FAA0F;YAC1F,iGAAiG;YACjG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE;gBAC/E,IAAI,CAAC,mBAAmB,GAAG,OAAO,CAAC;gBACnC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,UAAU,CAAoB,IAAI,CAAC,SAAS,EAAE,UAAC,CAAM;oBAC7E,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC;oBAC1B,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC;oBAC1B,OAAO,KAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;gBACzC,CAAC,CAAC,CAAC;aACN;iBACI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE;gBAC7C,IAAI,CAAC,mBAAmB,GAAG,gBAAgB,CAAC;gBAC5C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,UAAU,CAAoB,IAAI,CAAC,SAAS,EAAE,UAAC,CAAM;oBAC7E,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC7C,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC7C,OAAO,KAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;gBACzC,CAAC,CAAC,CAAC;aACN;iBACI;gBACD,IAAI,CAAC,mBAAmB,GAAG,YAAY,CAAC;gBACxC,aAAa;gBACb,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,UAAU,CAAoB,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;aACzG;YAED,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;YAC/D,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;YAC3E,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;YACrE,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;YACvE,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;YACnE,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;YACvE,aAAa;YACb,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;QACzF,CAAC;QAEO,6BAAM,GAAd;YACI,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;YAClE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;YAC9E,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;YACxE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;YAC1E,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;YACtE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;YAC1E,aAAa;YACb,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;QAC5F,CAAC;QAEO,iCAAU,GAAlB,UAAsB,YAA8B,EAAE,iBAA0D,EAAE,WAA4B;YAA9I,iBAUC;YAViH,iDAA4B;YAC1I,OAAO,UAAC,CAAa;gBACjB,IAAI,YAAY,CAAC,WAAW,EAAE,EAAE;oBAC5B,YAAY,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAI,EAAE,CAAC,CAAC,CAAC,CAAC;iBACzD;gBAED,CAAC,CAAC,cAAc,EAAE,CAAC;gBAEnB,OAAO,WAAW,CAAC;YACvB,CAAC;QACL,CAAC;QAEO,4CAAqB,GAA7B,UAA8B,KAAsB;YAChD,OAAO;gBACH,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;gBACtC,SAAS,EAAE,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC;aACjD,CAAC;QACN,CAAC;QAEO,sCAAe,GAAvB,UAAwB,KAAiB;YACrC,OAAO;gBACH,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;aACzC,CAAC;QACN,CAAC;QAEO,2CAAoB,GAA5B,UAA6B,KAAiB;YAC1C,OAAO;gBACH,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;gBACtC,MAAM,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;aACrC,CAAC;QACN,CAAC;QAEO,uCAAgB,GAAxB,UAAyB,KAAiB;YACtC,OAAO,IAAI,iEAAQ,CACf,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EACvE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CACzE,CAAC;QACN,CAAC;QAEO,qCAAc,GAAtB,UAAuB,KAAiB;YACpC,IAAI,KAAK,CAAC,KAAK,EAAE;gBACb,aAAa;gBACb,OAAO,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aACrD;YAED,OAAO,WAAW,CAAC,KAAK,CAAC;QAC7B,CAAC;QAEO,8CAAuB,GAA/B,UAAgC,KAAU;YACtC,OAAO,IAAI,iEAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QACtH,CAAC;QA3RD,mGAAmG;QACpF,6BAAgB,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,MAAM,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;QA2RtG,mBAAC;KAAA;IA7RY,kBAAY,eA6RxB;IAgCD,IAAY,IAsGX;IAtGD,WAAY,IAAI;QACZ,yCAAa;QACb,6BAAO;QACP,kCAAU;QACV,kCAAU;QACV,gCAAS;QACT,8BAAQ;QACR,kCAAU;QACV,wCAAa;QACb,oCAAW;QACX,kCAAU;QACV,oCAAW;QACX,wCAAa;QACb,8BAAQ;QACR,gCAAS;QACT,0CAAc;QACd,sCAAY;QACZ,4CAAe;QACf,0CAAc;QACd,oCAAW;QACX,oCAAW;QACX,gCAAS;QACT,gCAAS;QACT,gCAAS;QACT,gCAAS;QACT,gCAAS;QACT,gCAAS;QACT,gCAAS;QACT,gCAAS;QACT,gCAAS;QACT,gCAAS;QACT,0BAAM;QACN,0BAAM;QACN,0BAAM;QACN,0BAAM;QACN,0BAAM;QACN,0BAAM;QACN,0BAAM;QACN,0BAAM;QACN,0BAAM;QACN,0BAAM;QACN,0BAAM;QACN,0BAAM;QACN,0BAAM;QACN,0BAAM;QACN,0BAAM;QACN,0BAAM;QACN,0BAAM;QACN,0BAAM;QACN,0BAAM;QACN,0BAAM;QACN,0BAAM;QACN,0BAAM;QACN,0BAAM;QACN,0BAAM;QACN,0BAAM;QACN,0BAAM;QACN,8CAAgB;QAChB,gDAAiB;QACjB,gCAAS;QACT,sCAAY;QACZ,sCAAY;QACZ,sCAAY;QACZ,sCAAY;QACZ,uCAAa;QACb,uCAAa;QACb,uCAAa;QACb,uCAAa;QACb,uCAAa;QACb,uCAAa;QACb,yCAAc;QACd,+BAAS;QACT,yCAAc;QACd,iDAAkB;QAClB,qCAAY;QACZ,6BAAQ;QACR,6BAAQ;QACR,6BAAQ;QACR,6BAAQ;QACR,6BAAQ;QACR,6BAAQ;QACR,6BAAQ;QACR,6BAAQ;QACR,6BAAQ;QACR,+BAAS;QACT,+BAAS;QACT,+BAAS;QACT,uCAAa;QACb,6CAAgB;QAChB,+CAAiB;QACjB,qDAAoB;QACpB,2CAAe;QACf,mCAAW;QACX,mCAAW;QACX,iCAAU;QACV,qCAAY;QACZ,iDAAkB;QAClB,+CAAiB;QACjB,+CAAiB;QACjB,2CAAe;QACf,iDAAkB;QAClB,+CAAiB;IACrB,CAAC,EAtGW,IAAI,GAAJ,UAAI,KAAJ,UAAI,QAsGf;IAED;;MAEE;IACF;QAcI;;;;;UAKE;QACF,2BAAY,IAAa,EAAE,GAAY,EAAE,KAAc;YACnD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;YACf,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACvB,CAAC;QAED;;;UAGE;QACK,sCAAU,GAAjB,UAAkB,QAA2B;YACzC,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,KAAK,QAAQ,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,KAAK,QAAQ,CAAC,KAAK,CAAC;QACrG,CAAC;QAED;;;UAGE;QACY,wCAAsB,GAApC,UAAqC,UAAkB;YACnD,IAAI,IAAI,GAAG,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,EACtE,GAAG,GAAG,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,EACpE,KAAK,GAAG,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;YAE7E,OAAO,IAAI,iBAAiB,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;QACnD,CAAC;QACL,wBAAC;IAAD,CAAC;IA7CY,uBAAiB,oBA6C7B;IAED;;MAEE;IACF;QAqBI;;UAEE;QACF;YACI,IAAI,CAAC,gBAAgB,GAAS,EAAG,CAAC;YAClC,IAAI,CAAC,eAAe,GAAS,EAAG,CAAC;YACjC,IAAI,CAAC,aAAa,GAAS,EAAG,CAAC;YAE/B,IAAI,CAAC,WAAW,GAAG,IAAI,sEAAa,EAAwB,CAAC;YAC7D,IAAI,CAAC,UAAU,GAAG,IAAI,sEAAa,EAAwB,CAAC;YAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,sEAAa,EAAwB,CAAC;YAE1D,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YAEvB,IAAI,CAAC,IAAI,EAAE,CAAC;QAChB,CAAC;QAKD,sBAAW,uCAAU;YAHrB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,WAAW,CAAC;YAC5B,CAAC;;;WAAA;QAKD,sBAAW,sCAAS;YAHpB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,UAAU,CAAC;YAC3B,CAAC;;;WAAA;QAKD,sBAAW,oCAAO;YAHlB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,QAAQ,CAAC;YACzB,CAAC;;;WAAA;QAED;;;;UAIE;QACK,wCAAc,GAArB,UAAsB,UAAkB,EAAE,MAAgB;YACtD,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACvE,CAAC;QAED;;;;UAIE;QACK,uCAAa,GAApB,UAAqB,UAAkB,EAAE,MAAgB;YACrD,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QACtE,CAAC;QAED;;;;UAIE;QACK,qCAAW,GAAlB,UAAmB,UAAkB,EAAE,MAAgB;YACnD,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QACpE,CAAC;QAED;;UAEE;QACK,iCAAO,GAAd;YACI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBAEtB,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;gBAC1B,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;gBAC3B,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;gBAExB,KAAK,IAAI,OAAO,IAAI,IAAI,CAAC,eAAe,EAAE;oBACtC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;iBAC3C;gBAED,aAAa;gBACb,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;gBAE5B,KAAK,IAAI,OAAO,IAAI,IAAI,CAAC,aAAa,EAAE;oBACpC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;iBACzC;gBAED,aAAa;gBACb,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAE1B,KAAK,IAAI,OAAO,IAAI,IAAI,CAAC,gBAAgB,EAAE;oBACvC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;iBAC5C;gBAED,aAAa;gBACb,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;gBAE7B,IAAI,CAAC,MAAM,EAAE,CAAC;aACjB;iBACI;gBACD,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;aACxE;QACL,CAAC;QAEO,qCAAW,GAAnB,UAAoB,UAAkB,EAAE,MAAgB,EAAE,KAAyC;YAC/F,IAAI,OAAO,GAAG,IAAI,eAAe,CAAC,UAAU,EAAE,MAAM,CAAC,EACjD,SAAS,GAAG,eAAe,CAAC,mBAAmB,EAAE,CAAC;YAEtD,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC;gBACnB,OAAO,KAAK,CAAC,SAAS,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC;YAEH,KAAK,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC;YAE3B,OAAO,OAAO,CAAC;QACnB,CAAC;QAEO,8BAAI,GAAZ;YACI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YAChF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YAC7E,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAEvE,QAAQ,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;YAEjE,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;YAE/D,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QAC/D,CAAC;QAEO,gCAAM,GAAd;YACI,QAAQ,CAAC,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;YACpE,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;YAClE,QAAQ,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QAClE,CAAC;QAEO,uCAAa,GAArB,UAAsB,KAAyC,EAAE,YAAiD;YAC9G,OAAO,UAAC,EAAiB;gBACrB,IAAI,oBAA0C,EAC1C,SAAS,GAAY,IAAI,CAAC;gBAE9B,oBAAoB,GAAG,IAAI,oBAAoB,CAAC,EAAE,CAAC,CAAC;gBAEpD,YAAY,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;gBAE3C,KAAK,IAAI,iBAAiB,IAAI,KAAK,EAAE;oBACjC,IAAI,oBAAoB,CAAC,OAAO,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,EAAE;wBACxD,KAAK,CAAC,iBAAiB,CAAC,CAAC,MAAM,EAAE,CAAC;wBAClC,EAAE,CAAC,cAAc,EAAE,CAAC;wBACpB,SAAS,GAAG,KAAK,CAAC;qBACrB;iBACJ;gBAED,OAAO,SAAS,CAAC;YACrB,CAAC,CAAC;QACN,CAAC;QA9Kc,mCAAmB,GAAW,CAAC,CAAC;QA+KnD,sBAAC;KAAA;IAhLY,qBAAe,kBAgL3B;IAED;;GAED;IACC;QAkCI,6BAAY,MAAmB;YAC3B,IAAI,CAAC,QAAQ,GAAgB,MAAM,CAAC;YACpC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;YAC5B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;YACpE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;QACtC,CAAC;QA9BD,sBAAW,mCAAE;YAHb;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,GAAG,CAAC;YACpB,CAAC;;;WAAA;QAKD,sBAAW,wCAAO;YAHlB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,QAAQ,CAAC;YACzB,CAAC;;;WAAA;QAKD,sBAAW,wCAAO;YAHlB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,QAAQ,CAAC;YACzB,CAAC;;;WAAA;QAKD,sBAAW,oCAAG;YAHd;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,IAAI,CAAC;YACrB,CAAC;;;WAAA;QAQL,0BAAC;IAAD,CAAC;IAxCY,yBAAmB,sBAwC/B;IAED;QAAA;QAUA,CAAC;QATiB,8BAAQ,GAAtB,UAAuB,OAAe;YAClC,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAE7B,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;gBAChB,OAAO,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;aAC9B;YAED,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;QACL,4BAAC;IAAD,CAAC;IAVY,2BAAqB,wBAUjC;IAED,IAAI,WAAW,GAAsC;QACjD,GAAG,EAAE,GAAG;QACR,GAAG,EAAE,GAAG;QACR,GAAG,EAAE,GAAG;QACR,GAAG,EAAE,GAAG;QACR,GAAG,EAAE,GAAG;QACR,GAAG,EAAE,GAAG;QACR,GAAG,EAAE,GAAG;QACR,GAAG,EAAE,GAAG;QACR,GAAG,EAAE,GAAG;QACR,GAAG,EAAE,GAAG;QACR,GAAG,EAAE,GAAG;QACR,GAAG,EAAE,GAAG;QACR,GAAG,EAAE,GAAG;QACR,GAAG,EAAE,GAAG;QACR,IAAI,EAAE,GAAG;QACT,GAAG,EAAE,GAAG;QACR,GAAG,EAAE,GAAG;QACR,GAAG,EAAE,GAAG;QACR,GAAG,EAAE,IAAI;KACZ,EACG,WAAW,GAAgC;QACvC,IAAI,EAAE,KAAK;QACX,GAAG,EAAE,KAAK;QACV,IAAI,EAAE,OAAO;QACb,IAAI,EAAE,QAAQ;QACd,GAAG,EAAE,WAAW;QAChB,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,KAAK;QACX,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,IAAI;QACV,IAAI,EAAE,OAAO;QACb,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,IAAI;QACX,KAAK,EAAE,IAAI;QACX,KAAK,EAAE,IAAI;QACX,KAAK,EAAE,IAAI;QACX,KAAK,EAAE,IAAI;QACX,KAAK,EAAE,IAAI;QACX,KAAK,EAAE,IAAI;QACX,KAAK,EAAE,IAAI;QACX,KAAK,EAAE,IAAI;QACX,KAAK,EAAE,KAAK;QACZ,KAAK,EAAE,KAAK;QACZ,KAAK,EAAE,KAAK;KACf,CAAC;IAEN;;MAEE;IACF;QAmBI;;;UAGE;QACF,8BAAY,QAAuB;YAC/B,IAAI,IAAI,EACJ,SAAS,CAAC;YAEd,IAAI,CAAC,SAAS,GAAG,IAAI,iBAAiB,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAE7F,IAAI,QAAQ,CAAC,OAAO,EAAE;gBAClB,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC;aAC3B;iBACI,IAAI,QAAQ,CAAC,KAAK,EAAE;gBACrB,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC;aACzB;YAED,IAAI,CAAC,CAAC,CAAC,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,QAAQ,CAAC,GAAG,CAAC,EAAE;gBACzE,aAAa;gBACb,IAAI,CAAC,CAAC,SAAS,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE;oBAClC,aAAa;oBACb,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;oBAEpD,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,WAAW,CAAC,SAAS,CAAC,EAAE;wBAChD,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC;qBACtC;iBACJ;aACJ;YAED,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;YACrB,IAAI,CAAC,OAAO,GAAU,IAAK,CAAC;YAC5B,aAAa;YACb,IAAI,CAAC,MAAM,GAAG,IAAI,mBAAmB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC3D,CAAC;QAED;;;UAGE;QACK,sCAAO,GAAd,UAAe,OAAwB;YACnC,OAAO,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAChH,CAAC;QACL,2BAAC;IAAD,CAAC;IA7DY,0BAAoB,uBA6DhC;IAED;;GAED;IACC;QAiBI;;;;UAIE;QACF,yBAAY,OAAe,EAAE,MAAgB;YAA7C,iBASC;YARG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,iBAAiB,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;YACnE,IAAI,CAAC,GAAG,GAAG,qBAAqB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAEnD,IAAI,CAAC,WAAW,GAAG,IAAI,oEAAY,EAAE,CAAC;YACtC,IAAI,CAAC,iBAAiB,GAAG,IAAI,0EAAe,CAAC;gBACzC,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;YAC/B,CAAC,EAAE,IAAI,CAAC,CAAC;QACb,CAAC;QAKD,sBAAW,sCAAS;YAHpB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,WAAW,CAAC;YAC5B,CAAC;;;WAAA;QAED;;UAEE;QACK,iCAAO,GAAd;YACI,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,CAAC;QACxC,CAAC;QACL,sBAAC;IAAD,CAAC;IA9CY,qBAAe,kBA8C3B;AACL,CAAC,EA95Ba,KAAK,KAAL,KAAK,QA85BlB;;;;;;;;;ACp6BD;AAAA;IAKI,yBAAY,MAAgB,EAAE,OAAwB;QAAxB,yCAAwB;QAClD,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC,KAAK,CAAC;QACtC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QAEtB,IAAI,OAAO,EAAE;YACT,IAAI,CAAC,IAAI,EAAE,CAAC;SACf;IACL,CAAC;IAEM,gCAAM,GAAb;QAAc,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QACxB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACpC,CAAC;IAEM,oCAAU,GAAjB;QAAkB,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QAC5B,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;IAEM,8BAAI,GAAX;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;IACjC,CAAC;IAEM,+BAAK,GAAZ;QACI,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC,KAAK,CAAC;IAC1C,CAAC;IA5Bc,qBAAK,GAAa,cAAQ,CAAC,CAAC;IA6B/C,sBAAC;CAAA;AA9B2B;;;;;;;;;;;ACCoD;AAE1E,IAAQ,gBAAgB,CAwD7B;AAxDD,WAAc,gBAAgB;IAE1B;;MAEE;IACF;QAqBI,oCAAY,QAA+B,EAAE,MAAyD,EAAE,MAA8B,EAAE,SAAoC,EAAE,QAAkC,EAAE,QAAkC;YAA5I,mCAAoB,GAAG,EAAE,IAAI,CAAC;YAAE,yCAAuB,GAAG,EAAE,OAAO,CAAC;YAAE,uCAAsB,GAAG,EAAE,MAAM,CAAC;YAAE,uCAAsB,GAAG,EAAE,MAAM,CAAC;YAChP,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,WAAW,GAAG,IAAI,4FAAmB,CAAC,gBAAgB,EAAE,CAAC;YAE9D,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,eAAe,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YACnD,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;YACzD,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,eAAe,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;YACvD,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,eAAe,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;YACvD,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAClD,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,aAAa,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;YACxD,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,aAAa,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;YACtD,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,aAAa,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;QAC1D,CAAC;QAEO,6CAAQ,GAAhB,UAAiB,OAAiB,EAAE,aAAqB,EAAE,SAAiB,EAAE,WAAoB;YAAlG,iBAYC;YAXG,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrC,aAAa;gBACb,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;oBACtC,aAAa;oBACb,IAAI,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,WAAW,EAAE;wBAC5C,aAAa;wBACb,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,WAAW,CAAC;wBAC1C,KAAI,CAAC,OAAO,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;qBACxC;gBACL,CAAC,CAAC,CAAC;aACN;QACL,CAAC;QACL,iCAAC;IAAD,CAAC;IAjDY,2CAA0B,6BAiDtC;AAEL,CAAC,EAxDa,gBAAgB,KAAhB,gBAAgB,QAwD7B;;;;;;;;;;;;;;;;;;;;;;;AC3DqD;AAEK;AAGI;AAEzD,IAAQ,mBAAmB,CAwShC;AAxSD,WAAc,mBAAmB;IAgB7B;;EAEF;IACE;QAkBI;;UAEE;QACF;YACI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;YAClB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;YAChB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QACtB,CAAC;QACL,uBAAC;IAAD,CAAC;IA3BY,oCAAgB,mBA2B5B;IAGD;;EAEF;IACE;QAgBI;;;UAGE;QACF,4BAAY,SAAsB;YAC9B,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,iEAAQ,CAAC,IAAI,CAAC;YAC7E,IAAI,CAAC,QAAQ,GAAG,iEAAQ,CAAC,IAAI,CAAC;YAC9B,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YAErB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAChC,CAAC;QAED;;UAEE;QACK,mCAAM,GAAb;YACI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACxB,CAAC;QAED;;UAEE;QACK,iCAAI,GAAX;YACI,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACzB,CAAC;QAED;;UAEE;QACK,qCAAQ,GAAf;YACI,OAAO,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QACpD,CAAC;QAED;;;UAGE;QACK,mCAAM,GAAb,UAAc,QAAkB;YAC5B,uCAAuC;YACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7C,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;gBAC5C,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;aAC/C;QACL,CAAC;QACL,yBAAC;IAAD,CAAC;IA7DY,sCAAkB,qBA6D9B;IAED;;EAEF;IACE;QAA8C,4CAAkB;QA2B5D,kCAAY,QAAqB,EAAE,SAAiB,EAAE,mBAAmC,EAAE,gBAAgC;YAArE,gEAAmC;YAAE,0DAAgC;YAA3H,YACI,kBAAM,QAAQ,CAAC,SAelB;YAbG,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,KAAI,CAAC,OAAO,GAAG,IAAI,gBAAgB,EAAE,CAAC;YACtC,KAAI,CAAC,MAAM,GAAG,IAAI,sEAAa,EAAc,CAAC;YAC9C,KAAI,CAAC,gBAAgB,GAAG,IAAI,0EAAe,CAAC;gBACxC,KAAI,CAAC,cAAc,EAAE,CAAC;YAC1B,CAAC,EAAE,mBAAmB,CAAC,CAAC;YAExB,IAAI,gBAAgB,EAAE;gBAClB,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,gCAAgC,CAAC;aACjE;iBACI;gBACD,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,8BAA8B,CAAC;aAC/D;;QACL,CAAC;QAQD;;;UAGE;QACK,sDAAmB,GAA1B,UAA2B,SAAiB;YACxC,aAAa;YACb,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,KAAK,CAAC;QAC5C,CAAC;QAED;;;UAGE;QACK,8CAAW,GAAlB,UAAmB,SAAiB;YAChC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QAC/B,CAAC;QAED;;;UAGE;QACK,6CAAU,GAAjB,UAAkB,SAAiB;YAC/B,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QAChC,CAAC;QAWM,4CAAS,GAAhB,UAAiB,KAAc;YAC3B,IAAI,OAAO,KAAK,KAAK,WAAW,EAAE;gBAC9B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,gBAAgB,EAAE,CAAC;aAC3B;YAED,OAAO,IAAI,CAAC,UAAU,CAAC;QAC3B,CAAC;QAED;;;UAGE;QACK,yCAAM,GAAb,UAAc,QAAkB;YAC5B,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;gBAEpF,iBAAM,MAAM,YAAC,QAAQ,CAAC,CAAC;aAC1B;QACL,CAAC;QAED;;;;UAIE;QACK,uCAAI,GAAX,UAAY,SAAiB,EAAE,WAAoB;YAC/C,aAAa;YACb,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,WAAW,EAAE;gBAChD,aAAa;gBACb,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,WAAW,CAAC;gBACtC,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC;gBAC/B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAa;oBAC5B,SAAS,EAAE,SAAS;oBACpB,WAAW,EAAE,WAAW;iBAC3B,CAAC,CAAC;aACN;iBACI;gBACD,MAAM,IAAI,KAAK,CAAC,SAAS,GAAG,2BAA2B,CAAC,CAAC;aAC5D;QACL,CAAC;QAEO,iEAA8B,GAAtC;YACI,IAAI,QAAQ,GAAG,iEAAQ,CAAC,IAAI,CAAC;YAE7B,IAAI,QAAQ,CAAC,MAAM,EAAE,EAAE;gBACnB,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE;oBACjB,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC;iBACjC;gBACD,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;oBACnB,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC;iBACjC;gBAED,IAAI,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE;oBAClB,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;wBACnB,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC;qBACjC;oBACD,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;wBACpB,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC;qBACjC;iBACJ;aACJ;YAED,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC7B,CAAC;QAEO,mEAAgC,GAAxC;YACI,IAAI,QAAQ,GAAG,iEAAQ,CAAC,IAAI,CAAC;YAE7B,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE;gBACjB,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC;aACjC;YACD,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;gBACnB,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC;aACjC;YACD,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;gBACnB,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC;aACjC;YACD,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gBACpB,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC;aACjC;YAED,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC7B,CAAC;QAEO,iDAAc,GAAtB;YACI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE;gBACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aAChE;QACL,CAAC;QACL,+BAAC;IAAD,CAAC,CAhL6C,kBAAkB,GAgL/D;IAhLY,4CAAwB,2BAgLpC;AAEL,CAAC,EAxSa,mBAAmB,KAAnB,mBAAmB,QAwShC;;;;;;;;;;;;;;AC/S0D;AACX;AACF;AACI;AAE5C,IAAQ,UAAU,CAsYvB;AAtYD,WAAc,UAAU;IA6EpB;;EAEF;IACE,IAAY,UAEX;IAFD,WAAY,UAAU;QAClB,yCAAG;IACP,CAAC,EAFW,UAAU,GAAV,qBAAU,KAAV,qBAAU,QAErB;IAED;QAGI;YACI,IAAI,CAAC,mBAAmB,GAAG;gBACvB,UAAU,EAAE,IAAI,gBAAgB,EAAE;aACrC,CAAC;QACN,CAAC;QAEM,wBAAI,GAAX,UAAY,IAAU,EAAE,aAA6B,EAAE,UAA6C;YAChG,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,yCAAyC,GAAG,IAAI,CAAC,WAAW,GAAG,qBAAqB,CAAC,CAAC;aACzG;YAED,OAAO,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,aAAa,EAAE,UAAU,CAAC,CAAC;QAC5F,CAAC;QACL,gBAAC;IAAD,CAAC;IAhBY,oBAAS,YAgBrB;IAOD;QAAA;QAuMA,CAAC;QApMU,+BAAI,GAAX,UAAY,IAAU,EAAE,aAA6B,EAAE,UAA6C;YAApG,iBA6DC;YA5DG,yBAAyB;YACzB,IAAI,OAAO,GAAG,CAAC,EACX,SAAS,GAAG,CAAC,EACb,aAAa,GAA0B,IAAI,sEAAa,EAAU,CAAC;YAEvE,kDAAkD;YAClD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EACjC,UAAC,OAA6B;gBAC1B,OAAO,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,gBAAgB,CAAC,gBAAgB;gBAEzE,aAAa,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YACnC,CAAC,EACD,UAAC,cAA+D;gBAC5D,wDAAwD;gBAExD,sDAAsD;gBACtD,IAAI,SAAS,GAAsB,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,EAAE,cAAc,EAAE,aAAa,CAAC,EACrG,QAA8B,EAC9B,MAAM,GAAkC,IAAI,KAAK,EAA0B,EAC3E,iBAAiB,GAAG,CAAC,CAAC,GAAG,gBAAgB,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBAErF,OAAO,GAAG,gBAAgB,CAAC,gBAAgB,CAAC;gBAE5C,qEAAS,CAAC,UAAC,IAAgB,EAAE,CAAS;oBAClC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,WAAW,EAAE;wBACrC,MAAM,IAAI,KAAK,CAAC,uCAAuC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,qBAAqB,CAAC,CAAC;qBAC1G;oBAED,KAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC,EAAE,aAAa,EAAE,SAAS,EAClD,UAAC,OAA8B,EAAE,aAAqB;wBAClD,aAAa,CAAC,OAAO,CAAC,OAAO,GAAG,aAAa,GAAG,iBAAiB,CAAC,CAAC;oBACvE,CAAC,EACD,UAAC,KAA6B;wBAC1B,OAAO,IAAI,iBAAiB,CAAC;wBAE7B,aAAa,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;wBAE/B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBAEnB,IAAI,EAAE,CAAC;oBACX,CAAC,CAAC,CAAC;gBACX,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;oBACnB,oBAAoB;oBAEpB,UAAU,CAAC;wBACP,MAAM,EAAE,MAAM;qBACjB,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;YAEP,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzC,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;aAC3C;YAED,OAAO;gBACH,SAAS,EAAE,SAAS;gBACpB,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM;gBAC9B,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM;gBACxC,eAAe,EAAE,aAAa;aACjC,CAAC;QACN,CAAC;QAEO,6CAAkB,GAA1B,UAA2B,QAA4B,EAAE,aAAqD,EAAE,UAAoF;YAChM,IAAI,cAAc,GAAoD,EAAE,EACpE,WAAW,GAAW,CAAC,EACvB,QAAQ,GAAG,UAAC,MAA4B;gBACpC,aAAa,CAAC,MAAM,CAAC,CAAC;gBACtB,2BAA2B;gBAC3B,IAAI,EAAE,WAAW,KAAK,QAAQ,CAAC,MAAM,EAAE;oBACnC,UAAU,CAAC,cAAc,CAAC,CAAC;iBAC9B;YACL,CAAC,CAAC;YAEN,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACtC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,2DAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;gBAChI,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC5D;QACL,CAAC;QAEO,8CAAmB,GAA3B,UAA4B,QAA4B,EAAE,cAA+D,EAAE,aAA6B;YACpJ,IAAI,YAAY,GAAgC,IAAI,KAAK,EAAwB,EAC7E,aAAa,GAAG,IAAI,KAAK,EAAkD,EAC3E,OAAoC,EACpC,KAAa,CAAC;YAElB,QAAQ,CAAC,IAAI,CAAC,UAAC,CAAc,EAAE,CAAc,IAAO,OAAO,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;YAEvF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACtC,OAAO,GAAG,2DAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;gBAE/H,KAAK,IAAI,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE;oBACzC,aAAa;oBACb,IAAI,OAAO,aAAa,CAAC,kBAAkB,CAAC,QAAQ,CAAC,KAAK,WAAW,EAAE;wBACnE,KAAK,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BACvF,IAAI,OAAO,aAAa,CAAC,CAAC,CAAC,KAAK,WAAW,EAAE;gCACzC,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,EAA2C,CAAC;6BAC3E;4BAED,aAAa;4BACb,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,aAAa,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;yBACjI;qBACJ;iBACJ;gBAED,KAAK,IAAI,SAAS,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,cAAc,EAAE;oBAC9C,KAAK,IAAI,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,SAAS,CAAC;wBACtD,aAAa;wBACb,IAAI,OAAO,aAAa,CAAC,iBAAiB,CAAC,QAAQ,CAAC,KAAK,WAAW,EAAE;4BAClE,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC;4BAEvD,IAAI,OAAO,aAAa,CAAC,KAAK,CAAC,KAAK,WAAW,EAAE;gCAC7C,aAAa,CAAC,KAAK,CAAC,GAAG,IAAI,KAAK,EAA2C,CAAC;6BAC/E;4BAED,aAAa;4BACb,aAAa,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,EAAE,aAAa,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;yBACnJ;iBACR;gBAED,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;aAC/C;YAED,OAAO;gBACH,SAAS,EAAE,YAAY;gBACvB,aAAa,EAAE,aAAa;aAC/B,CAAC;QACN,CAAC;QAED,yCAAyC;QACjC,0CAAe,GAAvB,UAAwB,OAAa,EAAE,UAAkB,EAAE,aAA6B,EAAE,SAA4B,EAAE,UAA4E,EAAE,UAA0D;YAAhQ,iBAyCC;YAxCG,UAAU,CAAC;gBACP,+GAA+G;gBAC/G,IAAI,QAAQ,GAAG,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,EACrC,QAAQ,GAAG,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,KAAK,CAAC,EAChE,KAAK,GAAG,IAAI,2DAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,UAAU,EAAE,SAAS,CAAC,SAAS,EAAE,QAAQ,CAAC,EAChI,UAAU,GAAmD,IAAI,KAAK,EAA2C,CAAC;gBAEtH,KAAK,IAAI,QAAQ,IAAI,QAAQ,CAAC,UAAU,EAAE;oBACtC,aAAa;oBACb,IAAI,OAAO,aAAa,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,WAAW,EAAE;wBAC3D,aAAa;wBACb,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,aAAa,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;qBAChH;iBACJ;gBAED,KAAK,CAAC,MAAM,GAAG,UAAU,CAAC;gBAC1B,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;gBACjC,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;gBAEjC,sDAAsD;gBACtD,KAAK,CAAC,YAAY,GAAG,yDAAQ,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;gBAElD,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,UAAC,OAA8B,EAAE,eAAuB;oBAC1E,IAAI,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;wBAChD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BAC5E,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;yBAC9D;qBACJ;oBAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACxC,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;qBAC1B;oBAED,UAAU,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;gBACzC,CAAC,CAAC,CAAC;gBAEH,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC;oBAChB,UAAU,CAAC,KAAK,CAAC,CAAC;gBACtB,CAAC,CAAC,CAAC;YACP,CAAC,EAAE,CAAC,CAAC,CAAC;QACV,CAAC;QAEO,8CAAmB,GAA3B,UAA4B,aAAqB,EAAE,EAAiB;YAChE,OAAO,UAAC,OAA8B;gBAClC,OAAO,EAAE,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;YACtC,CAAC,CAAC;QACN,CAAC;QAEO,6CAAkB,GAA1B,UAA2B,IAAmB,EAAE,OAAe;YAC3D,IAAI,UAAU,GAAyB,IAAI,KAAK,EAAiB,EAC7D,KAAa,CAAC;YAElB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAClC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;gBAEhC,IAAI,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY,KAAK,CAAC,EAAE;oBACvC,UAAU,CAAC,KAAK,CAAC,GAAG,IAAI,KAAK,EAAU,CAAC;iBAC3C;gBAED,4CAA4C;gBAC5C,UAAU,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aACvC;YAED,OAAO,UAAU,CAAC;QACtB,CAAC;QArMc,iCAAgB,GAAW,EAAE,CAAC;QAsMjD,uBAAC;KAAA;IAvMY,2BAAgB,mBAuM5B;IAyCD;;EAEF;IACE;QAAA;QAsCA,CAAC;QAZiB,eAAI,GAAlB,UAAmB,IAAY,EAAE,UAA6C,EAAE,aAA8B,EAAE,MAAmC;YAAnC,kCAAqB,UAAU,CAAC,GAAG;YAC/I,IAAI,CAAC,aAAa,EAAE;gBAChB,WAAW;gBACX,aAAa,GAAG;oBACZ,iBAAiB,EAAE,EAAE;oBACrB,kBAAkB,EAAE,EAAE;oBACtB,UAAU,EAAE,EAAE;iBACjB,CAAC;aACL;YAED,OAAO,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,aAAa,EAAE,UAAU,CAAC,CAAC;QACzF,CAAC;QApCc,mBAAQ,GAAqC;YACxD,GAAG,EAAE,IAAI,SAAS,EAAE;SACvB,CAAC;QAmCN,iBAAC;KAAA;IAtCY,qBAAU,aAsCtB;AAEL,CAAC,EAtYa,UAAU,KAAV,UAAU,QAsYvB;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1Y+C;AACF;AACa;AACL;AACN;AAGN;AACkB;AAEtD,IAAQ,SAAS,CAubtB;AAvbD,WAAc,SAAS;IACnB;;EAEF;IACE;QAgBI;;;;;;;;;;;;;UAaE;QACF,kBAAY,OAA2B,EAAE,YAAsB,EAAE,UAAoB,EAAE,KAAa,EAAE,OAAe,EAAE,QAAgB,EAAE,aAAqB,EAAE,QAAkB,EAAE,cAAwB,EAAE,eAAyB,EAAE,gBAA6C;YAClR,OAAO,CAAC,QAAQ,GAAG,YAAY,CAAC;YAChC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC5B,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC;YAEpB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;YACpC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;YACvC,IAAI,CAAC,QAAQ,GAAG,IAAI,sEAAa,EAAY,CAAC;YAC9C,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;YACxC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,YAAY,GAAG,eAAe,CAAC,YAAY,CAAC;YACvE,IAAI,CAAC,cAAc,GAAG,IAAI,2DAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,gBAAgB,CAAC,CAAC;YAC3G,IAAI,CAAC,UAAU,GAAG,IAAI,2DAAQ,CAAC,WAAW,CAAC,CAAC,EAAE,OAAO,GAAG,GAAG,EAAE,cAAc,EAAE,uEAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAExG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;YAC3B,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;QAC3B,CAAC;QAKD,sBAAW,6BAAO;YAHlB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,QAAQ,CAAC;YACzB,CAAC;;;WAAA;QAKD,sBAAW,6BAAO;YAHlB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,QAAQ,CAAC;YACzB,CAAC;;;WAAA;QAED;;UAEE;QACK,0BAAO,GAAd;YACI,OAAO,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;QAED;;;UAGE;QACK,yBAAM,GAAb,UAAc,QAAkB;YAC5B,IAAI,QAAgB,CAAC;YAErB,IAAI,IAAI,CAAC,MAAM,EAAE;gBACb,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC;gBAEpD,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE;oBACxC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;oBACpB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;iBAC/B;qBACI;oBACD,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,QAAQ,IAAI,IAAI,CAAC,UAAU,EAAE;wBACjD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;wBACvB,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,GAAG,CAAC;wBACnD,IAAI,CAAC,UAAU,CAAC,EAAE,GAAG,CAAC,CAAC;wBACvB,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC;wBACjD,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;qBAC7B;oBAED,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;oBACrC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;oBAEjC,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;oBACzE,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC;oBACrD,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,GAAG,CAAC;iBACzD;aACJ;QACL,CAAC;QACL,eAAC;IAAD,CAAC;IAzGY,kBAAQ,WAyGpB;IAED;;EAEF;IACE;QAqBI,eAAY,GAAM,EAAE,GAAY;YAAZ,+BAAY;YAC5B,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;YACf,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACnB,CAAC;QAED;;UAEE;QACK,qBAAK,GAAZ;YACI,OAAO,IAAI,KAAK,CAAI,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;QAC5C,CAAC;QAED;;;UAGE;QACY,kBAAY,GAA1B,UAA2B,KAAoB;YAC3C,OAAO,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC;QAC/D,CAAC;QAED;;;UAGE;QACY,oBAAc,GAA5B,UAA6B,KAAsB;YAC/C,OAAO,yDAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,GAAG,KAAK,CAAC,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC;QACjJ,CAAC;QACL,YAAC;IAAD,CAAC;IAhDY,eAAK,QAgDjB;IAED;;EAEF;IACE;QAA6B,2BAAkB;QA0D3C;;;;;UAKE;QACF,iBAAY,CAAS,EAAE,CAAS,EAAE,gBAA6C;YAA/E,YACI,kBAAM,IAAI,iEAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAY5B;YAhED;;cAEE;YACK,sBAAgB,GAAoB,IAAI,KAAK,CAAW,yDAAQ,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC;YAC9F;;cAEE;YACK,uBAAiB,GAAkB,IAAI,KAAK,CAAS,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;YAC5E;;cAEE;YACK,oBAAc,GAAkB,IAAI,KAAK,CAAS,CAAC,CAAC,CAAC;YAC5D;;cAEE;YACK,sBAAgB,GAAoB,IAAI,KAAK,CAAW,yDAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,yDAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;YACjH;;cAEE;YACK,mBAAa,GAAkB,IAAI,KAAK,CAAS,EAAE,EAAE,GAAG,CAAC,CAAC;YACjE;;cAEE;YACK,mBAAa,GAAkB,IAAI,KAAK,CAAS,GAAG,EAAE,GAAG,CAAC,CAAC;YAClE;;cAEE;YACK,sBAAgB,GAAkB,IAAI,KAAK,CAAS,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;YAC3E;;cAEE;YACK,2BAAqB,GAAkB,IAAI,KAAK,CAAS,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;YAC5E;;cAEE;YACK,qBAAe,GAAkB,IAAI,KAAK,CAAS,CAAC,CAAC,CAAC;YAC7D;;cAEE;YACK,4BAAsB,GAAoB,IAAI,KAAK,CAAW,yDAAQ,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;YAC/F;;cAEE;YACK,6BAAuB,GAAoB,IAAI,KAAK,CAAW,yDAAQ,CAAC,WAAW,CAAC,EAAE,CAAC,EAAE,yDAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;YAWrH,KAAI,CAAC,YAAY,GAAG,IAAI,KAAK,EAAsB;YACnD,KAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,KAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YACrB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,gBAAgB,GAAG,UAAC,QAAkB;gBACvC,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;gBACnC,OAAO,KAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YAC5C,CAAC,CAAC;YAEF,KAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;;QAC7C,CAAC;QAED;;UAEE;QACK,4BAAU,GAAjB;YACI,OAAO,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;QAED;;UAEE;QACK,uBAAK,GAAZ;YACI,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;gBAChC,MAAM,IAAI,KAAK,CAAC,wDAAwD,CAAC,CAAC;aAC7E;YAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QAC1C,CAAC;QAED;;UAEE;QACK,sBAAI,GAAX;YACI,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAC3B,CAAC;QAaM,4BAAU,GAAjB,UAAkB,OAA2B,EAAE,MAAkB;YAAlB,mCAAkB;YAC7D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACnC;QACL,CAAC;QAED;;;UAGE;QACK,+BAAa,GAApB,UAAqB,OAA2B;YAC5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC/C,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;oBAClC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;iBACpC;aACJ;QACL,CAAC;QAED;;;UAGE;QACK,sBAAI,GAAX;YACI,IAAI,aAAa,GAAW,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,EAC/D,WAAqB,EACrB,iBAAyB,EACzB,aAAqB,EACrB,gBAA0B,EAC1B,QAAkB,EAClB,SAAS,GAAoB,IAAI,KAAK,EAAY,CAAC;YAEvD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,CAAC,EAAE,EAAE;gBACpC,gBAAgB,GAAG,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBAC/D,aAAa,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBACvD,iBAAiB,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBAC/D,WAAW,GAAG,IAAI,iEAAQ,CAAC,gBAAgB,CAAC,OAAO,GAAG,aAAa,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,iEAAQ,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;gBAEvH,QAAQ,GAAG,IAAI,QAAQ,CACnB,IAAI,CAAC,oBAAoB,EAAE,EAC3B,iEAAQ,CAAC,IAAI,EACb,WAAW,EACX,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,EACtC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,EACxC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC,EACzC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,qBAAqB,CAAC,EAC9C,gBAAgB,EAChB,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,sBAAsB,CAAC,EACjD,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,uBAAuB,CAAC,EAClD,IAAI,CAAC,gBAAgB,CACxB,CAAC;gBAEF,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;gBAElC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;gBAE5C,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;gBAChC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBAE7C,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC5B;YAED,OAAO,SAAS,CAAC;QACrB,CAAC;QAED;;;UAGE;QACK,sBAAI,GAAX,UAAY,OAAiC;YACzC,iBAAM,UAAU,YAAC,OAAO,CAAC,CAAC;YAC1B,iBAAM,QAAQ,YAAC,OAAO,CAAC,CAAC;QAC5B,CAAC;QAED;;;UAGE;QACK,uBAAK,GAAZ,UAAa,KAAa;YACtB,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;QACvE,CAAC;QAED;;;UAGE;QACK,wBAAM,GAAb,UAAc,QAAkB;YAC5B,IAAI,aAAqB,EACrB,SAAiB,EACjB,YAAoB,CAAC;YAEzB,IAAI,IAAI,CAAC,SAAS,EAAE;gBAChB,YAAY,GAAG,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,YAAY,CAAC;gBACxE,IAAI,YAAY,GAAG,CAAC,EAAE;oBAClB,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;oBACxD,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,YAAY,CAAC,CAAC;oBAErD,IAAI,SAAS,GAAG,CAAC,EAAE;wBACf,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;wBAExC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;4BAChC,IAAI,CAAC,IAAI,EAAE,CAAC;yBACf;qBACJ;iBACJ;gBAED,KAAK,IAAI,UAAU,IAAI,IAAI,CAAC,aAAa,EAAE;oBACvC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;iBACnD;aACJ;QACL,CAAC;QAED;;UAEE;QACK,+BAAa,GAApB;YACI,IAAI,MAAM,GAAG,IAAI,qDAAM,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YAElH,OAAO,MAAM,CAAC;QAClB,CAAC;QAED;;UAEE;QACK,uBAAK,GAAZ;YACI,IAAI,KAAK,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAEjF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC/C,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;aAC1C;YAED,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;YACvD,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;YACzD,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;YACnD,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;YACvD,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YACjD,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;YACvD,KAAK,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE,CAAC;YACjE,KAAK,CAAC,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,CAAC;YACnE,KAAK,CAAC,uBAAuB,GAAG,IAAI,CAAC,uBAAuB,CAAC,KAAK,EAAE,CAAC;YACrE,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YACjD,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;YAErD,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC7B,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC/B,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC7B,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAE3B,OAAO,KAAK,CAAC;QACjB,CAAC;QAEO,sCAAoB,GAA5B;YACI,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YAExE,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,KAAK,EAAE,CAAC;QACnD,CAAC;QACL,cAAC;IAAD,CAAC,CA/Q4B,2DAAQ,CAAC,SAAS,GA+Q9C;IA/QY,iBAAO,UA+QnB;AACL,CAAC,EAvba,SAAS,KAAT,SAAS,QAubtB;;;;;;;;;;;;;;;;;;;;;;;;AClcqD;AACR;AAKa;AAEX;AAG1C,IAAQ,QAAQ,CAiTrB;AAjTD,WAAc,QAAQ;IAElB,uCAAuC;IACvC,0BAA0B;IAC1B,GAAG;IAEH,uEAAuE;IACvE;;EAEF;IACE,eAA8C,IAAO;QACjD,IAAU,IAAK,CAAC,KAAK,EAAE;YACnB,OAAa,IAAK,CAAC,KAAK,EAAE,CAAC;SAC9B;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;QAWI;;;;;;UAME;QACF,eAAY,IAAO,EAAE,EAAK,EAAE,QAAkB,EAAE,gBAA6C;YACzF,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;YACzB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;YACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAClC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,QAAQ,GAAG,yDAAQ,CAAC,IAAI,CAAC;YAC9B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,IAAI,sEAAa,EAAK,CAAC;YACxC,IAAI,CAAC,WAAW,GAAG,IAAI,sEAAa,EAAY,CAAC;YACjD,IAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;QAC9C,CAAC;QAKD,sBAAW,2BAAQ;YAHnB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;YAC1B,CAAC;;;WAAA;QAKD,sBAAW,6BAAU;YAHrB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,WAAW,CAAC;YAC5B,CAAC;;;WAAA;QAKD,sBAAW,uBAAI;YAHf;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC;YACtB,CAAC;iBACD,UAAgB,IAAO;gBACnB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YACtB,CAAC;;;WAHA;QAQD,sBAAW,qBAAE;YAHb;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,GAAG,CAAC;YACpB,CAAC;iBACD,UAAc,EAAK;gBACf,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;YAClB,CAAC;;;WAHA;QAQD,sBAAW,0BAAO;YAHlB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,QAAQ,CAAC;YACzB,CAAC;iBACD,UAAmB,OAAU;gBACzB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YAC5B,CAAC;;;WAHA;QAQD,sBAAW,2BAAQ;YAHnB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;YAC1B,CAAC;iBACD,UAAoB,QAAkB;gBAClC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC9B,CAAC;;;WAHA;QAQD,sBAAW,0BAAO;YAHlB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YACjC,CAAC;;;WAAA;QAKD,sBAAW,mCAAgB;YAH3B;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,iBAAiB,CAAC;YAClC,CAAC;iBACD,UAA4B,EAA+B;gBACvD,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;YAChC,CAAC;;;WAHA;QAKD;;UAEE;QACK,yBAAS,GAAhB;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC;QACzB,CAAC;QAED;;UAEE;QACK,oBAAI,GAAX;YACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACzB,CAAC;QAED;;UAEE;QACK,qBAAK,GAAZ;YACI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAC1B,CAAC;QAED;;UAEE;QACK,qBAAK,GAAZ;YACI,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,CAAC,CAAC;YAC/B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtC,CAAC;QAED;;UAEE;QACK,oBAAI,GAAX;YACI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,KAAK,EAAE,CAAC;QACjB,CAAC;QAED;;UAEE;QACK,uBAAO,GAAd;YACI,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,CAAC,IAAI,EAAE,CAAC;QAChB,CAAC;QAED;;UAEE;QACK,uBAAO,GAAd;YACI,IAAI,CAAC,QAAQ,GAAG,yDAAQ,CAAC,IAAI,CAAC;YAC9B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;YACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC;QAED;;;UAGE;QACK,sBAAM,GAAb,UAAc,QAAkB;YAC5B,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAChB,OAAO;aACV;YAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAEpD,IAAI,IAAI,CAAC,QAAQ,CAAC,YAAY,IAAI,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE;gBAC3D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBAEvC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAChC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBAEtB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC7C,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAClC;iBACI;gBACD,IAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;aAChD;QACL,CAAC;QAED;;UAEE;QACK,uBAAO,GAAd;YACI,IAAI,CAAC,IAAI,EAAE,CAAC;YACZ,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;YACzB,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;QAC/B,CAAC;QAEM,4BAAY,GAAnB;YACI,4BAA4B;QAChC,CAAC;QACL,YAAC;IAAD,CAAC;IAjMY,cAAK,QAiMjB;IAED;;EAEF;IACE;QAAiC,+BAAa;QAE1C;;;;;;UAME;QACF,qBAAY,IAAY,EAAE,EAAU,EAAE,QAAkB,EAAE,gBAA6C;mBACnG,kBAAM,IAAI,EAAE,EAAE,EAAE,QAAQ,EAAE,gBAAgB,CAAC;QAC/C,CAAC;QAEM,kCAAY,GAAnB;YACI,IAAI,CAAC,OAAO,GAAG,IAAI,2DAAM,CACrB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,EAClF,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CACvF,CAAC;QACN,CAAC;QACL,kBAAC;IAAD,CAAC,CAnBgC,KAAK,GAmBrC;IAnBY,oBAAW,cAmBvB;IAED;;MAEE;IACF;QAAiC,+BAAa;QAE1C;;;;;;UAME;QACF,qBAAY,IAAY,EAAE,EAAU,EAAE,QAAkB,EAAE,gBAA6C;mBACnG,kBAAM,IAAI,EAAE,EAAE,EAAE,QAAQ,EAAE,gBAAgB,CAAC;QAC/C,CAAC;QAEM,kCAAY,GAAnB;YACI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC1F,CAAC;QACL,kBAAC;IAAD,CAAC,CAhBgC,KAAK,GAgBrC;IAhBY,oBAAW,cAgBvB;IAED;;EAEF;IACE;QAAgC,8BAAqB;QAEjD;;;;;;UAME;QACF,oBAAY,IAAoB,EAAE,EAAkB,EAAE,QAAkB,EAAE,gBAA6C;mBACnH,kBAAM,IAAI,EAAE,EAAE,EAAE,QAAQ,EAAE,gBAAgB,CAAC;QAC/C,CAAC;QAEM,iCAAY,GAAnB;YACI,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC5F,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC5F,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChG,CAAC;QACL,iBAAC;IAAD,CAAC,CAlB+B,KAAK,GAkBpC;IAlBY,mBAAU,aAkBtB;IAED;;MAEE;IACF;QAAmC,iCAAe;QAE9C;;;;;;UAME;QACF,uBAAY,IAAc,EAAE,EAAY,EAAE,QAAkB,EAAE,gBAA6C;mBACvG,kBAAM,IAAI,EAAE,EAAE,EAAE,QAAQ,EAAE,gBAAgB,CAAC;QAC/C,CAAC;QAEM,oCAAY,GAAnB;YACI,IAAI,CAAC,OAAO,GAAG,IAAI,iEAAQ,CACvB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,EAC1E,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpF,CAAC;QACL,oBAAC;IAAD,CAAC,CAlBkC,KAAK,GAkBvC;IAlBY,sBAAa,gBAkBzB;AAGL,CAAC,EAjTa,QAAQ,KAAR,QAAQ,QAiTrB;;;;;;;;;;AC1TK,IAAQ,SAAS,CAojBtB;AApjBD,WAAc,SAAS;IASnB;;EAEF;IACE;QAAA;QAiDA,CAAC;QAjBG,sBAAkB,qBAAM;YAHxB;;cAEE;iBACF;gBACI,OAAO,WAAW,CAAC,OAAO,CAAC;YAC/B,CAAC;;;WAAA;QAKD,sBAAkB,sBAAO;YAHzB;;cAEE;iBACF;gBACI,OAAO,WAAW,CAAC,QAAQ,CAAC;YAChC,CAAC;;;WAAA;QAKD,sBAAkB,wBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,WAAW,CAAC,UAAU,CAAC;YAClC,CAAC;;;WAAA;QA/Cc,mBAAO,GAAsB,UAAC,IAAY,EAAE,EAAU,EAAE,OAAiB,EAAE,QAAkB;YACxG,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,EAClB,mBAAmB,GAAG,OAAO,CAAC,YAAY,CAAC;YAE/C,OAAO,CAAC,mBAAmB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,mBAAmB,GAAG,QAAQ,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QACnI,CAAC,CAAC;QACa,oBAAQ,GAAsB,UAAC,IAAY,EAAE,EAAU,EAAE,OAAiB,EAAE,QAAkB;YACzG,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,EAClB,mBAAmB,GAAG,OAAO,CAAC,YAAY,CAAC;YAE/C,OAAO,CAAC,mBAAmB,IAAI,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,mBAAmB,GAAG,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;QAClK,CAAC,CAAC;QACa,sBAAU,GAAsB,UAAC,IAAY,EAAE,EAAU,EAAE,OAAiB,EAAE,QAAkB;YAC3G,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,EAClB,mBAAmB,GAAG,OAAO,CAAC,YAAY,CAAC;YAE/C,IAAI,mBAAmB,IAAI,CAAC,EAAE;gBAC1B,OAAO,IAAI,CAAC;aACf;YACD,IAAI,mBAAmB,IAAI,QAAQ,CAAC,YAAY,EAAE;gBAC9C,OAAO,IAAI,GAAG,MAAM,CAAC;aACxB;YACD,IAAI,CAAC,mBAAmB,IAAI,QAAQ,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE;gBACxD,OAAO,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,mBAAmB,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;aAC1E;YACD,OAAO,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,mBAAmB,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;QAC/E,CAAC,CAAC;QAsBN,kBAAC;KAAA;IAjDY,qBAAW,cAiDvB;IAED;;EAEF;IACE;QAAA;QAiFA,CAAC;QAjBG,sBAAkB,iBAAM;YAHxB;;cAEE;iBACF;gBACI,OAAO,OAAO,CAAC,OAAO,CAAC;YAC3B,CAAC;;;WAAA;QAKD,sBAAkB,kBAAO;YAHzB;;cAEE;iBACF;gBACI,OAAO,OAAO,CAAC,QAAQ,CAAC;YAC5B,CAAC;;;WAAA;QAKD,sBAAkB,oBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,OAAO,CAAC,UAAU,CAAC;YAC9B,CAAC;;;WAAA;QA/Ec,eAAO,GAAsB,UAAC,IAAY,EAAE,EAAU,EAAE,OAAiB,EAAE,QAAkB;YACxG,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,EAClB,mBAAmB,GAAG,OAAO,CAAC,YAAY,EAC1C,WAAW,EACX,kBAAkB,CAAC;YAEvB,IAAI,mBAAmB,KAAK,CAAC,EAAE;gBAC3B,OAAO,IAAI,CAAC;aACf;YACD,IAAI,CAAC,mBAAmB,IAAI,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;gBACtD,OAAO,IAAI,GAAG,MAAM,CAAC;aACxB;YAED,WAAW,GAAG,QAAQ,CAAC,YAAY,GAAG,EAAE,CAAC;YACzC,kBAAkB,GAAG,WAAW,GAAG,CAAC,CAAC;YAErC,OAAO,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,mBAAmB,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,mBAAmB,GAAG,QAAQ,CAAC,YAAY,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC;QACxL,CAAC,CAAC;QACa,gBAAQ,GAAsB,UAAC,IAAY,EAAE,EAAU,EAAE,OAAiB,EAAE,QAAkB;YACzG,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,EAClB,mBAAmB,GAAG,OAAO,CAAC,YAAY,EAC1C,WAAW,EACX,kBAAkB,CAAC;YAEvB,IAAI,mBAAmB,KAAK,CAAC,EAAE;gBAC3B,OAAO,IAAI,CAAC;aACf;YAED,IAAI,CAAC,mBAAmB,IAAI,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;gBACtD,OAAO,IAAI,GAAG,MAAM,CAAC;aACxB;YAED,WAAW,GAAG,QAAQ,CAAC,YAAY,GAAG,EAAE,CAAC;YACzC,kBAAkB,GAAG,WAAW,GAAG,CAAC,CAAC;YAErC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,mBAAmB,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,mBAAmB,GAAG,QAAQ,CAAC,YAAY,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC;QAC1L,CAAC,CAAC;QACa,kBAAU,GAAsB,UAAC,IAAY,EAAE,EAAU,EAAE,OAAiB,EAAE,QAAkB;YAC3G,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,EAClB,mBAAmB,GAAG,OAAO,CAAC,YAAY,EAC1C,WAAW,EACX,kBAAkB,CAAC;YAEvB,IAAI,mBAAmB,KAAK,CAAC,EAAE;gBAC3B,OAAO,IAAI,CAAC;aACf;YAED,IAAI,CAAC,mBAAmB,IAAI,QAAQ,CAAC,YAAY,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;gBAC1D,OAAO,IAAI,GAAG,MAAM,CAAC;aACxB;YAED,WAAW,GAAG,QAAQ,CAAC,YAAY,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;YACjD,kBAAkB,GAAG,WAAW,GAAG,CAAC,CAAC;YAErC,IAAI,mBAAmB,GAAG,CAAC,EAAE;gBACzB,OAAO,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,mBAAmB,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,mBAAmB,GAAG,QAAQ,CAAC,YAAY,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC;aAC5L;YACD,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,mBAAmB,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,mBAAmB,GAAG,QAAQ,CAAC,YAAY,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,GAAG,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC;QACtM,CAAC,CAAC;QAsBN,cAAC;KAAA;IAjFY,iBAAO,UAiFnB;IAED;;EAEF;IACE;QAAA;QA2CA,CAAC;QAjBG,sBAAkB,eAAM;YAHxB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,OAAO,CAAC;YACzB,CAAC;;;WAAA;QAKD,sBAAkB,gBAAO;YAHzB;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,QAAQ,CAAC;YAC1B,CAAC;;;WAAA;QAKD,sBAAkB,kBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,KAAK,CAAC,UAAU,CAAC;YAC5B,CAAC;;;WAAA;QAzCc,aAAO,GAAsB,UAAC,IAAY,EAAE,EAAU,EAAE,OAAiB,EAAE,QAAkB;YACxG,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,EAClB,mBAAmB,GAAG,OAAO,CAAC,YAAY,CAAC;YAE/C,OAAO,MAAM,GAAG,CAAC,mBAAmB,IAAI,QAAQ,CAAC,YAAY,CAAC,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,IAAI,CAAC;QACtH,CAAC,CAAC;QACa,cAAQ,GAAsB,UAAC,IAAY,EAAE,EAAU,EAAE,OAAiB,EAAE,QAAkB;YACzG,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,EAClB,mBAAmB,GAAG,OAAO,CAAC,YAAY,CAAC;YAE/C,OAAO,MAAM,GAAG,CAAC,CAAC,mBAAmB,GAAG,mBAAmB,GAAG,QAAQ,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;QACrJ,CAAC,CAAC;QACa,gBAAU,GAAsB,UAAC,IAAY,EAAE,EAAU,EAAE,OAAiB,EAAE,QAAkB;YAC3G,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,EAClB,mBAAmB,GAAG,OAAO,CAAC,YAAY,CAAC;YAE/C,IAAI,CAAC,mBAAmB,IAAI,QAAQ,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE;gBACxD,OAAO,MAAM,GAAG,CAAC,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,IAAI,CAAC;aAC9F;YACD,OAAO,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,mBAAmB,IAAI,CAAC,CAAC,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;QAC5G,CAAC,CAAC;QAsBN,YAAC;KAAA;IA3CY,eAAK,QA2CjB;IAGD;;MAEE;IACF;QAAA;QA2CA,CAAC;QAjBG,sBAAkB,kBAAM;YAHxB;;cAEE;iBACF;gBACI,OAAO,QAAQ,CAAC,OAAO,CAAC;YAC5B,CAAC;;;WAAA;QAKD,sBAAkB,mBAAO;YAHzB;;cAEE;iBACF;gBACI,OAAO,QAAQ,CAAC,QAAQ,CAAC;YAC7B,CAAC;;;WAAA;QAKD,sBAAkB,qBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,QAAQ,CAAC,UAAU,CAAC;YAC/B,CAAC;;;WAAA;QAzCc,gBAAO,GAAsB,UAAC,IAAY,EAAE,EAAU,EAAE,OAAiB,EAAE,QAAkB;YACxG,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,EAClB,mBAAmB,GAAG,OAAO,CAAC,YAAY,CAAC;YAE/C,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,mBAAmB,IAAI,QAAQ,CAAC,YAAY,CAAC,GAAG,mBAAmB,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;QACtH,CAAC,CAAC;QACa,iBAAQ,GAAsB,UAAC,IAAY,EAAE,EAAU,EAAE,OAAiB,EAAE,QAAkB;YACzG,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,EAClB,mBAAmB,GAAG,OAAO,CAAC,YAAY,CAAC;YAE/C,OAAO,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,mBAAmB,GAAG,mBAAmB,GAAG,QAAQ,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,mBAAmB,CAAC,GAAG,IAAI,CAAC;QACxI,CAAC,CAAC;QACa,mBAAU,GAAsB,UAAC,IAAY,EAAE,EAAU,EAAE,OAAiB,EAAE,QAAkB;YAC3G,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,EAClB,mBAAmB,GAAG,OAAO,CAAC,YAAY,CAAC;YAE/C,IAAI,CAAC,mBAAmB,IAAI,QAAQ,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE;gBACxD,OAAO,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,mBAAmB,GAAG,mBAAmB,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;aAC9F;YACD,OAAO,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,mBAAmB,IAAI,CAAC,CAAC,GAAG,mBAAmB,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;QACrG,CAAC,CAAC;QAsBN,eAAC;KAAA;IA3CY,kBAAQ,WA2CpB;IAED;;EAEF;IACE;QAAA;QAsDA,CAAC;QAjBG,sBAAkB,gBAAM;YAHxB;;cAEE;iBACF;gBACI,OAAO,MAAM,CAAC,OAAO,CAAC;YAC1B,CAAC;;;WAAA;QAKD,sBAAkB,iBAAO;YAHzB;;cAEE;iBACF;gBACI,OAAO,MAAM,CAAC,QAAQ,CAAC;YAC3B,CAAC;;;WAAA;QAKD,sBAAkB,mBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,MAAM,CAAC,UAAU,CAAC;YAC7B,CAAC;;;WAAA;QApDc,cAAO,GAAsB,UAAC,IAAY,EAAE,EAAU,EAAE,OAAiB,EAAE,QAAkB;YACxG,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC;YAEvB,OAAO,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,MAAM,EAAE,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,QAAQ,CAAC,GAAG,IAAI,CAAC;QAC3F,CAAC,CAAC;QACa,eAAQ,GAAsB,UAAC,IAAY,EAAE,EAAU,EAAE,OAAiB,EAAE,QAAkB;YACzG,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,EAClB,mBAAmB,GAAG,OAAO,CAAC,YAAY,CAAC;YAE/C,IAAI,CAAC,mBAAmB,IAAI,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE;gBAC7D,OAAO,MAAM,GAAG,CAAC,MAAM,GAAG,mBAAmB,GAAG,mBAAmB,CAAC,GAAG,IAAI,CAAC;aAC/E;iBACI,IAAI,mBAAmB,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE;gBACvC,OAAO,MAAM,GAAG,CAAC,MAAM,GAAG,CAAC,mBAAmB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,mBAAmB,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC;aACvG;iBACI,IAAI,mBAAmB,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE;gBACzC,OAAO,MAAM,GAAG,CAAC,MAAM,GAAG,CAAC,mBAAmB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,mBAAmB,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC;aAC1G;iBACI;gBACD,OAAO,MAAM,GAAG,CAAC,MAAM,GAAG,CAAC,mBAAmB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,GAAG,mBAAmB,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC;aAC7G;QACL,CAAC,CAAC;QACa,iBAAU,GAAsB,UAAC,IAAY,EAAE,EAAU,EAAE,OAAiB,EAAE,QAAkB;YAC3G,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC;YAEvB,IAAI,OAAO,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,GAAG,CAAC,EAAE;gBAClD,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC;aAC/E;iBACI;gBACD,OAAO,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,GAAG,EAAE,GAAG,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC;aACjH;QACL,CAAC,CAAC;QAsBN,aAAC;KAAA;IAtDY,gBAAM,SAsDlB;IAGD;;MAEE;IACF;QAAA;QA4CA,CAAC;QAjBG,sBAAkB,cAAM;YAHxB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,OAAO,CAAC;YACxB,CAAC;;;WAAA;QAKD,sBAAkB,eAAO;YAHzB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,QAAQ,CAAC;YACzB,CAAC;;;WAAA;QAKD,sBAAkB,iBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,UAAU,CAAC;YAC3B,CAAC;;;WAAA;QA1Cc,YAAO,GAAsB,UAAC,IAAY,EAAE,EAAU,EAAE,OAAiB,EAAE,QAAkB;YACxG,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,EAClB,mBAAmB,GAAG,OAAO,CAAC,YAAY,CAAC;YAE/C,OAAO,MAAM,GAAG,CAAC,mBAAmB,IAAI,QAAQ,CAAC,YAAY,CAAC,GAAG,mBAAmB,GAAG,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,mBAAmB,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC;QAClJ,CAAC,CAAC;QACa,aAAQ,GAAsB,UAAC,IAAY,EAAE,EAAU,EAAE,OAAiB,EAAE,QAAkB;YACzG,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,EAClB,mBAAmB,GAAG,OAAO,CAAC,YAAY,CAAC;YAE/C,OAAO,MAAM,GAAG,CAAC,CAAC,mBAAmB,GAAG,mBAAmB,GAAG,QAAQ,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,mBAAmB,GAAG,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,mBAAmB,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;QACjL,CAAC,CAAC;QACa,eAAU,GAAsB,UAAC,IAAY,EAAE,EAAU,EAAE,OAAiB,EAAE,QAAkB;YAC3G,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,EAClB,mBAAmB,GAAG,OAAO,CAAC,YAAY,EAC1C,QAAQ,GAAG,OAAO,CAAC;YAEvB,IAAI,CAAC,mBAAmB,IAAI,QAAQ,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE;gBACxD,OAAO,MAAM,GAAG,CAAC,GAAG,CAAC,mBAAmB,GAAG,mBAAmB,GAAG,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,mBAAmB,GAAG,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC;aAC3I;YACD,OAAO,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,mBAAmB,IAAI,CAAC,CAAC,GAAG,mBAAmB,GAAG,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,mBAAmB,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;QACvJ,CAAC,CAAC;QAsBN,WAAC;KAAA;IA5CY,cAAI,OA4ChB;IAED;;MAEE;IACF;QAAA;QAwCA,CAAC;QAjBG,sBAAkB,oBAAM;YAHxB;;cAEE;iBACF;gBACI,OAAO,UAAU,CAAC,OAAO,CAAC;YAC9B,CAAC;;;WAAA;QAKD,sBAAkB,qBAAO;YAHzB;;cAEE;iBACF;gBACI,OAAO,UAAU,CAAC,QAAQ,CAAC;YAC/B,CAAC;;;WAAA;QAKD,sBAAkB,uBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,UAAU,CAAC,UAAU,CAAC;YACjC,CAAC;;;WAAA;QAtCc,kBAAO,GAAsB,UAAC,IAAY,EAAE,EAAU,EAAE,OAAiB,EAAE,QAAkB;YACxG,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,EAClB,mBAAmB,GAAG,OAAO,CAAC,YAAY,CAAC;YAE/C,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,mBAAmB,GAAG,QAAQ,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;QAC3G,CAAC,CAAC;QACa,mBAAQ,GAAsB,UAAC,IAAY,EAAE,EAAU,EAAE,OAAiB,EAAE,QAAkB;YACzG,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,EAClB,mBAAmB,GAAG,OAAO,CAAC,YAAY,CAAC;YAE/C,OAAO,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,mBAAmB,GAAG,QAAQ,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QACjG,CAAC,CAAC;QACa,qBAAU,GAAsB,UAAC,IAAY,EAAE,EAAU,EAAE,OAAiB,EAAE,QAAkB;YAC3G,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,EAClB,mBAAmB,GAAG,OAAO,CAAC,YAAY,CAAC;YAE/C,OAAO,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,mBAAmB,GAAG,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;QACtG,CAAC,CAAC;QAsBN,iBAAC;KAAA;IAxCY,oBAAU,aAwCtB;IAGD;;MAEE;IACF;QAAA;QA2CA,CAAC;QAjBG,sBAAkB,iBAAM;YAHxB;;cAEE;iBACF;gBACI,OAAO,OAAO,CAAC,OAAO,CAAC;YAC3B,CAAC;;;WAAA;QAKD,sBAAkB,kBAAO;YAHzB;;cAEE;iBACF;gBACI,OAAO,OAAO,CAAC,QAAQ,CAAC;YAC5B,CAAC;;;WAAA;QAKD,sBAAkB,oBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,OAAO,CAAC,UAAU,CAAC;YAC9B,CAAC;;;WAAA;QAzCc,eAAO,GAAsB,UAAC,IAAY,EAAE,EAAU,EAAE,OAAiB,EAAE,QAAkB;YACxG,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,EAClB,mBAAmB,GAAG,OAAO,CAAC,YAAY,CAAC;YAE/C,OAAO,MAAM,GAAG,CAAC,mBAAmB,IAAI,QAAQ,CAAC,YAAY,CAAC,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,IAAI,CAAC;QAClK,CAAC,CAAC;QACa,gBAAQ,GAAsB,UAAC,IAAY,EAAE,EAAU,EAAE,OAAiB,EAAE,QAAkB;YACzG,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,EAClB,mBAAmB,GAAG,OAAO,CAAC,YAAY,CAAC;YAE/C,OAAO,MAAM,GAAG,CAAC,CAAC,mBAAmB,GAAG,mBAAmB,GAAG,QAAQ,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;QACjM,CAAC,CAAC;QACa,kBAAU,GAAsB,UAAC,IAAY,EAAE,EAAU,EAAE,OAAiB,EAAE,QAAkB;YAC3G,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,EAClB,mBAAmB,GAAG,OAAO,CAAC,YAAY,CAAC;YAE/C,IAAI,CAAC,mBAAmB,IAAI,QAAQ,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE;gBACxD,OAAO,MAAM,GAAG,CAAC,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,IAAI,CAAC;aAC1I;YACD,OAAO,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,mBAAmB,IAAI,CAAC,CAAC,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;QACxJ,CAAC,CAAC;QAsBN,cAAC;KAAA;IA3CY,iBAAO,UA2CnB;IAGD;;MAEE;IACF;QAAA;QA2CA,CAAC;QAjBG,sBAAkB,iBAAM;YAHxB;;cAEE;iBACF;gBACI,OAAO,OAAO,CAAC,OAAO,CAAC;YAC3B,CAAC;;;WAAA;QAKD,sBAAkB,kBAAO;YAHzB;;cAEE;iBACF;gBACI,OAAO,OAAO,CAAC,QAAQ,CAAC;YAC5B,CAAC;;;WAAA;QAKD,sBAAkB,oBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,OAAO,CAAC,UAAU,CAAC;YAC9B,CAAC;;;WAAA;QAzCc,eAAO,GAAsB,UAAC,IAAY,EAAE,EAAU,EAAE,OAAiB,EAAE,QAAkB;YACxG,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,EAClB,mBAAmB,GAAG,OAAO,CAAC,YAAY,CAAC;YAE/C,OAAO,MAAM,GAAG,CAAC,mBAAmB,IAAI,QAAQ,CAAC,YAAY,CAAC,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,IAAI,CAAC;QAC5I,CAAC,CAAC;QACa,gBAAQ,GAAsB,UAAC,IAAY,EAAE,EAAU,EAAE,OAAiB,EAAE,QAAkB;YACzG,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,EAClB,mBAAmB,GAAG,OAAO,CAAC,YAAY,CAAC;YAE/C,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,mBAAmB,GAAG,mBAAmB,GAAG,QAAQ,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;QAC5K,CAAC,CAAC;QACa,kBAAU,GAAsB,UAAC,IAAY,EAAE,EAAU,EAAE,OAAiB,EAAE,QAAkB;YAC3G,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,EAClB,mBAAmB,GAAG,OAAO,CAAC,YAAY,CAAC;YAE/C,IAAI,CAAC,mBAAmB,IAAI,QAAQ,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE;gBACxD,OAAO,MAAM,GAAG,CAAC,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,IAAI,CAAC;aACpH;YACD,OAAO,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,mBAAmB,IAAI,CAAC,CAAC,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;QACnI,CAAC,CAAC;QAsBN,cAAC;KAAA;IA3CY,iBAAO,UA2CnB;IAED;;MAEE;IACF;QAAA;QA4CA,CAAC;QAjBG,sBAAkB,mBAAM;YAHxB;;cAEE;iBACF;gBACI,OAAO,SAAS,CAAC,OAAO,CAAC;YAC7B,CAAC;;;WAAA;QAKD,sBAAkB,oBAAO;YAHzB;;cAEE;iBACF;gBACI,OAAO,SAAS,CAAC,QAAQ,CAAC;YAC9B,CAAC;;;WAAA;QAKD,sBAAkB,sBAAS;YAH3B;;cAEE;iBACF;gBACI,OAAO,SAAS,CAAC,UAAU,CAAC;YAChC,CAAC;;;WAAA;QA1Cc,iBAAO,GAAsB,UAAC,IAAY,EAAE,EAAU,EAAE,OAAiB,EAAE,QAAkB;YACxG,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,EAClB,mBAAmB,GAAG,OAAO,CAAC,YAAY,CAAC;YAE/C,OAAO,MAAM,GAAG,CAAC,mBAAmB,IAAI,QAAQ,CAAC,YAAY,CAAC,GAAG,mBAAmB,GAAG,IAAI,CAAC;QAChG,CAAC,CAAC;QACa,kBAAQ,GAAsB,UAAC,IAAY,EAAE,EAAU,EAAE,OAAiB,EAAE,QAAkB;YACzG,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,EAClB,mBAAmB,GAAG,OAAO,CAAC,YAAY,CAAC;YAE/C,OAAO,CAAC,MAAM,GAAG,CAAC,mBAAmB,IAAI,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,mBAAmB,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;QACvG,CAAC,CAAC;QACa,oBAAU,GAAsB,UAAC,IAAY,EAAE,EAAU,EAAE,OAAiB,EAAE,QAAkB;YAC3G,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,EAClB,mBAAmB,GAAG,OAAO,CAAC,YAAY,CAAC;YAE/C,IAAI,CAAC,mBAAmB,IAAI,QAAQ,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE;gBACxD,OAAO,MAAM,GAAG,CAAC,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,IAAI,CAAC;aACxE;YAED,OAAO,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,mBAAmB,CAAC,GAAG,CAAC,mBAAmB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;QAC1F,CAAC,CAAC;QAsBN,gBAAC;KAAA;IA5CY,mBAAS,YA4CrB;IAED;;EAEF;IACE;QAAA;QAaA,CAAC;QAHG,sBAAkB,kBAAQ;YAH1B;;cAEE;iBACF;gBACI,OAAO,MAAM,CAAC,SAAS,CAAC;YAC5B,CAAC;;;WAAA;QAXc,gBAAS,GAAsB,UAAC,IAAY,EAAE,EAAU,EAAE,OAAiB,EAAE,QAAkB;YAC1G,IAAI,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC;YAEvB,OAAO,MAAM,GAAG,OAAO,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC;QACxE,CAAC,CAAC;QAQN,aAAC;KAAA;IAbY,gBAAM,SAalB;AACL,CAAC,EApjBa,SAAS,KAAT,SAAS,QAojBtB;;;;;;;;;;;;;;;;;;;;;;;;ACtjByC;AAGY;AACN;AACW;AAErD,IAAQ,SAAS,CAuftB;AAvfD,WAAc,SAAS;IAkCnB;;MAEE;IACF;QAwBI,iBAAY,MAA8D,EAAE,QAA4B;YAA5F,4CAAsD,CAAC,IAAM,CAAC;YACtE,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;YACzB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAElB,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;gBACjC,QAAQ,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;aAC3C;YAED,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YAEtB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,QAAQ,CAAC,IAAI,iEAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,IAAI,2DAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;YACxJ,IAAI,CAAC,SAAS,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YACpE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAC3B,CAAC;QAKD,sBAAW,6BAAQ;YAHnB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;YAC1B,CAAC;;;WAAA;QAKD,sBAAW,2BAAM;YAHjB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,OAAO,CAAC;YACxB,CAAC;;;WAAA;QAED;;;UAGE;QACK,qBAAG,GAAV,UAAW,KAAyB;YAApC,iBAYC;YAXG,IAAI,OAAO,GAAkB;gBACzB,KAAK,EAAE,KAAK;gBACZ,MAAM,EAAE,UAAC,OAA2B;oBAChC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACzB,CAAC;aACJ,CAAC;YAEF,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAEtC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC;QAED;;;UAGE;QACK,wBAAM,GAAb,UAAc,KAAyB;YACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC1C,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE;oBAC3B,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;oBACjE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC1B,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACjC,OAAO;iBACV;aACJ;QACL,CAAC;QAED;;UAEE;QACK,sBAAI,GAAX;YACI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QACtD,CAAC;QAED;;UAEE;QACK,yBAAO,GAAd;YACI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBAEtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC1C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;iBAChC;gBAED,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;gBAClB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;gBACzB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;aAC5B;iBACI;gBACD,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;aAChE;QACL,CAAC;QAEO,uCAAqB,GAA7B;YACI,IAAI,QAAQ,GAAsB,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,EAC9D,IAAI,GAA6B,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAE9E,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,eAAe,CAAC,WAAW,CAAC;YACtD,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC,eAAe,CAAC,YAAY,GAAG,CAAC,CAAC;YAE5D,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAC3B,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;YAE3B,OAAO,QAAQ,CAAC;QACpB,CAAC;QACL,cAAC;IAAD,CAAC;IA/HY,iBAAO,UA+HnB;IAED;;EAEF;IACE;QAYI;;;UAGE;QACF,oBAAY,UAA6B;YACrC,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC;YACjC,aAAa;YACb,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAEnD,8CAA8C;YAC9C,IAAI,CAAC,aAAa,GAAsB,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACzE,aAAa;YACb,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC1D,IAAI,CAAC,qBAAqB,GAAG,IAAI,sEAAa,EAAU,CAAC;YACzD,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAExB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAC3B,CAAC;QAKD,sBAAW,4CAAoB;YAH/B;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,qBAAqB,CAAC;YACtC,CAAC;;;WAAA;QAED;;;UAGE;QACK,2BAAM,GAAb,UAAc,WAA0B;YACpC,+CAA+C;YAC/C,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,KAAK,IAAI,CAAC,cAAc,CAAC,KAAK,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,KAAK,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;gBACpH,IAAI,CAAC,gBAAgB,EAAE,CAAC;aAC3B;YAED,wBAAwB;YACxB,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;YAC5F,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACzD,kDAAkD;YAClD,IAAI,CAAC,YAAY,EAAE,CAAC;YAEpB,qFAAqF;YACrF,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;YAEzC,wEAAwE;YACxE,wDAAwD;YAExD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;aAC5C;YAED,OAAO,IAAI,CAAC,cAAc,CAAC;QAC/B,CAAC;QAED;;UAEE;QACK,4BAAO,GAAd;YACI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBAEtB,aAAa;gBACb,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAChE,aAAa;gBACb,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,CAAC;aACxC;QACL,CAAC;QAEM,iCAAY,GAAnB;YACI,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC7F,CAAC;QAEO,qCAAgB,GAAxB;YACI,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;YACrD,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;YACvD,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,IAAI,2DAAM,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QACxG,CAAC;QAxFa,sBAAW,GAA+C,UAAC,CAAc,EAAE,CAAc,IAAO,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAyFhJ,iBAAC;KAAA;IA1FY,oBAAU,aA0FtB;IAED;;MAEE;IACF;QAAsC,oCAAU;QAI5C;;;;UAIE;QACF,0BAAY,UAA6B,EAAE,MAAgB;YAA3D,YACI,kBAAM,UAAU,CAAC,SAapB;YAXG,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,KAAI,CAAC,eAAe,GAAG,IAAI,4BAA4B,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;YAEtE,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAC,OAAe;gBAC3C,KAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;gBAClD,KAAI,CAAC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC;YAChC,CAAC,CAAC,CAAC;YAEH,KAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,IAAI,2DAAM,CAAC,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;YAC1F,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,eAAe,CAAC,KAAK,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC;;QAE1E,CAAC;QAED;;;UAGE;QACK,iCAAM,GAAb,UAAc,WAA0B;YACpC,IAAI,OAAO,EACP,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,wBAAwB,EAAE,CAAC;YAE3D,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;YAC3B,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,YAAY,EAAE,YAAY,CAAC;YAErD,OAAO,GAAG,iBAAM,MAAM,YAAC,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC,CAAC;YAEjE,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;YAE9B,OAAO,OAAO,CAAC;QACnB,CAAC;QAEM,uCAAY,GAAnB;YACI,IAAI,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC;YAC7C,IAAI,CAAC,cAAe,CAAC,mBAAmB,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,WAAW,CAAC,CAAC;QAC1I,CAAC;QAEO,iDAAsB,GAA9B,UAA+B,cAA6B;YACxD,IAAI,QAAQ,GAAkB,EAAE,EAC5B,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,EACxC,OAAO,GAAG,CAAC,GAAG,KAAK,CAAC;YAExB,sCAAsC;YACtC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YAEjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC5C,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC,EAAE;oBACzF,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;iBACpC;aACJ;YAED,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YAErC,OAAO,QAAQ,CAAC;QACpB,CAAC;QACL,uBAAC;IAAD,CAAC,CAlEqC,UAAU,GAkE/C;IAlEY,0BAAgB,mBAkE5B;IAED;;EAEF;IACE;QAMI;;;UAGE;QACF,sCAAY,MAAgB;YACxB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YACnD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;YAC5B,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAClD,CAAC;QAED;;;UAGE;QACK,4CAAK,GAAZ,UAAa,OAAiC;YAC1C,IAAI,IAAI,GAAG,IAAI,EACX,yBAAyB,GAAG,OAAO,CAAC,oBAAoB,EACxD,cAAc,GAAG,OAAO,CAAC,SAAS,EAClC,SAAS,GAAG,OAAO,CAAC,IAAI,EACxB,YAAY,GAAG,OAAO,CAAC,OAAO,EAC9B,eAAe,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC,EAClE,eAAe,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YAEjE,OAAQ,CAAC,mBAAmB,GAAG,OAAO,CAAC,SAAS,CAAC;YAEvD,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACtD,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAChE,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAChF,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YAClE,OAAO,CAAC,oBAAoB,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,oBAAoB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC9F,OAAO,CAAC,oBAAoB,GAAG;gBAC3B,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC;gBAC7C,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,KAAK,CAAC;gBACxE,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,KAAK,CAAC;gBACxE,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,KAAK,CAAC;gBACxE,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,KAAK,CAAC;gBAExE,OAAO,yBAAyB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAC5D,CAAC,CAAC;YACF,OAAO,CAAC,SAAS,GAAG;gBAChB,IAAI,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE;oBACvB,eAAe,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;iBAC1C;qBACI;oBACD,eAAe,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;iBAC1C;YACL,CAAC,CAAC;YACF,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAChE,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;YACnE,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;YACxE,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;YAC1E,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC5D,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC5D,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;YAC3E,OAAO,CAAC,gBAAgB,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACtF,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACxD,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YACpE,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;YAEvE,OAAO,CAAC,IAAI,GAAG;gBACX,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAE9C,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzB,CAAC,CAAC;YAEF,OAAO,CAAC,OAAO,GAAG;gBACd,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,CAAC;gBAEhD,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5B,CAAC,CAAC;YAEF,OAAO,CAAC,SAAS,GAAG;gBAChB,IAAI,KAAK,CAAC;gBAEV,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;oBACnB,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC;oBAEzC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,KAAK,CAAC;oBACxE,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,KAAK,CAAC;iBAC3E;gBAED,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBAExB,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAC1C,CAAC,CAAC;YAEF,OAAO,OAAO,CAAC;QACnB,CAAC;QAEM,0DAAmB,GAA1B,UAA2B,OAAe;YACtC,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC;YACzC,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;QAC9C,CAAC;QAEO,4DAAqB,GAA7B,UAA8B,QAAkB,EAAE,iBAA6B,EAAE,QAAoB;YAAnD,yDAA6B;YAAE,uCAAoB;YACjG,IAAI,IAAI,GAAG,IAAI,EACX,OAAO,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YAEzB,OAAO;gBACH,IAAI,KAAa,EACb,GAAW,CAAC;gBAEhB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;oBACnB,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC;oBACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;wBAC/B,GAAG,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACrB,aAAa;wBACb,SAAS,CAAC,iBAAiB,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;qBACrG;iBACJ;gBAED,aAAa;gBACb,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAC3C,CAAC,CAAC;QACN,CAAC;QACL,mCAAC;IAAD,CAAC;IA3HY,sCAA4B,+BA2HxC;IAED;;MAEE;IACF;QAA8B,4BAAwB;QAYlD;;;;UAIE;QACF,kBAAY,QAAkB,EAAE,IAAY;YAA5C,YACI,kBAAM,QAAQ,EAAE,IAAI,CAAC,SAGxB;YAhBM,WAAK,GAAW,UAAU,CAAC;YAe9B,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,eAAe,CAAC;;QAC7C,CAAC;QAED;;;UAGE;QACK,mCAAgB,GAAvB,UAAwB,QAAkB;YACtC,IAAI,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;YAC9F,OAAO,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;QAC1E,CAAC;QAEM,2CAAwB,GAA/B;YACI,OAAO,QAAQ,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC;QACpD,CAAC;QAEM,oCAAiB,GAAxB;YACI,OAAO,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,eAAe,CAAC;QACpD,CAAC;QArCD;;UAEE;QACY,wBAAe,GAAW,IAAI,CAAC;QAmCjD,eAAC;KAAA,CAvC6B,qDAAM,CAAC,iBAAiB,GAuCrD;IAvCY,kBAAQ,WAuCpB;AACL,CAAC,EAvfa,SAAS,KAAT,SAAS,QAuftB;;;;;;;;;;;AC9f0D;AAIrD,IAAQ,KAAK,CA2VlB;AA3VD,WAAc,KAAK;IACf;;EAEF;IACE;QAqDI,uBAAY,MAAuB,EAAE,MAAoB,EAAE,QAAyB,EAAE,OAAwB;YAAlG,uCAAuB;YAAE,qCAAoB;YAAE,2CAAyB;YAAE,0CAAwB;YAC1G,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAC3B,CAAC;QAED;;UAEE;QACK,6BAAK,GAAZ;YACI,OAAO,IAAI,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACpF,CAAC;QAhED;;UAEE;QACY,qBAAO,GAAkB,IAAI,aAAa,EAAE,CAAC;QA8D/D,oBAAC;KAAA;IAlEY,mBAAa,gBAkEzB;IAED;;EAEF;IACE;QAaI,qBAAY,MAAW;YACnB,IAAI,CAAC,CAAC,MAAM,YAAY,KAAK,CAAC,EAAE;gBAC5B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;gBAClB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAC7B;iBACI;gBACD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;aACzB;QACL,CAAC;QAWM,+BAAS,GAAhB,UAAiB,QAA+C;YAA/C,sCAA0B,aAAa,CAAC,OAAO;YAC5D,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QACjD,CAAC;QAWM,0BAAI,GAAX,UAAY,QAA+C;YAA/C,sCAA0B,aAAa,CAAC,OAAO;YACvD,IAAI,IAAI,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;YAEjD,IAAI,CAAC,IAAI,EAAE,CAAC;YAEZ,OAAO,IAAI,CAAC;QAChB,CAAC;QACL,kBAAC;IAAD,CAAC;IApDY,iBAAW,cAoDvB;IAED,IAAI,mBAAmB,GAAG;QACtB,GAAG,EAAE,YAAY;QACjB,GAAG,EAAE,WAAW;QAChB,GAAG,EAAE,WAAW;QAChB,GAAG,EAAE,WAAW;QAChB,GAAG,EAAE,aAAa;KACrB,CAAC;IAEF;;MAEE;IACF;QA0CI,mBAAY,MAAW,EAAE,QAA+C;YAA/C,sCAA0B,aAAa,CAAC,OAAO;YACpE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC;YAClC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YAExB,IAAI,MAAM,YAAY,gBAAgB,EAAE;gBACpC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;aACxB;iBACI;gBACD,IAAI,CAAC,MAAM,GAAqB,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;gBAChE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;aAC/B;YAED,IAAI,CAAC,aAAa,EAAE,CAAC;YAErB,IAAI,CAAC,WAAW,GAAG,IAAI,sEAAa,EAAS,CAAC;QAClD,CAAC;QAKD,sBAAW,iCAAU;YAHrB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,WAAW,CAAC;YAC5B,CAAC;;;WAAA;QAKD,sBAAW,6BAAM;YAHjB;;cAEE;iBACF;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YACjC,CAAC;iBACD,UAAkB,OAAe;gBAC7B,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,OAAO,CAAC;gBAChC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACjE,CAAC;;;WAJA;QAMD;;UAEE;QACK,6BAAS,GAAhB;YACI,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;QAC/B,CAAC;QAED;;UAEE;QACK,8BAAU,GAAjB;YACI,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;QAC7B,CAAC;QAED;;UAEE;QACK,wBAAI,GAAX;YAAA,iBAaC;YAZG,IAAI,IAAgB,CAAC;YAErB,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,KAAU,CAAC,EAAE;gBACnC,IAAI,GAAG;oBACH,KAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;gBACvB,CAAC,CAAC;gBACF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC9B,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;aACvD;iBACI;gBACD,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;aACtB;QACL,CAAC;QAED;;UAEE;QACK,yBAAK,GAAZ;YACI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QACxB,CAAC;QAED;;;UAGE;QACK,wBAAI,GAAX,UAAY,IAAY;YAAxB,iBAeC;YAdG,IAAI,IAAgB,CAAC;YAErB,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,KAAU,CAAC,EAAE;gBACnC,IAAI,GAAG;oBACH,KAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;gBACnC,CAAC,CAAC;gBAEF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAE9B,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;aACvD;iBACI;gBACD,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;aAClC;QACL,CAAC;QAED;;UAEE;QACK,wBAAI,GAAX;YACI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QACxB,CAAC;QAED;;UAEE;QACK,2BAAO,GAAd;YACI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBAEtB,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;gBAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAChD,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;iBAC3E;gBAED,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;gBAChE,aAAa;gBACb,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,aAAa;gBACb,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACzB;iBACI;gBACD,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;aAC/D;QACL,CAAC;QAEO,kCAAc,GAAtB,UAAuB,MAAW;YAC9B,IAAI,YAA+B,EAC/B,UAAkB,CAAC;YAEvB,uCAAuC;YACvC,IAAI,CAAC,CAAC,MAAM,YAAY,KAAK,CAAC,EAAE;gBAC5B,MAAM,GAAG,CAAC,MAAM,CAAC,CAAC;aACrB;YAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpC,YAAY,GAAsB,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBACnE,YAAY,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBAE7B,aAAa;gBACb,UAAU,GAAG,mBAAmB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;gBAE7D,IAAI,OAAO,UAAU,KAAK,WAAW,EAAE;oBACnC,YAAY,CAAC,IAAI,GAAG,UAAU,CAAC;iBAClC;gBAED,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;aACzC;QACL,CAAC;QAEO,iCAAa,GAArB;YAAA,iBAWC;YAVG,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YACzC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;YAC/C,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;YAC7C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAEpC,IAAI,CAAC,UAAU,GAAG,UAAC,CAAQ;gBACvB,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC/B,CAAC,CAAC;YAEF,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QACjE,CAAC;QAEL,gBAAC;IAAD,CAAC;IA9MY,eAAS,YA8MrB;AACL,CAAC,EA3Va,KAAK,KAAL,KAAK,QA2VlB;;;;;;;;;;;;AC/V+C;AACT;AAEjC,IAAQ,OAAO,CAoHpB;AApHD,WAAc,OAAO;IACjB;;MAEE;IACF;QAII;;UAEE;QACF;YACI,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAClB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QAC5B,CAAC;QAgBM,kCAAS,GAAhB,UAAiB,IAAY,EAAE,GAAW,EAAE,KAAc,EAAE,MAAe;YACvE,IAAI,WAAiC,CAAC;YAEtC,IAAI,OAAO,KAAK,KAAK,WAAW,EAAE;gBAC9B,WAAW,GAAG,IAAI,2DAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;aAC/C;iBACI;gBACD,WAAW,GAAG,IAAI,2DAAQ,CAAC,WAAW,CAAC,GAAG,EAAW,KAAM,EAAW,MAAO,CAAC,CAAC;aAClF;YAED,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC;YAEjC,OAAO,WAAW,CAAC,KAAK,EAAE,CAAC;QAC/B,CAAC;QAED;;;UAGE;QACK,iCAAQ,GAAf,UAAgB,IAAY;YACxB,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBACpB,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;aACrC;iBACI;gBACD,MAAM,IAAI,KAAK,CAAC,mBAAmB,GAAG,IAAI,GAAG,kBAAkB,CAAC,CAAC;aACpE;QACL,CAAC;QAED;;;UAGE;QACK,oCAAW,GAAlB,UAAmB,IAAY;YAC3B,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBACpB,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAE1B,OAAO,IAAI,CAAC;aACf;YAED,OAAO,KAAK,CAAC;QACjB,CAAC;QAcM,kCAAS,GAAhB,UAAiB,IAAY,EAAE,GAAQ;YACnC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,IAAI,kDAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YAEtD,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACpC,CAAC;QAED;;;UAGE;QACK,iCAAQ,GAAf,UAAgB,IAAY;YACxB,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;gBAC1B,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;aACnC;iBACI;gBACD,MAAM,IAAI,KAAK,CAAC,mBAAmB,GAAG,IAAI,GAAG,kBAAkB,CAAC,CAAC;aACpE;QACL,CAAC;QAED;;;UAGE;QACK,oCAAW,GAAlB,UAAmB,IAAY;YAC3B,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YAEtC,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YAEhC,OAAO,MAAM,CAAC;QAClB,CAAC;QAEL,qBAAC;IAAD,CAAC;IA/GY,sBAAc,iBA+G1B;AACL,CAAC,EApHa,OAAO,KAAP,OAAO,QAoHpB;;;;;;;;;ACpHD;AAAA;;EAEE;AACF;IAKI;;MAEE;IACF;QAPO,UAAK,GAAW,eAAe,CAAC;QAQnC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACvB,CAAC;IAED;;;MAGE;IACK,4BAAI,GAAX,UAAY,MAA0C;QAClD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;IAED;;;;MAIE;IACK,+BAAO,GAAd,UAAe,MAA0C,EAAE,YAAoB;QAC3E,IAAI,IAAI,GAAG,IAAI,EACX,QAAQ,GAAW,CAAC,EACpB,IAAI,GAAuC;YACvC,IAAI,EAAE,QAAQ,IAAI,YAAY,EAAE;gBAC5B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aACrB;YAED,aAAa;YACb,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAClC,CAAC,CAAC;QAEN,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED;;;MAGE;IACK,8BAAM,GAAb,UAAc,MAA0C;QACpD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC3C,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE;gBAC7B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAE3B,OAAO;aACV;SACJ;IACL,CAAC;IAED;;MAEE;IACK,mCAAW,GAAlB;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;IACpC,CAAC;IAED;;;;;MAKE;IACK,+BAAO,GAAd,UAAe,IAAO,EAAE,IAAO,EAAE,IAAO;QACpC,IAAI,OAAO,CAAC;QAEZ,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;YACpB,4EAA4E;YAC5E,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAEjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;aAChC;SACJ;IACL,CAAC;IAED;;MAEE;IACK,+BAAO,GAAd;QACI,kBAAkB;QAClB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACvB,CAAC;IACL,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;AC1FiD;AACA;AACZ;AACM;AACN;AACS;AACS;AACK;AAE7D;;EAEE;AACF;IAuCI,cAAY,UAA8B;QAA1C,iBAoCC;QA1EM,UAAK,GAAW,MAAM,CAAC;QAuC1B,IAAI,mBAA2B,EAC3B,sBAAsB,GAAW,8DAAS,CAAC,sBAAsB,CAAC,2BAA2B,CAAC;QAElG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,SAAS,GAAG,IAAI,kDAAQ,EAAE,CAAC;QAChC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAE3B,IAAI,UAAU,EAAE;YACZ,IAAI,CAAC,KAAK,GAAG,IAAI,8DAAS,CAAC,OAAO,CAAC,iBAAO;gBACtC,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACvB,CAAC,EAAE,UAAU,CAAC,CAAC;SAClB;aACI;YACD,IAAI,CAAC,KAAK,GAAG,IAAI,8DAAS,CAAC,OAAO,CAAC,iBAAO;gBACtC,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACvB,CAAC,CAAC,CAAC;SACN;QAED,IAAI,CAAC,KAAK,GAAG,IAAI,kDAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACzD,IAAI,CAAC,OAAO,GAAG,IAAI,wDAAO,CAAC,cAAc,EAAE,CAAC;QAE5C,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;QAE7C,IAAI,mBAAmB,CAAC,KAAK,GAAG,sBAAsB,CAAC,KAAK,KAAK,CAAC,EAAE;YAChE,mBAAmB,GAAG,IAAI,2DAAM,CAAC,mBAAmB,CAAC,KAAK,GAAG,sBAAsB,CAAC,KAAK,GAAG,mBAAmB,CAAC,KAAK,CAAC,CAAC;SAC1H;QAED,IAAI,CAAC,aAAa,GAAG,IAAI,oEAAiB,CAAC,8DAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,mBAAmB,CAAC;QAClG,IAAI,CAAC,gBAAgB,GAAG,IAAI,8DAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC;QAElG,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,SAAS,CAAC,IAAI,CAAC;YACrD,KAAI,CAAC,gBAAgB,GAAG,IAAI,8DAAS,CAAC,gBAAgB,CAAC,KAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC;QACtG,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC/B,CAAC;IAEM,6BAAc,GAArB;QACI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;QAExB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC5B,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC7C,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IACjC,CAAC;IAEM,kCAAmB,GAA1B;QACI,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAED;;MAEE;IACK,0BAAW,GAAlB;IACA,CAAC;IAED;;;MAGE;IACK,qBAAM,GAAb,UAAc,QAAkB;IAChC,CAAC;IAEM,2BAAY,GAAnB;QACI,IAAI,IAAI,CAAC,aAAa,CAAC,mBAAmB,IAAI,IAAI,CAAC,eAAe,EAAE;YAChE,OAAO;SACV;QAED,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAClB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IAChC,CAAC;IAED;;MAEE;IACK,mBAAI,GAAX,UAAY,OAAiC;QACzC,8BAA8B;IAClC,CAAC;IAED;;MAEE;IACK,sBAAO,GAAd;QACI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;QACrB,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;QAChC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;QAErB,8DAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IArGc,aAAQ,GAAW,CAAC,CAAC;IAsGxC,WAAC;CAAA;AAhIgB;;;;;;;;;;;ACf4B;AAG7C;;EAEE;AACF;IAQI;;MAEE;IACF;QAVO,UAAK,GAAW,UAAU,CAAC;QAW9B,IAAI,CAAC,QAAQ,GAAG,yDAAQ,CAAC,IAAI,CAAC;QAC9B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QAE5C,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAKD,sBAAW,6BAAO;QAHlB;;UAEE;aACF;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC;QACzB,CAAC;;;OAAA;IAKD,sBAAW,yBAAG;QAHd;;UAEE;aACF;YACI,OAAO,IAAI,CAAC,WAAW,CAAC;QAC5B,CAAC;;;OAAA;IAKD,sBAAW,2BAAK;QAHhB;;UAEE;aACF;YACI,OAAO,yDAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC;QACtD,CAAC;;;OAAA;IAED;;MAEE;IACK,yBAAM,GAAb;QACI,IAAI,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;QAErB,IAAI,CAAC,QAAQ,GAAG,IAAI,yDAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC;QACzE,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;IAC3B,CAAC;IACL,eAAC;AAAD,CAAC;;;;;;;;;;;;ACtDiD;AAGlD;;EAEE;AACF;IAWI;;;MAGE;IACF,2BAAY,gBAA8C,EAAE,mBAA2B;QAT/E,uBAAkB,GAAW,EAAE,CAAC;QAUpC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAEhC,IAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;QAC1C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAC7D,IAAI,CAAC,uBAAuB,GAAG,IAAI,8DAAS,CAAC,sBAAsB,CAAC,mBAAmB,CAAC,CAAC;IAC7F,CAAC;IAKD,sBAAW,yCAAU;QAHrB;;UAEE;aACF;YACI,OAAO,IAAI,CAAC,WAAW,CAAC;QAC5B,CAAC;aACD,UAAsB,UAAkB;YACpC,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;YAC9B,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC7C,CAAC;;;OAJA;IASD,sBAAW,qDAAsB;QAHjC;;UAEE;aACF;YACI,OAAO,IAAI,CAAC,uBAAuB,CAAC;QACxC,CAAC;;;OAAA;IACL,wBAAC;AAAD,CAAC;;;;;;;;;;;;;AC5C2C;AAE5C;IASI;QARO,UAAK,GAAW,YAAY,CAAC;QAShC,IAAI,CAAC,gBAAgB,GAA4C,EAAE,CAAC;QACpE,IAAI,CAAC,cAAc,GAA6C,EAAE,CAAC;QACnE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;IAC5B,CAAC;IAEM,6BAAQ,GAAf,UAAgB,IAAU;QACtB,IAAI,cAAc,GAAG,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,CAAC;QAC7D,IAAI,YAAY,GAAG,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC;QAEzD,IAAI,CAAC,cAAc,EAAE,CAAC;QAEtB,6GAA6G;QAC7G,IAAI,CAAC,YAAY,EAAE,CAAC;QAEpB,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACtC,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;SAClC;QAED,4HAA4H;QAC5H,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;QAC7C,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QAEzC,+EAA+E;QAC/E,+EAA+E;QAC/E,OAAO,IAAI,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC;IACvD,CAAC;IAEM,+BAAU,GAAjB,UAAkB,IAAU;QACxB,IAAI,cAAc,EACd,YAAY,CAAC;QAEjB,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YACjC,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACjD,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAE7C,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACtC,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;aAClC;YAED,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;YAChD,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;YAC5C,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACvC,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAErC,IAAI,CAAC,cAAc,EAAE;YAErB,IAAI,CAAC,WAAW,EAAE,CAAC;SACtB;IACL,CAAC;IAEO,iCAAY,GAApB;QACI,IAAI,IAAI,CAAC,cAAc,KAAK,CAAC,EAAE;YAC3B,IAAI,CAAC,WAAW,GAAG,IAAI,wDAAO,CAAC,MAAM,EAAE,CAAC;YACxC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;YACzB,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAO,CAAC,aAAa,EAAE,CAAC;YAC7C,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;SAC1B;IACL,CAAC;IAEO,gCAAW,GAAnB;QACI,IAAI,IAAI,CAAC,cAAc,KAAK,CAAC,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;YACjF,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;YAC3B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;YACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACzB;IACL,CAAC;IAEO,iDAA4B,GAApC,UAAqC,IAAU;QAC3C,IAAI,cAAc,GAAG,IAAI,wDAAO,CAAC,aAAa,CAAC,CAAC,EAAE;YAC9C,IAAI,CAAC,cAAc,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC;QAEjD,OAAO,cAAc,CAAC;IAC1B,CAAC;IAEO,+CAA0B,GAAlC,UAAmC,IAAU;QACzC,IAAI,YAAY,GAAG,IAAI,wDAAO,CAAC,cAAc,CAAC;YAC1C,IAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC;QAE7C,OAAO,YAAY,CAAC;IACxB,CAAC;IAEO,2CAAsB,GAA9B,UAA+B,QAA+B;QAC1D,OAAO,UAAC,UAAU;YACd,QAAQ,CAAC,GAAG,GAAG,UAAU,CAAC;QAC9B,CAAC,CAAC;IACN,CAAC;IACL,iBAAC;AAAD,CAAC;;AAEM,IAAI,kBAAkB,GAAe,IAAI,UAAU,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;;AC7Ga;AAEpE,IAAQ,OAAO,CA+KpB;AA/KD,WAAc,OAAO;IAOjB;QAMI;YALO,UAAK,GAAW,QAAQ,CAAC;YAM5B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACzB,CAAC;QAEM,4BAAW,GAAlB,UAAmB,aAA4B;YAA/C,iBAUC;YATG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACpC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC;YAE5B,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,2DAA2D;gBAC3D,MAAM,CAAC,UAAU,CAAC;oBACd,KAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBAC7B,CAAC,EAAE,CAAC,CAAC,CAAC;aACT;QACL,CAAC;QAEM,+BAAc,GAArB,UAAsB,aAA4B;YAC9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7C,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,aAAa,CAAC,EAAE,EAAE;oBAC5C,MAAM,CAAC,YAAY,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;oBAC7C,aAAa,CAAC,MAAM,GAAG,KAAK,CAAC;oBAC7B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC7B,OAAO;iBACV;aACJ;QACL,CAAC;QAEM,sBAAK,GAAZ;YACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YAErB,IAAI,CAAC,GAAG,EAAE,CAAC;QACf,CAAC;QAEO,oBAAG,GAAX;YAAA,iBAQC;YAPG,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7C,MAAM,CAAC,UAAU,CAAC,CAAC,UAAC,KAAK;oBACrB,OAAO;wBACH,KAAI,CAAC,IAAI,CAAC,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;oBACtC,CAAC,CAAC;gBACN,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACb;QACL,CAAC;QAEO,qBAAI,GAAZ,UAAa,aAA4B;YACrC,IAAI,IAAI,GAAG,IAAI,EACX,OAAO,GAAG,IAAI,GAAG,aAAa,CAAC,GAAG,CAAC;YAEvC,aAAa,CAAC,QAAQ,EAAE,CAAC;YAEzB,IAAI,aAAa,CAAC,MAAM,EAAE;gBACtB,aAAa,CAAC,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC;oBACxC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBAC7B,CAAC,EAAE,OAAO,CAAC,CAAC;aACf;QACL,CAAC;QAEM,wBAAO,GAAd;YACI,oEAAoE;YACpE,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;gBAClD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;aAC3C;YAED,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAC1B,CAAC;QACL,aAAC;IAAD,CAAC;IAxEY,cAAM,SAwElB;IAED;QAKI,wBAAY,QAAkB;YAJvB,UAAK,GAAW,gBAAgB,CAAC;YAKpC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,EAAE,GAAG,cAAc,CAAC,IAAI,EAAE,CAAC;QACpC,CAAC;QALc,mBAAI,GAAW,CAAC,CAAC;QASpC,qBAAC;KAAA;IAZY,sBAAc,iBAY1B;IAED,wEAAwE;IACxE,+EAA+E;IAC/E;QAOI;YANO,UAAK,GAAW,eAAe,CAAC;YAOnC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAChC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACzB,CAAC;QAEM,6BAAK,GAAZ;YACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,GAAG,EAAE,CAAC;QACf,CAAC;QAEO,2BAAG,GAAX;YAAA,iBAkBC;YAjBG,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;gBAEhC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC7C,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;oBAE9B,IAAI,IAAI,CAAC,kBAAkB,EAAE;wBACzB,MAAM;qBACT;iBACJ;gBAED,4EAA4E;gBAC5E,6DAA6D;gBAC7D,6FAAwB,CAAC;oBACrB,KAAI,CAAC,GAAG,EAAE,CAAC;gBACf,CAAC,CAAC,CAAC;aACN;QACL,CAAC;QAEM,mCAAW,GAAlB,UAAmB,cAA8B;YAC7C,kFAAkF;YAClF,qCAAqC;YACrC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;YAE/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACzC,CAAC;QAEM,sCAAc,GAArB,UAAsB,cAA8B;YAChD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7C,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,cAAc,CAAC,EAAE,EAAE;oBAC7C,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;oBAC/B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC7B,OAAO;iBACV;aACJ;QACL,CAAC;QAEM,+BAAO,GAAd;YACI,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;YAC/B,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAC1B,CAAC;QACL,oBAAC;IAAD,CAAC;IA7DY,qBAAa,gBA6DzB;IAED;QAAmC,iCAAc;QAG7C,uBAAY,GAAW,EAAE,QAAkB;YAA3C,YACI,kBAAM,QAAQ,CAAC,SAKlB;YARM,WAAK,GAAW,eAAe,CAAC;YAKnC,KAAI,CAAC,GAAG,GAAG,GAAG,CAAC;YACf,KAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YACnB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;;QACxB,CAAC;QAKL,oBAAC;IAAD,CAAC,CAdkC,cAAc,GAchD;IAdY,qBAAa,gBAczB;AACL,CAAC,EA/Ka,OAAO,KAAP,OAAO,QA+KpB;;;;;;;;;;ACnLK,kCAAmC,QAAkB;IACvD,IAAI,MAAM,CAAC,qBAAqB,EAAE;QAC9B,MAAM,CAAC,qBAAqB,CAAC,UAAC,IAAY,IAAK,eAAQ,EAAE,EAAV,CAAU,CAAC,CAAC;QAC3D,OAAO;KACV;IAED,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;AAC5B,CAAC;;;;;;;;;;;ACL8C;AAE/C;;EAEE;AACF;IAoBI,mBAAY,OAAmB,EAAE,QAAoB,EAAE,OAAmB,EAAE,QAAoB;QAApF,qCAAmB;QAAE,uCAAoB;QAAE,qCAAmB;QAAE,uCAAoB;QAnBzF,UAAK,GAAW,WAAW,CAAC;QAoB/B,IAAI,CAAC,MAAM,GAAG;YACV,CAAC,OAAO,EAAE,QAAQ,CAAC;YACnB,CAAC,OAAO,EAAE,QAAQ,CAAC;SACtB,CAAC;IACN,CAAC;IAKD,sBAAkB,iBAAI;QAHtB;;UAEE;aACF;YACI,OAAO,IAAI,SAAS,EAAE,CAAC;QAC3B,CAAC;;;OAAA;IAKD,sBAAkB,qBAAQ;QAH1B;;UAEE;aACF;YACI,OAAO,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACrC,CAAC;;;OAAA;IAED;;;MAGE;IACK,yBAAK,GAAZ,UAAa,MAA+B;QACxC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClD,CAAC;IAED;;;MAGE;IACK,2BAAO,GAAd,UAAe,MAA6B;QACxC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC;IAYM,uBAAG,GAAV,UAAW,GAAQ;QACf,IAAI,GAAG,CAAC,KAAK,KAAK,WAAW,EAAE;YAC3B,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAChL;aACI;YACD,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;SAC5H;IACL,CAAC;IAYM,4BAAQ,GAAf,UAAgB,GAAQ;QACpB,IAAI,GAAG,CAAC,KAAK,KAAK,WAAW,EAAE;YAC3B,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC5F,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC3E,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC3E,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACpF;aACI;YACD,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;SAC5H;IACL,CAAC;IAYM,4BAAQ,GAAf,UAAgB,GAAQ;QACpB,IAAI,GAAG,CAAC,KAAK,KAAK,WAAW,EAAE;YAC3B,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAChL;aACI;YACD,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;SAC5H;IACL,CAAC;IAYM,gCAAY,GAAnB,UAAoB,GAAQ;QACxB,IAAI,GAAG,CAAC,KAAK,KAAK,WAAW,EAAE;YAC3B,OAAO,IAAI,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAChL;aACI;YACD,OAAO,IAAI,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC5H;IACL,CAAC;IAYM,0BAAM,GAAb,UAAc,GAAQ;QAClB,IAAI,GAAG,CAAC,KAAK,KAAK,WAAW,EAAE;YAC3B,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAChL;aACI;YACD,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;SAC5H;IACL,CAAC;IAYM,8BAAU,GAAjB,UAAkB,GAAQ;QACtB,IAAI,GAAG,CAAC,KAAK,KAAK,WAAW,EAAE;YAC3B,OAAO,IAAI,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAChL;aACI;YACD,OAAO,IAAI,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC5H;IACL,CAAC;IAED;;;MAGE;IACK,6BAAS,GAAhB,UAAiB,MAAgB;QAC7B,OAAO,IAAI,0DAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAClJ,CAAC;IAED;;MAEE;IACK,6BAAS,GAAhB;QACI,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrG,CAAC;IAED;;MAEE;IACK,+BAAW,GAAlB;QACI,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzF,CAAC;IAED;;MAEE;IACK,2BAAO,GAAd;QACI,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;IACxI,CAAC;IAED;;MAEE;IACK,yBAAK,GAAZ;QACI,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrG,CAAC;IAED;;;MAGE;IACK,8BAAU,GAAjB,UAAkB,MAAiB;QAC/B,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5L,CAAC;IAED;;MAEE;IACK,4BAAQ,GAAf;QACI,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;IACvE,CAAC;IAED;;;MAGE;IACY,eAAK,GAAnB,UAAoB,MAAgB;QAChC,OAAO,IAAI,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;IACnD,CAAC;IACL,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACrP8C;AAEV;AACoC;AACR;AACA;AAChB;AACd;AACQ;AACA;AACS;AACW;AACd;AACS;AAE1D;IAWI,8BAAY,aAAoC;QAC5C,wCAAwC;QACxC,gDAAI,CAAC,IAAI,GAAG,IAAI,uDAAS,CAAC,aAAa,CAAC,UAAU,CAAC,KAAK,EAAE,aAAa,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAC3F,gDAAI,CAAC,oBAAoB,GAAG,aAAa,CAAC,UAAU,CAAC,oBAAoB,CAAC;QAE1E,4EAAkB,CAAC,aAAa,GAAG,yDAAW,CAAC,gBAAgB,CAAC,aAAa,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QAExG,oFAAsB,CAAC,SAAS,GAAG,aAAa,CAAC,4BAA4B,CAAC,SAAS,CAAC;QACxF,oFAAsB,CAAC,gBAAgB,GAAG,aAAa,CAAC,4BAA4B,CAAC,gBAAgB,CAAC;QACtG,oFAAsB,CAAC,YAAY,GAAG,aAAa,CAAC,4BAA4B,CAAC,YAAY,CAAC;QAC9F,oFAAsB,CAAC,IAAI,GAAG,aAAa,CAAC,4BAA4B,CAAC,IAAI,CAAC;QAC9E,oFAAsB,CAAC,YAAY,GAAG,aAAa,CAAC,4BAA4B,CAAC,YAAY,GAAG,WAAW,CAAC,CAAC,qBAAqB;QAElI,4EAAkB,CAAC,UAAU,GAAG,aAAa,CAAC,UAAU,CAAC,UAAU,CAAC;QAEpE,4DAAK,CAAC,QAAQ,GAAG,yDAAW,CAAC,gBAAgB,CAAC,aAAa,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QAC1F,4DAAK,CAAC,cAAc,GAAG,aAAa,CAAC,aAAa,CAAC,oBAAoB,CAAC;QAExE,8CAAG,CAAC,IAAI,GAAG,IAAI,uDAAS,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACxF,8CAAG,CAAC,mBAAmB,GAAG,aAAa,CAAC,SAAS,CAAC,mBAAmB,CAAC;QAEtE,sDAAU,CAAC,iBAAiB,GAAG,aAAa,CAAC,YAAY,CAAC,iBAAiB,CAAC;QAC5E,sDAAU,CAAC,gBAAgB,GAAG,aAAa,CAAC,YAAY,CAAC,gBAAgB,CAAC;QAC1E,sDAAU,CAAC,iBAAiB,GAAG,aAAa,CAAC,YAAY,CAAC,iBAAiB,CAAC;QAC5E,sDAAU,CAAC,gBAAgB,GAAG,aAAa,CAAC,YAAY,CAAC,gBAAgB,CAAC;QAC1E,sDAAU,CAAC,kBAAkB,GAAG,aAAa,CAAC,YAAY,CAAC,kBAAkB,CAAC;QAE9E,sDAAM,CAAC,gBAAgB,GAAG,yDAAW,CAAC,gBAAgB,CAAC,aAAa,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;QAClG,sDAAM,CAAC,IAAI,GAAG,IAAI,uDAAS,CAAC,aAAa,CAAC,YAAY,CAAC,KAAK,EAAE,aAAa,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAEjG,+DAAU,CAAC,IAAI,GAAG,IAAI,uDAAS,CAAC,aAAa,CAAC,gBAAgB,CAAC,KAAK,EAAE,aAAa,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAC7G,+DAAU,CAAC,SAAS,GAAG,yDAAW,CAAC,gBAAgB,CAAC,aAAa,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;QAE9F,2EAAkB,CAAC,gBAAgB,GAAG,aAAa,CAAC,iBAAiB,CAAC,gBAAgB,CAAC;QAEvF,6DAAW,CAAC,aAAa,GAAG,yDAAW,CAAC,WAAW,CAAC,aAAa,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QAE5F,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;QAC9B,sEAAe,CAAC,kBAAkB,GAAG,aAAa,CAAC,UAAU,CAAC,kBAAkB,CAAC;IACrF,CAAC;IACL,2BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClE8C;AAEM;AACa;AACkB;AACX;AACf;AACG;AAE7D;IAA0B,wBAAuB;IAc7C,cAAY,OAAkB,EAAE,cAAyC;QAAzE,YACI,iBAAO,SAuBV;QAtBG,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,KAAI,CAAC,WAAW,GAAG,IAAI,6DAAe,EAAE,CAAC;QAEzC,KAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QAEb,KAAI,CAAC,cAAc,GAAG,IAAI,sEAAkB,CAAC,OAAO,CAAC,CAAC;QACtD,KAAI,CAAC,YAAY,GAAG,IAAI,yEAAgB,CAAC,OAAO,CAAC,CAAC;QAElD,KAAI,CAAC,OAAO,GAAG,IAAI,iEAAW,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,cAAc,EAAE,KAAI,CAAC,YAAY,EAAE,KAAI,CAAC,cAAc,EAAE,OAAO,CAAC,kBAAkB,CAAC,QAAQ,EAAE,OAAO,CAAC,kBAAkB,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;QAEpN,8DAA8D;QAC9D,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;QAE3C,KAAI,CAAC,kBAAkB,GAAG,IAAI,8EAAsB,CAAC,IAAI,KAAK,CAAe,KAAI,CAAC,MAAM,EAAE,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QACzG,KAAI,CAAC,kBAAkB,CAAC,cAAc,GAAG,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC;QAElE,KAAI,CAAC,cAAc,GAAG,IAAI,gGAAkB,CAAC,KAAI,CAAC,CAAC;QACnD,KAAI,CAAC,gBAAgB,GAAG,IAAI,qFAAoB,CAAC,KAAI,EAAE,cAAc,CAAC,CAAC;QAEvE,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAEhC,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;;IAC9D,CAAC;IAIM,qBAAM,GAAb,UAAc,QAAqB;QAC/B,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACrC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACzC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAEvC,mBAAmB;QACnB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;QAC1D,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;IAEM,0BAAW,GAAlB,UAAmB,OAAkB,EAAE,aAAuB;QAC1D,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;QACrB,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,OAAO,CAAC,kBAAkB,EAAE,aAAa,CAAC,CAAC;QAC/E,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACzC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACvC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACvD,CAAC;IAEM,sBAAO,GAAd,UAAe,OAAwB;QAAxB,yCAAwB;QACnC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YAClB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAEvB,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;YAElC,IAAI,CAAC,OAAO,EAAE;gBACV,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;gBACvB,IAAI,CAAC,OAAO,EAAE,CAAC;aAClB;iBAAM;gBACH,wFAAwF;gBACxF,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;aAC9B;SACJ;IACL,CAAC;IAzEa,SAAI,GAAc,IAAI,uDAAS,CAAC,EAAE,CAAC,CAAC;IACpC,yBAAoB,GAAW,EAAE,CAAC;IAyEpD,WAAC;CAAA,CA3EyB,0DAAY,CAAC,UAAU,GA2EhD;AA3EgB;;;;;;;;;;;;;;;;;;;;;;;;;;ACTiC;AACE;AACI;AACJ;AACY;AACZ;AAIpD;IAAiC,+BAAqB;IAOlD,qBAAY,IAAY,EAAE,cAAuB,EAAE,YAA8B,EAAE,cAAkC,EAAE,QAAqB,EAAE,QAAgB,EAAE,IAAe,EAAE,cAAyC;QAA1N;QACI,wGAAwG;QACxG,kBAAM,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,yDAAW,CAAC,KAAK,CAAC,WAAW,CAAC,SAkBxF;QAhBG,KAAI,CAAC,IAAI,GAAG,IAAI,gEAAe,CAAC,YAAY,CAAC,CAAC;QAC9C,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAC1B,KAAI,CAAC,cAAc,GAAG,IAAI,oEAAiB,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;QAC5E,KAAI,CAAC,cAAc,GAAG,IAAI,4EAAqB,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;QAE9E,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;QACzB,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC;QACnC,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC;QAExC,IAAI,CAAC,cAAc,EAAE;YACjB,KAAI,CAAC,QAAQ,GAAG,IAAI,gEAAe,CAAC,cAAc,CAAC,CAAC;YACpD,KAAI,CAAC,YAAY,GAAG,IAAI,gEAAe,CAAC,IAAI,CAAC,CAAC;YAE9C,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;YAC7B,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;SACpC;;IACL,CAAC;IAEM,4BAAM,GAAb,UAAc,IAAY,EAAE,IAAY,EAAE,KAAwB,EAAE,YAA0B,EAAE,gBAA0B;QACtH,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,YAAY,EAAE,gBAAgB,CAAC,CAAC;IAClF,CAAC;IAEM,oCAAc,GAArB,UAAsB,KAA4B;QAC9C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAEM,gCAAU,GAAjB,UAAkB,WAAmB;QACjC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;IACrC,CAAC;IAEM,8BAAQ,GAAf;QACI,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC;YAE9B,IAAI,IAAI,CAAC,YAAY,EAAE;gBACnB,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,KAAK,CAAC;aACrC;SACJ;QAED,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IAC9B,CAAC;IAEM,4BAAM,GAAb,UAAc,QAAqB;QAC/B,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACzC,CAAC;IACL,kBAAC;AAAD,CAAC,CAxDgC,yDAAW,CAAC,SAAS,GAwDrD;;;;;;;;;;;;;;;;;;;;;;ACjEiD;AAGlD;IAAqC,mCAAoB;IAGrD,yBAAY,YAA8B;QAA1C,YACI,kBAAM,CAAC,EAAE,CAAC,EAAE,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,SAK/E;QAHG,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,UAAC,QAAgB;YAC7C,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;;IACP,CAAC;IAEO,uCAAa,GAArB,UAAsB,YAA8B;QAChD,OAAO,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;IAC3E,CAAC;IAED,mGAAmG;IACrF,8BAAc,GAA5B,UAA6B,cAAyC;QAClE,eAAe,CAAC,aAAa,GAAG,IAAI,KAAK,EAA2B,CAAC;QAErE,eAAe,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,eAAe,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACvG,eAAe,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,eAAe,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACvG,eAAe,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,eAAe,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACvG,eAAe,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACpE,eAAe,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACpE,eAAe,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACpE,eAAe,CAAC,aAAa,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,aAAa,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC1G,eAAe,CAAC,aAAa,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACtE,eAAe,CAAC,aAAa,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAC1E,CAAC;IACL,sBAAC;AAAD,CAAC,CA7BoC,yDAAW,CAAC,QAAQ,GA6BxD;;;;;;;;;;;;;;;;;;;;;;;AChCiD;AAEnB;AAE/B;IAAuC,qCAAqB;IAKxD,2BAAY,cAAkC,EAAE,cAAyC;QAAzF,iBAuCC;QAtCG,IAAI,UAAkB,CAAC;QAEvB,0BAAM,CAAC,EAAE,CAAC,EAAE,0CAAI,CAAC,IAAI,CAAC,KAAK,EAAE,0CAAI,CAAC,IAAI,CAAC,MAAM,EAAE,yDAAW,CAAC,KAAK,CAAC,WAAW,CAAC,SAAC;QAE9E,KAAI,CAAC,YAAY,GAAG,IAAI,KAAK,EAAwB,CAAC;QAEtD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,iBAAiB,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5D,UAAU,GAAG,iBAAiB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAE/C,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,GAAG,IAAI,yDAAW,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,cAAc,CAAC,QAAQ,CAAC,YAAY,GAAG,UAAU,CAAC,CAAC,CAAC;YACnH,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;YACzC,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC;YAC9C,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC;SAChD;QAED,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,UAAC,aAAqB,EAAE,SAAiB;YACtE,IAAI,WAAW,GAAW,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAC1E,UAAkB,CAAC;YAEvB,IAAI,WAAW,GAAG,CAAC,EAAE;gBACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,iBAAiB,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC5D,UAAU,GAAG,iBAAiB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;oBAE/C,IAAI,UAAU,IAAI,WAAW,EAAE;wBAC3B,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC;qBAChD;yBAAM;wBACH,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC;qBACjD;iBACJ;aACJ;iBACI,EAAE,gDAAgD;gBACnD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,iBAAiB,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC5D,UAAU,GAAG,iBAAiB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;oBAE/C,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC;iBACjD;aACJ;QACL,CAAC,CAAC,CAAC;;IACP,CAAC;IAEM,kCAAM,GAAb,UAAc,QAAqB;IAEnC,CAAC;IA/Cc,8BAAY,GAAkB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAgD9D,wBAAC;CAAA,CAjDsC,yDAAW,CAAC,SAAS,GAiD3D;AAjD6B;;;;;;;;;;;;;;;;;;;;;;;ACJoB;AACS;AAC5B;AAE/B;IAAqC,mCAAqB;IAUtD,yBAAY,cAAkC;QAA9C,iBAkBC;QAjBG,IAAI,KAAK,GAAG,0CAAI,CAAC,IAAI,CAAC,KAAK,GAAG,eAAe,CAAC,kBAAkB,CAAC;QAEjE,0BAAM,CAAC,EAAE,0CAAI,CAAC,IAAI,CAAC,UAAU,GAAG,eAAe,CAAC,QAAQ,EAAE,KAAK,EAAE,eAAe,CAAC,MAAM,EAAE,eAAe,CAAC,gBAAgB,CAAC,SAAC;QAE3H,KAAI,CAAC,eAAe,GAAG,cAAc,CAAC;QAEtC,KAAI,CAAC,MAAM,CAAC,CAAC,EAAE,eAAe,CAAC,YAAY,CAAC,CAAC;QAE7C,KAAI,CAAC,QAAQ,GAAG,IAAI,yDAAW,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,eAAe,CAAC,MAAM,EAAE,KAAI,CAAC,YAAY,EAAE,CAAC,CAAC;QAEpG,KAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,UAAC,MAAc,EAAE,SAAiB;YACrE,KAAI,CAAC,aAAa,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;QAEH,KAAI,CAAC,aAAa,CAAC,cAAc,CAAC,MAAM,EAAE,cAAc,CAAC,SAAS,CAAC,CAAC;QAEpE,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;;IACjC,CAAC;IAEO,uCAAa,GAArB,UAAsB,MAAc,EAAE,SAAiB;QACnD,IAAI,gBAAgB,GAAW,MAAM,GAAG,SAAS,CAAC;QAElD,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAC1C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,GAAG,gBAAgB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAChE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;IAClF,CAAC;IAEO,sCAAY,GAApB;QACI,IAAI,gBAAgB,GAAW,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC;QAElE,IAAI,gBAAgB,IAAI,sEAAkB,CAAC,aAAa,EAAE;YACtD,OAAO,sEAAkB,CAAC,SAAS,CAAC;SACvC;aAAM,IAAI,gBAAgB,IAAI,sEAAkB,CAAC,cAAc,EAAE;YAC9D,OAAO,sEAAkB,CAAC,UAAU,CAAC;SACxC;aAAM;YACH,OAAO,sEAAkB,CAAC,UAAU,CAAC;SACxC;IACL,CAAC;IA/Ca,gCAAgB,GAAsB,yDAAW,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC1E,4BAAY,GAAsB,yDAAW,CAAC,KAAK,CAAC,KAAK,CAAC;IAC1D,wBAAQ,GAAW,EAAE,CAAC;IACtB,kCAAkB,GAAW,EAAE,CAAC;IAChC,sBAAM,GAAW,CAAC,CAAC;IA4CrC,sBAAC;CAAA,CAjDoC,yDAAW,CAAC,SAAS,GAiDzD;AAjD2B;;;;;;;;;;;;;;;;;;;;;;ACJmB;AACW;AAG1D;IAAwC,sCAAc;IAQlD,4BAAY,OAAkB;eAC1B,kBAAM,OAAO,CAAC,cAAc,CAAC,MAAM,EAAE,OAAO,CAAC,OAAO,CAAC;IACzD,CAAC;IATa,6BAAU,GAAW,GAAG,CAAC;IACzB,4BAAS,GAAsB,yDAAW,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACpE,6BAAU,GAAsB,yDAAW,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACrE,6BAAU,GAAsB,yDAAW,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACrE,gCAAa,GAAW,EAAE,CAAC;IAC3B,iCAAc,GAAW,EAAE,CAAC;IAK9C,yBAAC;CAAA,CAXuC,qEAAc,GAWrD;AAX8B;;;;;;;;;;;ACJgB;AAG/C;IAKI,wBAAY,MAAc,EAAE,SAAiB;QACzC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG,IAAI,8DAAgB,EAAkB,CAAC;IAC/D,CAAC;IAID,sBAAW,yCAAa;aAAxB;YACI,OAAO,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;QACxC,CAAC;;;OAAA;IAEM,oCAAW,GAAlB,UAAmB,OAAkB;QACjC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC;QAC1C,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO,CAAC,cAAc,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,KAAK,OAAO,CAAC,OAAO,EAAE;YACrF,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC;YAC5C,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC;YAEjC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SAC1D;IACL,CAAC;IACL,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;AC9BiD;AACR;AAI1C;IAA2C,yCAAkB;IAsBzD,+BAAY,YAA8B,EAAE,cAAkC;QAA9E,YACI,kBAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,yDAAW,CAAC,KAAK,CAAC,WAAW,CAAC,SA8ChD;QA5CG,KAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QAEpB,KAAI,CAAC,WAAW,GAAG,cAAc,CAAC,MAAM,CAAC;QACzC,KAAI,CAAC,UAAU,GAAG,YAAY,CAAC,KAAK,CAAC;QACrC,KAAI,CAAC,eAAe,GAAG,YAAY,CAAC,UAAU,CAAC;QAC/C,KAAI,CAAC,0BAA0B,GAAG,YAAY,CAAC,qBAAqB,CAAC;QAErE,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,UAAC,MAAc,EAAE,SAAiB;YAC/D,IAAI,IAAI,GAAG,MAAM,GAAG,KAAI,CAAC,WAAW,CAAC;YAErC,IAAI,YAAY,CAAC,KAAK,KAAK,KAAI,CAAC,UAAU,IAAI,IAAI,KAAK,CAAC,EAAE;gBACtD,IAAI,IAAI,GAAG,CAAC,EAAE;oBACV,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,qBAAqB,CAAC,oBAAoB,EAAE,qBAAqB,CAAC,qBAAqB,CAAC,CAAC;iBACzH;qBAAM;oBACH,KAAI,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,EAAE,EAAE,qBAAqB,CAAC,oBAAoB,EAAE,qBAAqB,CAAC,qBAAqB,CAAC,CAAC;iBAC/H;gBAED,KAAI,CAAC,WAAW,GAAG,MAAM,CAAC;aAC7B;QACL,CAAC,CAAC,CAAC;QAEH,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAC,UAAU;YAC5C,IAAI,OAAO,KAAI,CAAC,eAAe,KAAK,WAAW,EAAE;gBAC7C,KAAI,CAAC,eAAe,GAAG,UAAU,CAAC;gBAClC,KAAI,CAAC,0BAA0B,GAAG,YAAY,CAAC,qBAAqB,CAAC;aACxE;iBAAM;gBACH,IAAI,gBAAgB,GAAW,UAAU,GAAG,KAAI,CAAC,eAAe,CAAC;gBAAA,CAAC;gBAElE,IAAI,YAAY,CAAC,KAAK,KAAK,KAAI,CAAC,UAAU,EAAE;oBACxC,gBAAgB,IAAI,KAAI,CAAC,0BAA0B,CAAC;oBACpD,KAAI,CAAC,UAAU,GAAG,YAAY,CAAC,KAAK,CAAC;iBACxC;gBAED,IAAI,gBAAgB,GAAG,CAAC,EAAE;oBACtB,KAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,GAAG,KAAK,EAAE,qBAAqB,CAAC,wBAAwB,EAAE,qBAAqB,CAAC,uBAAuB,EAAE,qBAAqB,CAAC,wBAAwB,EAAE,IAAI,CAAC,CAAC;iBACzM;qBAAM;oBACH,KAAI,CAAC,MAAM,CAAC,GAAG,GAAG,gBAAgB,CAAC,QAAQ,EAAE,GAAG,KAAK,EAAE,qBAAqB,CAAC,wBAAwB,EAAE,qBAAqB,CAAC,uBAAuB,EAAE,qBAAqB,CAAC,wBAAwB,EAAE,IAAI,CAAC,CAAC;iBAC/M;gBAED,KAAI,CAAC,eAAe,GAAG,UAAU,CAAC;gBAClC,KAAI,CAAC,0BAA0B,GAAG,YAAY,CAAC,qBAAqB,CAAC;aACxE;QACL,CAAC,CAAC,CAAC;;IACP,CAAC;IAEM,sCAAM,GAAb,UAAc,IAAY,EAAE,IAAY,EAAE,KAAwB,EAAE,YAA0B,EAAE,gBAA0B;QAA1H,iBAWC;QAVG,IAAI,MAAM,GAAe,IAAI,sDAAU,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,YAAY,EAAE,gBAAgB,CAAC,EACtF,EAAE,GAAW,IAAI,CAAC,UAAU,EAAE,CAAC;QAEnC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,UAAC,MAAM;YAC1B,MAAM,CAAC,OAAO,EAAE,CAAC;YACjB,OAAO,KAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC;QAC5B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC1B,CAAC;IAEM,sCAAM,GAAb,UAAc,QAAqB;QAC/B,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,SAAS,EAAE;YAC3B,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SACvC;IACL,CAAC;IAEM,uCAAO,GAAd;IACA,CAAC;IA1Fa,2CAAqB,GAAsB,yDAAW,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IACnF,2CAAqB,GAAsB,yDAAW,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;IACnF,6CAAuB,GAAsB,yDAAW,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACtF,0CAAoB,GAAW,EAAE,CAAC;IAClC,0CAAoB,GAAW,EAAE,CAAC;IAClC,8CAAwB,GAAW,EAAE,CAAC;IACtC,8CAAwB,GAAW,EAAE,CAAC;IACtC,8CAAwB,GAAgB,yDAAW,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAElE,oCAAc,GAAiE,UAAC,EAAU,EAAE,QAAsC;QAC7I,QAAQ,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;QACvB,OAAO,QAAQ,CAAC,EAAE,CAAC,CAAC;IACxB,CAAC,CAAC;IA+EN,4BAAC;CAAA,CA5F0C,yDAAW,CAAC,MAAM,GA4F5D;AA5FiC;;;;;;;;;;;;;;;;;;;;;ACLgB;AAElD;IAAgC,8BAAkB;IAS9C,oBAAY,IAAY,EAAE,IAAY,EAAE,KAAwB,EAAE,YAA4D,EAAE,gBAAiC;QAA/F,8CAA4B,UAAU,CAAC,qBAAqB;QAAE,2DAAiC;QAAjK,YACI,kBAAM,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,SA0B3B;QAxBG,IAAI,kBAAkB,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEnD,KAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC;QACzC,KAAI,CAAC,YAAY,CAAC,UAAU,GAAG,yDAAW,CAAC,UAAU,CAAC,OAAO,CAAC;QAC9D,KAAI,CAAC,YAAY,CAAC,UAAU,GAAG,MAAM,CAAC;QAEtC,KAAI,CAAC,cAAc,GAAG,IAAI,yDAAW,CAAC,aAAa,CAAC,KAAI,CAAC,QAAQ,EAAE,IAAI,yDAAW,CAAC,kBAAkB,GAAG,0DAAY,CAAC,KAAK,CAAC,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,kBAAkB,GAAG,0DAAY,CAAC,KAAK,CAAC,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,EAAE,YAAY,EAAE,kEAAoB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACpS,KAAI,CAAC,UAAU,GAAG,IAAI,yDAAW,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,EAAE,YAAY,EAAE,kEAAoB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACxG,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QAErB,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAC,WAAwB;YACvD,KAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAC,IAAY;YACvC,KAAI,CAAC,OAAO,GAAG,IAAI,GAAG,GAAG,CAAC;QAC9B,CAAC,CAAC,CAAC;QAEH,KAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,UAAC,aAAwC;YACzE,KAAI,CAAC,OAAO,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;QAEH,KAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,KAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;;IAC3B,CAAC;IAEM,2BAAM,GAAb,UAAc,QAAqB;QAC/B,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACrC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;IAEM,4BAAO,GAAd;QACI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YAEpB,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;YAC9B,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;YAE1B,iBAAM,OAAO,WAAE,CAAC;SACnB;IACL,CAAC;IAnDa,uBAAY,GAA+B,IAAI,0DAAY,CAAC,KAAK,CAAS,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;IACrF,uBAAY,GAA+B,IAAI,0DAAY,CAAC,KAAK,CAAS,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACnF,gCAAqB,GAAgB,yDAAW,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAkDlF,iBAAC;CAAA,CArD+B,yDAAW,CAAC,MAAM,GAqDjD;AArDsB;;;;;;;;;;;;;;;;;;;;;;ACF2B;AACnB;AAE/B;IAAqC,mCAAkB;IAKnD,yBAAY,IAAY;QAAxB,YACI,kBAAM,CAAC,EAAE,0CAAI,CAAC,IAAI,CAAC,UAAU,GAAG,eAAe,CAAC,QAAQ,EAAE,IAAI,EAAE,eAAe,CAAC,UAAU,CAAC,SAK9F;QAHG,KAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,eAAe,CAAC,SAAS,CAAC;QACvD,KAAI,CAAC,YAAY,CAAC,UAAU,GAAG,yDAAW,CAAC,UAAU,CAAC,KAAK,CAAC;QAC5D,KAAI,CAAC,YAAY,CAAC,UAAU,GAAG,MAAM,CAAC;;IAC1C,CAAC;IAVa,yBAAS,GAAW,MAAM,CAAC;IAC3B,wBAAQ,GAAW,EAAE,CAAC;IACtB,0BAAU,GAAsB,yDAAW,CAAC,KAAK,CAAC,KAAK,CAAC;IAS1E,sBAAC;CAAA,CAZoC,yDAAW,CAAC,MAAM,GAYtD;AAZ2B;;;;;;;;;;;;;;;;;;;;;;ACHmB;AAEuB;AAGtE;IAA4C,0CAAyC;IAkBjF,gCAAY,QAA6B;QAAzC,YACI,kBAAM,QAAQ,CAAC,SAqBlB;QAnBG,KAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;QAElC,KAAI,CAAC,IAAI,GAAG,sBAAsB,CAAC,IAAI,CAAC;QACxC,KAAI,CAAC,KAAK,GAAG,sBAAsB,CAAC,YAAY,CAAC;QACjD,KAAI,CAAC,MAAM,GAAG,yDAAW,CAAC,IAAI,CAAC;QAC/B,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,KAAI,CAAC,aAAa,GAAG,yDAAW,CAAC,IAAI,CAAC;QACtC,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAE3B,KAAI,CAAC,MAAM,GAAG;YACV,OAAO,EAAE,KAAK;YACd,QAAQ,EAAE,KAAK;YACf,YAAY,EAAE,KAAK;YACnB,aAAa,EAAE,KAAK;SACvB,CAAC;QAEF,KAAI,CAAC,qBAAqB,GAAG,IAAI,kFAAwB,CAAC,KAAI,CAAC,CAAC;QAEhE,KAAI,CAAC,MAAM,GAAG,IAAI,8DAAgB,EAAqC,CAAC;;IAC5E,CAAC;IAIM,4CAAW,GAAlB,UAAmB,OAAoC,EAAE,aAAuB;QAC5E,IAAI,CAAC,aAAa,EAAE;YAChB,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;SACnD;aAAM;YACH,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;YACjC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;SACpC;QAED,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,aAAa,EAAE;YACvC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;YACzB,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;YAC7B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;YACjC,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;SAChC;IACL,CAAC;IAEM,oDAAmB,GAA1B,UAA2B,SAAiB;QACxC,aAAa;QACb,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,KAAK,CAAC;IAC3C,CAAC;IAEM,4CAAW,GAAlB,UAAmB,SAAiB;QAChC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IAC/B,CAAC;IAEM,2CAAU,GAAjB,UAAkB,SAAiB;QAC/B,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;IAChC,CAAC;IAEM,gDAAe,GAAtB;QACI,KAAK,IAAI,CAAC,GAAG,sBAAsB,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YAC3E,aAAa;YACb,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;SACpE;IACL,CAAC;IAEM,2CAAU,GAAjB,UAAkB,KAAkB;QAChC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACzC,CAAC;IAEM,uCAAM,GAAb,UAAc,QAAqB;QAC/B,IAAI,mBAA2B,EAC3B,SAAS,GAAgB,IAAI,yDAAW,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAC1F,SAAsB,EACtB,cAAsB,CAAC;QAE3B,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAE5C,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,aAAa,EAAE;YAC3C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEnD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC1K,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;YACzF,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;YAExC,6CAA6C;YAC7C,IAAI,cAAc,GAAG,EAAE,EAAE;gBACrB,IAAI,CAAC,QAAQ,GAAG,yDAAW,CAAC,IAAI,CAAC;aACpC;iBAAM,IAAI,cAAc,GAAG,IAAI,EAAE,OAAO;aACzC;gBACI,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;aAC3C;YAED,IAAI,CAAC,aAAa,GAAG,yDAAW,CAAC,IAAI,CAAC;YACtC,IAAI,CAAC,MAAM,GAAG,yDAAW,CAAC,IAAI,CAAC;YAE/B,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,CAAC,sBAAsB,CAAC,gBAAgB,GAAG,sBAAsB,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;YAE/J,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;gBACrB,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;aACnD;YACD,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;gBACtB,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aACxD;YAED,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;YAE3B,mBAAmB,GAAG,QAAQ,CAAC,OAAO,CAAC,OAAO,GAAG,sBAAsB,CAAC,YAAY,CAAC;YAErF,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;gBAC1B,IAAI,CAAC,QAAQ,IAAI,mBAAmB,CAAC;aACxC;YACD,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE;gBAC3B,IAAI,CAAC,QAAQ,IAAI,mBAAmB,CAAC;aACxC;SACJ;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpD,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SACtD;IACL,CAAC;IAEM,qCAAI,GAAX,UAAY,SAAiB,EAAE,WAAoB;QAC/C,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,aAAa;YACb,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,WAAW,EAAE;gBAC/C,aAAa;gBACb,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,WAAW,CAAC;gBACrC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAoC;oBACnD,SAAS,EAAE,SAAS;oBACpB,WAAW,EAAE,WAAW;iBAC3B,CAAC,CAAC;aACN;iBACI;gBACD,MAAM,IAAI,KAAK,CAAC,SAAS,GAAG,2BAA2B,CAAC,CAAC;aAC5D;SACJ;IACL,CAAC;IAEM,wCAAO,GAAd;QACI,kCAAkC;QAClC,IAAI,CAAC,MAAM,GAAG,cAAQ,CAAC,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,cAAQ,CAAC,CAAC;IACjC,CAAC;IA5Ja,2BAAI,GAAW,EAAE,CAAC;IAClB,mCAAY,GAAW,MAAM,CAAC;IAC9B,gCAAS,GAAW,CAAC,CAAC;IACtB,uCAAgB,GAAW,EAAE,CAAC;IAC9B,mCAAY,GAAW,IAAI,CAAC,EAAE,CAAC;IAC/B,wCAAiB,GAAa,CAAC,cAAc,EAAE,eAAe,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;IAwJzG,6BAAC;CAAA,CA9J2C,oEAAsB,CAAC,kBAAkB,GA8JpF;AA9JkC;;;;;;;;;;;;ACLY;AAGhB;AAE/B;IAWI,kCAAoB,mBAA2C;QAA/D,iBAyBC;QAzBmB,wBAAmB,GAAnB,mBAAmB,CAAwB;QAC3D,IAAI,0CAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE;YACnC,IAAI,CAAC,sBAAsB,GAAG,yDAAW,CAAC,gBAAgB,CAAC,0CAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;SACnH;aACI;YACD,IAAI,CAAC,sBAAsB,GAAG,yDAAW,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC;SAClE;QAED,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAE3B,IAAI,CAAC,sBAAsB,GAAG,IAAI,yDAAW,CAAC,aAAa,CAAC,yDAAW,CAAC,IAAI,EAAE,yDAAW,CAAC,IAAI,EAAE,IAAI,CAAC,sBAAsB,EAAE,kEAAoB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACnK,IAAI,CAAC,sBAAsB,GAAG,IAAI,yDAAW,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,sBAAsB,EAAE,kEAAoB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAEnI,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAC,WAAwB;YAC/D,KAAI,CAAC,mBAAmB,CAAC,QAAQ,GAAG,WAAW,CAAC;QACpD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAC,WAAmB;YAC1D,KAAI,CAAC,mBAAmB,CAAC,QAAQ,GAAG,WAAW,CAAC;QACpD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,IAAI,CAAC,UAAC,aAAsC;YAC/E,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,KAAI,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,GAAG,IAAI,KAAK,EAA+B,CAAC;IACnE,CAAC;IAEM,8CAAW,GAAlB,UAAmB,OAAoC;QACnD,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,cAAc,EAAE;YAC1C,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YAE5B,IAAI,CAAC,WAAW,EAAE,CAAC;SACtB;IACL,CAAC;IAEM,yCAAM,GAAb,UAAc,QAAqB;QAC/B,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC7C,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACjD,CAAC;IAEO,gDAAa,GAArB,UAAsB,OAAoC;QACtD,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,wBAAwB,CAAC,cAAc,EAAE;YACxE,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC;SAC7B;QAED,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC;IAEO,4DAAyB,GAAjC,UAAkC,OAAgD;QAC9E,IAAI,CAAC,OAAO,EAAE;YACV,OAAO;SACV;QAED,IAAI,CAAC,sBAAsB,CAAC,IAAI,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC;QACrE,IAAI,CAAC,sBAAsB,CAAC,EAAE,GAAG,OAAO,CAAC,QAAQ,CAAC;QAClD,IAAI,CAAC,sBAAsB,CAAC,IAAI,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC;QACrE,IAAI,CAAC,sBAAsB,CAAC,EAAE,GAAG,OAAO,CAAC,QAAQ,CAAC;QAElD,4LAA4L;QAC5L,6MAA6M;QAE7M,IAAI,CAAC,sBAAsB,CAAC,OAAO,EAAE,CAAC;QACtC,IAAI,CAAC,sBAAsB,CAAC,OAAO,EAAE,CAAC;QAEtC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC9B,CAAC;IAEO,8CAAW,GAAnB;QACI,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;YAChC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC,CAAC;SAC/D;IACL,CAAC;IAjFD,oBAAoB;IACN,uCAAc,GAAW,CAAC,CAAC;IAiF7C,+BAAC;CAAA;AAnFoC;;;;;;;;;;;;;;;;;;;;;;;ACJa;AACjB;AACwB;AAIzD;IAAwC,sCAAc;IAGlD,4BAAY,MAAY;QAAxB,iBAWC;QAVG,IAAI,KAAK,GAAU,IAAI,4CAAK,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;QACxD,0BAAM,CAAC,KAAK,CAAC,CAAC,SAAC;QAEf,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,UAAC,IAAgC;YACrD,IAAI,IAAI,CAAC,IAAI,YAAY,8DAAW,EAAE;gBAClC,KAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;aAC3B;QACL,CAAC,CAAC,CAAC;;IACP,CAAC;IAEM,wCAAW,GAAlB,UAAmB,OAAqB;QACpC,IAAI,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACrC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;SACzB;aAAM,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YACvB,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;SAC3B;IACL,CAAC;IACL,yBAAC;AAAD,CAAC,CAvBuC,8DAAc,GAuBrD;;;;;;;;;;AC1BD;AAAA;IAGI,wBAAY,KAAqB;QAFzB,iBAAY,GAA8B,EAAE,CAAC;QAGjD,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YACxC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;SAC/C;IACL,CAAC;IAEM,kCAAS,GAAhB;QACI,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAEM,gCAAO,GAAd,UAAe,WAAmB;QAC9B,OAAO,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;IAC1C,CAAC;IAEM,mCAAU,GAAjB,UAAkB,OAAgB;QAC9B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;IAC9C,CAAC;IAEM,iCAAQ,GAAf,UAAgB,WAAmB;QAC/B,IAAI,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE;YAChC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,QAAQ,EAAE,CAAC;YAC1C,OAAO,IAAI,CAAC;SACf;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAEM,mCAAU,GAAjB,UAAkB,WAAmB;QACjC,IAAI,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,MAAM,EAAE;YACzE,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,UAAU,EAAE,CAAC;YAC5C,OAAO,IAAI,CAAC;SACf;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAEM,wCAAe,GAAtB,UAAuB,KAAU;QAC7B,KAAK,IAAI,WAAW,IAAI,KAAK,EAAE;YAC3B,IAAI,UAAU,GAAG,KAAK,CAAC,WAAW,CAAC,EAC/B,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC;YAErD,IAAI,UAAU,IAAI,CAAC,QAAQ,EAAE;gBACzB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;aAC9B;iBACI,IAAI,CAAC,UAAU,IAAI,QAAQ,EAAE;gBAC9B,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;aAChC;SACJ;IACL,CAAC;IAEM,+BAAM,GAAb,UAAc,QAAqB;QAC/B,KAAK,IAAI,GAAG,IAAI,IAAI,CAAC,YAAY,EAAE;YAC/B,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SAC3C;IACL,CAAC;IACL,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;AC5DiD;AACE;AAEpD;IAA2B,yBAAe;IAKtC,eAAoB,mBAA2C;QAA/D,YACI,kBAAM,KAAK,CAAC,IAAI,EAAE,mBAAmB,CAAC,SAIzC;QALmB,yBAAmB,GAAnB,mBAAmB,CAAwB;QAG3D,KAAI,CAAC,OAAO,GAAG,IAAI,6DAAe,EAAE,CAAC;QACrC,KAAI,CAAC,MAAM,GAAG,IAAI,6DAAe,EAAE,CAAC;;IACxC,CAAC;IAKM,wBAAQ,GAAf;QACI,IAAI,CAAC,mBAAmB,CAAC,eAAe,EAAE,CAAC;QAC3C,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;QAC/C,IAAI,CAAC,mBAAmB,CAAC,YAAY,GAAG,KAAK,CAAC;QAE9C,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACd,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;YAC3C,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;SAC1B;QAED,iBAAM,QAAQ,WAAE,CAAC;IACrB,CAAC;IAEM,0BAAU,GAAjB;QACI,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,iBAAM,UAAU,WAAE,CAAC;YACnB,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;YAChD,IAAI,CAAC,mBAAmB,CAAC,YAAY,GAAG,IAAI,CAAC;YAC7C,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;SACzB;IACL,CAAC;IAEM,sBAAM,GAAb,UAAc,QAAqB;QAC/B,IAAI,IAAI,CAAC,MAAM,IAAI,yDAAW,CAAC,QAAQ,CAAQ,IAAI,CAAC,WAAY,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,YAAY,IAAI,KAAK,CAAC,QAAQ,CAAC,YAAY,EAAE;YACzH,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;IACL,CAAC;IAzCa,UAAI,GAAW,OAAO,CAAC;IACvB,oBAAc,GAAW,CAAC,CAAC,CAAC,wCAAwC;IACpE,cAAQ,GAAgB,yDAAW,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,wCAAwC;IAwC9G,YAAC;CAAA,CA3C0B,gEAAe,GA2CzC;AA3CiB;;;;;;;;;;;;;;;;;;;;;ACFkB;AAEpC;IAAqC,mCAAO;IAGxC,yBAAY,IAAY,EAAS,kBAA0C;QAA3E,YACI,kBAAM,IAAI,CAAC,SAGd;QAJgC,wBAAkB,GAAlB,kBAAkB,CAAwB;QAGvE,KAAI,CAAC,aAAa,GAAG,kBAAkB,CAAC,KAAK,CAAC;;IAClD,CAAC;IAEM,yCAAe,GAAtB,UAAuB,MAAc;QACjC,IAAI,CAAC,kBAAkB,CAAC,KAAK,IAAI,MAAM,CAAC;IAC5C,CAAC;IAEM,yCAAe,GAAtB,UAAuB,MAAc;QACjC,IAAI,CAAC,kBAAkB,CAAC,KAAK,IAAI,MAAM,CAAC;IAC5C,CAAC;IAEM,yCAAe,GAAtB,UAAuB,MAAc;QACjC,IAAI,CAAC,kBAAkB,CAAC,KAAK,IAAI,MAAM,CAAC;IAC5C,CAAC;IAEM,oCAAU,GAAjB;QACI,IAAI,CAAC,kBAAkB,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC;IACvD,CAAC;IACL,sBAAC;AAAD,CAAC,CAxBoC,gDAAO,GAwB3C;;;;;;;;;;ACzBD;AAAA;IAII,iBAAmB,IAAY;QAAZ,SAAI,GAAJ,IAAI,CAAQ;QAC3B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC5B,CAAC;IAEM,0BAAQ,GAAf;QACI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;IAClC,CAAC;IAEM,4BAAU,GAAjB;QACI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC5B,CAAC;IAED,yBAAyB;IAClB,wBAAM,GAAb,UAAc,QAAqB,IAAU,CAAC;IAClD,cAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACvB8C;AACZ;AACE;AAErC;IAAiC,+BAAuB;IAQpD,qBAAY,IAAiB,EAAE,EAAe;QAA9C,YACI,kBAAM,IAAI,yDAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC,aAAa,EAAE,CAAC,SAWlG;QATG,KAAI,CAAC,OAAO,GAAG,IAAI,yDAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;QACxF,KAAI,CAAC,OAAO,CAAC,SAAS,GAAG,WAAW,CAAC,aAAa,CAAC;QAEnD,gBAAgB;QAChB,IAAI,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE;YACrB,KAAI,CAAC,iBAAiB,GAAG,IAAI,yDAAW,CAAC,CAAC,8CAAG,CAAC,mBAAmB,EAAE,8CAAG,CAAC,mBAAmB,CAAC,CAAC;SAC/F;aAAM,EAAE,gBAAgB;YACrB,KAAI,CAAC,iBAAiB,GAAG,IAAI,yDAAW,CAAC,8CAAG,CAAC,mBAAmB,EAAE,CAAC,8CAAG,CAAC,mBAAmB,CAAC,CAAC;SAC/F;;IACL,CAAC;IAEM,8BAAQ,GAAf,UAAgB,IAAgC;QAC5C,IAAI,IAAI,CAAC,IAAI,YAAY,gDAAI,EAAE;YAC3B,IAAI,CAAC,mBAAmB,CAAO,IAAI,CAAC,IAAI,CAAC,CAAC;SAC7C;QAED,mBAAmB;IACvB,CAAC;IAEM,6BAAO,GAAd;QACI,iBAAM,OAAO,WAAE,CAAC;QAChB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAEO,yCAAmB,GAA3B,UAA4B,IAAU;QAClC,IAAI,gBAA6B,CAAC;QAElC,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QAC9C,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAC/C,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC;QAE1C,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;QAElC,+BAA+B;QAC/B,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACjG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACzG,CAAC;IAED,OAAO;IACC,4CAAsB,GAA9B,UAA+B,IAAU;QACrC,8BAA8B;QAC9B,IAAI,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,GAAG,gDAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,EAAE;YAC/D,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,GAAG,gDAAI,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;SAChE;aAAM,IAAI,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,GAAG,gDAAI,CAAC,IAAI,CAAC,SAAS,IAAI,8CAAG,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE;YACvF,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,GAAG,8CAAG,CAAC,IAAI,CAAC,KAAK,GAAG,gDAAI,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;SACjF;QAED,IAAI,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,GAAG,gDAAI,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,EAAE;YAChE,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,GAAG,gDAAI,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;SACjE;aAAM,IAAI,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,GAAG,gDAAI,CAAC,IAAI,CAAC,UAAU,IAAI,8CAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACzF,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,GAAG,8CAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gDAAI,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;SACnF;IACL,CAAC;IA9Da,iBAAK,GAAsB,yDAAW,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAChE,yBAAa,GAAW,CAAC,CAAC;IA8D5C,kBAAC;CAAA,CAhEgC,0DAAY,CAAC,UAAU,GAgEvD;AAhEuB;;;;;;;;;;;;;ACJuB;AACH;AACE;AAG9C;IAQI,aAAoB,MAA4B,EAAU,iBAAgD,EAAU,eAA0C,EAAU,SAAmC,EAAE,aAA4B;QAAzO,iBAiBC;QAjBmB,WAAM,GAAN,MAAM,CAAsB;QAAU,sBAAiB,GAAjB,iBAAiB,CAA+B;QAAU,oBAAe,GAAf,eAAe,CAA2B;QAAU,cAAS,GAAT,SAAS,CAA0B;QACvM,IAAI,CAAC,WAAW,GAAG,IAAI,KAAK,EAAe,CAAC;QAC5C,IAAI,CAAC,gBAAgB,GAAG,IAAI,KAAK,EAAwB,CAAC;QAE1D,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,UAAC,OAAkB;YAC9C,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC;YACnB,KAAI,CAAC,eAAe,EAAE,CAAC;YACvB,KAAI,CAAC,eAAe,EAAE,CAAC;YAEvB,IAAI,KAAI,CAAC,YAAY,EAAE;gBACnB,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;aAC1C;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,6BAAe,GAAvB;QAAA,iBAiCC;QAhCG,IAAI,MAAM,GAA4B,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EACjF,KAAK,GAAG;YACJ,kDAAkD;YAClD,IAAI,SAAS,GAAW,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,EAChE,YAAY,GAAyB,IAAI,yDAAW,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAC1H,IAA0B,CAAC;YAE/B,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAEzB,4FAA4F;YAC5F,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACnD,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;aACtC;YAED,KAAI,CAAC,gBAAgB,GAAG,IAAI,KAAK,EAAwB,CAAC;YAE1D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;gBAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;oBAChC,IAAI,GAAG,YAAY,CAAC,KAAK,EAAE,CAAC;oBAC5B,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC;oBACxE,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC;oBAC1E,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBACtB,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACpC;aACJ;QACL,CAAC,CAAC;QAEN,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAE;YACnB,KAAK,EAAE,CAAC;SACX;aAAM;YACH,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC/B;IACL,CAAC;IAEO,6BAAe,GAAvB;QACI,IAAI,OAAO,GAAuB,IAAI,KAAK,CACvC,IAAI,yDAAW,CAAC,CAAC,EAAE,CAAC,CAAC,EACrB,IAAI,yDAAW,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,EAClC,IAAI,yDAAW,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAChD,IAAI,yDAAW,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EACpC,QAAqB,CAAC;QAE1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC9C,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;SACjC;QAED,IAAI,CAAC,WAAW,GAAG,IAAI,KAAK,EAAe,CAAC;QAE5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrC,QAAQ,GAAG,IAAI,wDAAW,CAAC,IAAI,yDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,yDAAW,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnK,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YAC/C,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAClC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACnC;IACL,CAAC;IAEO,wBAAU,GAAlB;QACI,IAAI,CAAC,YAAY,GAAG,IAAI,0DAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAClE,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC;IACL,UAAC;AAAD,CAAC;;;;;;;;;;;;;AC9F8C;AACjB;AAE9B;IAYI,sBAAoB,MAA4B,EAAE,QAAkC;QAApF,iBAgBC;QAhBmB,WAAM,GAAN,MAAM,CAAsB;QAC5C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,EAAyB,CAAC;QACjD,IAAI,CAAC,SAAS,GAAG,uDAAS,CAAC,IAAI,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,uDAAS,CAAC,IAAI,CAAC;QAE/B,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,gBAAgB,EAAE;YACnD,KAAI,CAAC,OAAO,GAAG,CAAC,KAAI,CAAC,OAAO,CAAC;YAE7B,KAAI,CAAC,aAAa,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;QAEH,uGAAuG;QACvG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;YACnF,IAAI,CAAC,IAAI,EAAE,CAAC;SACf;IACL,CAAC;IAEM,kCAAW,GAAlB,UAAmB,OAAkB;QACjC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,IAAI,uDAAS,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,GAAG,YAAY,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;QAE7G,qFAAqF;QACrF,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAEM,uCAAgB,GAAvB,UAAwB,QAAqB;QACzC,IAAI,MAAM,GAAW,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,EACtG,YAAY,GAAW,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;QAEtF,OAAO,MAAM,GAAG,YAAY,CAAC,QAAQ,EAAE,CAAC;IAC5C,CAAC;IAEM,2BAAI,GAAX;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAEM,2BAAI,GAAX;QACI,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAEO,mCAAY,GAApB;QACI,IAAI,SAAS,GAAW,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAC9D,cAAc,GAAW,IAAI,CAAC,SAAS,CAAC,SAAS,EACjD,IAAU,CAAC;QAEf,IAAI,SAAS,GAAG,CAAC,KAAK,CAAC,EAAE;YACrB,MAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC,CAAC;SAC1E;QAED,gDAAgD;QAChD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;SAC5B;QAED,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,EAAyB,CAAC;QAEjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;YAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;gBAChC,IAAI,GAAG,IAAI,0CAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,EAAE,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACpK,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACvB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;aACzB;SACJ;QAED,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAEO,oCAAa,GAArB;QACI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;SACzC;IACL,CAAC;IAtFa,2BAAc,GAAsB,yDAAW,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACzE,4BAAe,GAAsB,yDAAW,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAC1E,4BAAe,GAAW,EAAE,CAAC;IAC7B,6BAAgB,GAAW,GAAG,CAAC;IAC/B,yBAAY,GAAa,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAmF9K,mBAAC;CAAA;AAxFwB;;;;;;;;;;;;;;;;;;;;;ACHsB;AAE/C;IAA0B,wBAAqB;IAK3C,cAAY,CAAS,EAAE,CAAS,EAAE,IAAY,EAAU,KAAa;QAArE,YACI,kBAAM,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,yDAAW,CAAC,KAAK,CAAC,WAAW,CAAC,SAKzD;QANuD,WAAK,GAAL,KAAK,CAAQ;QAGjE,KAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAE/B,KAAI,CAAC,gBAAgB,EAAE,CAAC;;IAC5B,CAAC;IAEO,+BAAgB,GAAxB;QACI,IAAI,cAAc,GAAW,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,EAC/D,IAAwB,CAAC;QAE7B,IAAI,GAAG,IAAI,yDAAW,CAAC,MAAM,CAAC,CAAC,cAAc,EAAE,CAAC,cAAc,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAC7F,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACpB,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,MAAM,CAAC;QACpC,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,yDAAW,CAAC,UAAU,CAAC,OAAO,CAAC;QAC9D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAEpB,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,IAAI,yDAAW,CAAC,CAAC,cAAc,EAAE,CAAC,cAAc,CAAC,CAAC;QAClE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAEpB,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,yDAAW,CAAC,cAAc,EAAE,CAAC,cAAc,CAAC,CAAC;QACjE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAEpB,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,IAAI,yDAAW,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;QAChE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;IAlCa,cAAS,GAAsB,yDAAW,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACpE,eAAU,GAAsB,yDAAW,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACrE,gBAAW,GAAW,EAAE,CAAC;IAiC3C,WAAC;CAAA,CApCyB,yDAAW,CAAC,SAAS,GAoC9C;AApCgB;;;;;;;;;;;;;;ACFiC;AACU;AACF;AACA;AAG1D;IAOI,8BAAoB,KAAW,EAAU,eAA0C;QAAnF,iBAiCC;QAjCmB,UAAK,GAAL,KAAK,CAAM;QAAU,oBAAe,GAAf,eAAe,CAA2B;QAC/E,IAAI,iBAAiB,GAA4B,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,QAAQ,CAAC,EACpF,sBAAsB,GAA4B,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAEnG,IAAI,CAAC,gBAAgB,GAAG,IAAI,wEAAmB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACtE,IAAI,CAAC,eAAe,GAAG,IAAI,sEAAkB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACpE,IAAI,CAAC,eAAe,GAAG,IAAI,sEAAkB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAEpE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACzD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACxD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAElD,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;YACzC,KAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;YAC7B,KAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;YACxC,KAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC;YACxB,KAAI,CAAC,gBAAgB,CAAC,OAAO,GAAG,KAAK,CAAC;YACtC,KAAI,CAAC,eAAe,CAAC,OAAO,GAAG,KAAK,CAAC;YACrC,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;YAE9B,KAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC;YACjC,KAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;YACrB,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QACjC,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,gDAAiB,GAAxB;QACI,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;QAC7B,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;IAChC,CAAC;IAEM,qCAAM,GAAb,UAAc,QAAqB;QAC/B,IAAI,eAAe,GAAY,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC;QAEjE,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,MAAM,EAAE;YAC7H,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;SAChC;aAAM,IAAI,eAAe,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,SAAS,CAAC,EAAE;YACzF,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;SAChC;QAED,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACvC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACtC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC1C,CAAC;IA1Da,sCAAiB,GAAgB,yDAAW,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;IA2DrF,2BAAC;CAAA;AA5DgC;;;;;;;;;;;;;;;;;;;;;;ACNiB;AACnB;AAE/B;IAAyC,uCAAoB;IAUzD,6BAAY,cAAyC;QAArD,YACI,kBAAM,CAAC,0CAAI,CAAC,IAAI,CAAC,SAAS,GAAG,mBAAmB,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,EAAE,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,mBAAmB,CAAC,UAAU,CAAC,KAAK,EAAE,mBAAmB,CAAC,UAAU,CAAC,MAAM,CAAC,SAcjM;QAZG,KAAI,CAAC,uBAAuB,GAAG,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QACtE,KAAI,CAAC,kBAAkB,GAAG,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAE5D,KAAI,CAAC,oBAAoB,GAAG,IAAI,yDAAW,CAAC,eAAe,CAAC,KAAI,CAAC,uBAAuB,EAAE,mBAAmB,CAAC,GAAG,EAAE,mBAAmB,CAAC,UAAU,EAAE,mBAAmB,CAAC,WAAW,CAAC,CAAC;QACpL,KAAI,CAAC,eAAe,GAAG,IAAI,yDAAW,CAAC,eAAe,CAAC,KAAI,CAAC,kBAAkB,EAAE,mBAAmB,CAAC,GAAG,EAAE,mBAAmB,CAAC,UAAU,EAAE,mBAAmB,CAAC,WAAW,CAAC,CAAC;QAE1K,KAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,IAAI,CAAC;YACtC,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,kBAAkB,CAAC;YACrC,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;QAEH,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;;IACzB,CAAC;IAEM,kCAAI,GAAX;QACI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,uBAAuB,CAAC;QAC1C,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC;QACjC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACxB,CAAC;IAEM,uCAAS,GAAhB;QACI,OAAO,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,oBAAoB,CAAC,SAAS,EAAE,CAAC;IACrF,CAAC;IAEM,kCAAI,GAAX;QACI,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC;QACjC,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACzB,CAAC;IAEM,oCAAM,GAAb,UAAc,QAAqB;QAC/B,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC3C,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC1C,CAAC;IA7Ca,8BAAU,GAAc,IAAI,uDAAS,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAC9C,+BAAW,GAAW,EAAE,CAAC;IACzB,uBAAG,GAAW,EAAE,CAAC;IA4CnC,0BAAC;CAAA,CA/CwC,yDAAW,CAAC,QAAQ,GA+C5D;AA/C+B;;;;;;;;;;;;;;;;;;;;;;;ACHkB;AACA;AACnB;AAE/B;IAAwC,sCAAS;IAK7C,4BAAY,cAAyC;QAArD,YACI,kBAAM,IAAI,yDAAW,CAAC,CAAC,0CAAI,CAAC,IAAI,CAAC,SAAS,GAAG,kBAAkB,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,kBAAkB,CAAC,GAAG,EAAE,kBAAkB,CAAC,UAAU,EAAE,kBAAkB,CAAC,WAAW,CAAC,SAEtN;QADG,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;;IACzB,CAAC;IAEM,iCAAI,GAAX;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,iBAAM,IAAI,YAAC,IAAI,CAAC,CAAC;IACrB,CAAC;IAEM,iCAAI,GAAX;QACI,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,iBAAM,IAAI,WAAE,CAAC;IACjB,CAAC;IAjBa,6BAAU,GAAc,IAAI,uDAAS,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IAC/C,8BAAW,GAAW,EAAE,CAAC;IACzB,sBAAG,GAAW,EAAE,CAAC;IAgBnC,yBAAC;CAAA,CAnBuC,2DAAS,GAmBhD;AAnB8B;;;;;;;;;;;;;;;;;;;;;ACJgB;AAE/C;IAA+B,6BAAoB;IAG/C,mBAAY,QAAqB,EAAE,WAAoC,EAAE,GAAW,EAAE,SAAoB,EAAE,UAAkB;QAA9H,YACI,kBAAM,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,WAAW,EAAE,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,MAAM,CAAC,SAIhF;QAFG,KAAI,CAAC,SAAS,GAAG,IAAI,yDAAW,CAAC,eAAe,CAAC,WAAW,EAAE,GAAG,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;QAC1F,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;IAC3B,CAAC;IAED,sBAAW,iCAAU;aAArB;YACI,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;QACrC,CAAC;;;OAAA;IAEM,wBAAI,GAAX,UAAY,MAAuB;QAAvB,uCAAuB;QAC/B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;IAEM,wBAAI,GAAX;QACI,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;IAEM,0BAAM,GAAb,UAAc,QAAqB;QAC/B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACpC,CAAC;IACL,gBAAC;AAAD,CAAC,CAzB8B,yDAAW,CAAC,QAAQ,GAyBlD;;;;;;;;;;;;;;;;;;;;;;;AC3BiD;AACA;AAElD;IAAwC,sCAAS;IAK7C,4BAAY,cAAyC;QAArD,YACI,kBAAM,yDAAW,CAAC,IAAI,EAAE,cAAc,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE,kBAAkB,CAAC,GAAG,EAAE,kBAAkB,CAAC,UAAU,EAAE,kBAAkB,CAAC,WAAW,CAAC,SAG3J;QAFG,KAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;QACxD,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;;IACzB,CAAC;IAEM,iCAAI,GAAX;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,iBAAM,IAAI,WAAE,CAAC;IACjB,CAAC;IAba,6BAAU,GAAc,IAAI,uDAAS,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAChD,8BAAW,GAAW,EAAE,CAAC;IACzB,sBAAG,GAAW,EAAE,CAAC;IAYnC,yBAAC;CAAA,CAfuC,2DAAS,GAehD;AAf8B;;;;;;;;;;;ACHmB;AAGlD;IAKI,0BAAY,OAAkB;QAC1B,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,qBAAqB,GAAG,OAAO,CAAC;QACrC,IAAI,CAAC,aAAa,GAAG,IAAI,8DAAgB,EAAU,CAAC;QACpD,IAAI,CAAC,kBAAkB,GAAG,IAAI,8DAAgB,EAAkB,CAAC;IACrE,CAAC;IAKM,sCAAW,GAAlB,UAAmB,OAAkB;QACjC,IAAI,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,EAAE;YAC7B,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;YAC3B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC1C;IACL,CAAC;IAEM,2CAAgB,GAAvB,UAAwB,UAAkB,EAAE,qBAA6B;QACrE,IAAI,UAAU,KAAK,IAAI,CAAC,UAAU,IAAI,qBAAqB,KAAK,IAAI,CAAC,qBAAqB,EAAE;YACxF,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;YACnD,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,UAAU,EAAE,qBAAqB,CAAC,CAAC;SACtE;IACL,CAAC;IACL,uBAAC;AAAD,CAAC;;;;;;;;;;AC/BD;AAAA;IAGI,4BAAY,QAAkC,EAAE,MAAoC;QAChF,IAAI,cAAsB,EACtB,OAAO,GAAW,CAAC,EACnB,cAAc,GAAY,IAAI,EAC9B,QAAQ,GAAW,CAAC,CAAC;QAEzB,QAAQ,CAAC,aAAa,CAAC,GAAG,EAAE;YACxB,IAAI,cAAsB,CAAC;YAE3B,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;YAE/B,IAAI,cAAc,EAAE;gBAChB,cAAc,GAAG,OAAO,GAAG,QAAQ,CAAC;gBAEpC,IAAI,cAAc,GAAG,kBAAkB,CAAC,aAAa,CAAC,YAAY,EAAE;oBAChE,QAAQ,GAAG,OAAO,CAAC;oBACnB,MAAM,CAAC,MAAM,CAAC,CAAC;iBAClB;gBAED,cAAc,GAAS,UAAU,CAAC;oBAC9B,cAAc,GAAG,KAAK,CAAC;oBACvB,MAAM,CAAC,WAAW,CAAC,CAAC;gBACxB,CAAC,EAAE,kBAAkB,CAAC,aAAa,CAAC,YAAY,CAAE,CAAC;aACtD;iBAAM;gBACH,MAAM,CAAC,WAAW,CAAC,CAAC;aACvB;QACL,CAAC,CAAC,CAAC;QACH,QAAQ,CAAC,WAAW,CAAC,GAAG,EAAE;YACtB,IAAI,gBAAwB,CAAC;YAE7B,YAAY,CAAC,cAAc,CAAC,CAAC;YAC7B,gBAAgB,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;YAExC,IAAI,CAAC,cAAc,EAAE;gBACjB,QAAQ,GAAG,gBAAgB,CAAC;gBAC5B,MAAM,CAAC,UAAU,CAAC,CAAC;aACtB;YAED,cAAc,GAAG,gBAAgB,GAAG,OAAO,GAAG,kBAAkB,CAAC,aAAa,CAAC,YAAY,CAAC;QAChG,CAAC,CAAC,CAAC;IACP,CAAC;IACL,yBAAC;AAAD,CAAC;;;;;;;;;;;;;AC9C0C;AAEU;AAGrD;IAYI,oBAAoB,WAAmB,EAAU,YAAoB,EAAU,cAA6B;QAA5G,iBAaC;QAbmB,gBAAW,GAAX,WAAW,CAAQ;QAAU,iBAAY,GAAZ,YAAY,CAAQ;QAAU,mBAAc,GAAd,cAAc,CAAe;QAXpG,mBAAc,GAAoB,CAAC,CAAC,UAAU,CAAC,CAAC,MAAM,EAAG,CAAC;QAY9D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QACtC,IAAI,CAAC,QAAQ,GAAG,IAAI,8DAAgB,EAAa,CAAC;QAClD,IAAI,CAAC,gBAAgB,GAAG,IAAI,6DAAe,EAAE,CAAC;QAE9C,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;YACb,6EAA6E;YAC7E,yEAAK,CAAC;gBACF,KAAI,CAAC,iBAAiB,EAAE,CAAC;YAC7B,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC5B,CAAC;IAKM,qCAAgB,GAAvB;QACI,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC7B,CAAC;IAEO,qCAAgB,GAAxB;QACI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACpD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAEtD,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACpD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SACzD;IACL,CAAC;IAEO,iCAAY,GAApB;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QAEtC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACzC,CAAC;IAEO,sCAAiB,GAAzB;QAAA,iBAMC;QALG,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,UAAU,CAAC;YACP,KAAI,CAAC,YAAY,EAAE,CAAC;YACpB,KAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;QACpC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,6CAA6C;IAC3D,CAAC;IAEM,mCAAc,GAArB;QACI,OAAO,IAAI,uDAAS,CAChB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAU,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,EAAG,EAAE,UAAU,CAAC,gBAAgB,CAAC,EAAE,UAAU,CAAC,gBAAgB,CAAC,EACzG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAU,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,EAAG,GAAG,IAAI,CAAC,cAAc,EAAE,UAAU,CAAC,iBAAiB,CAAC,EAAE,UAAU,CAAC,iBAAiB,CAAC,CACjI,CAAC;IACV,CAAC;IAEM,4CAAuB,GAA9B;QACI,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,gBAAgB,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IACvG,CAAC;IAnED,0EAA0E;IAC5D,2BAAgB,GAAW,KAAK,CAAC;IACjC,4BAAiB,GAAW,KAAK,CAAC;IAClC,2BAAgB,GAAW,CAAC,CAAC,CAAC;IAC9B,4BAAiB,GAAW,CAAC,CAAC,CAAC;IAC/B,6BAAkB,GAAW,GAAG,CAAC;IA+D/C,iBAAC;CAAA;AAvEkB;;;;;;;;;;;;ACLjB,2BAA4B,GAAa;IAC3C,IAAI,OAAO,GAAW,OAAO,CAAC,GAAG,CAAC,EAC9B,GAAG,GAAW,CAAC,CAAC;IAEpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACjC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO,EAAE,CAAC,CAAC,CAAC;KACxC;IAED,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC;AAEK,iBAAkB,GAAa;IACjC,IAAI,GAAG,GAAW,CAAC,CAAC;IACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACjC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;KACjB;IAED,OAAO,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;AAC5B,CAAC;AAEM,IAAI,KAAK,GAAG,CAAC;IAChB,IAAI,KAAK,GAAW,CAAC,CAAC;IACtB,OAAO,UAAU,QAAkB,EAAE,EAAU;QAC3C,YAAY,CAAC,KAAK,CAAC,CAAC;QACpB,KAAK,GAAG,UAAU,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IACrC,CAAC,CAAC;AACN,CAAC,CAAC,EAAE,CAAC;AAEC,MAAM,CAAC,EAAG,CAAC,KAAK,GAAG,UAAU,KAAa,EAAE,QAAgB;IAC9D,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChB,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;IAC1C,IAAI,CAAC,OAAO,CAAC,EAAE,eAAe,EAAE,MAAM,GAAG,KAAK,GAAG,GAAG,EAAE,EAAE,QAAQ,GAAG,CAAC,CAAC;SAChE,OAAO,CAAC,EAAE,eAAe,EAAE,OAAO,EAAE,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAC;AAC7D,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACjC8C;AACC;AACsB;AACO;AAG7E;IAA4B,0BAAuB;IAY/C,gBAAY,OAAoB,EAAE,cAAyC;QAA3E,YACI,iBAAO,SAeV;QAdG,8DAA8D;QAC9D,KAAI,CAAC,OAAO,GAAG,IAAI,4DAAa,CAAC,OAAO,CAAC,kBAAkB,CAAC,QAAQ,EAAE,MAAM,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;QAEnG,KAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QACb,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;QAE3C,KAAI,CAAC,WAAW,GAAG,IAAI,6DAAe,EAAE,CAAC;QACzC,KAAI,CAAC,kBAAkB,GAAG,IAAI,kFAAwB,CAAC,IAAI,KAAK,CAAe,KAAI,CAAC,MAAM,EAAE,KAAI,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,kBAAkB,CAAC,CAAC;QACvI,KAAI,CAAC,gBAAgB,GAAG,IAAI,yFAAsB,CAAC,KAAI,EAAE,cAAc,CAAC,CAAC;QAEzE,KAAI,CAAC,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QACvC,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAExB,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;;IAC9B,CAAC;IAIM,uBAAM,GAAb,UAAc,QAAqB;QAC/B,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACzC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAEvC,8BAA8B;QAC9B,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,MAAM,CAAC,gBAAgB,CAAC,YAAY,EAAE;YAClF,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SACvB;IACL,CAAC;IAEM,4BAAW,GAAlB,UAAmB,OAAoB;QACnC,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;QACrB,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;QAEhE,qEAAqE;QACrE,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;IACpF,CAAC;IAEM,wBAAO,GAAd,UAAe,OAAuB;QAAvB,wCAAuB;QAClC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YAClB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAEvB,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;YAElC,IAAI,CAAC,OAAO,EAAE;gBACV,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;gBACvB,IAAI,CAAC,OAAO,EAAE,CAAC;aAClB;iBAAM;gBACH,wFAAwF;gBACxF,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;aAC9B;SACJ;IACL,CAAC;IA/Da,WAAI,GAAc,IAAI,uDAAS,CAAC,EAAE,CAAC,CAAC;IACpC,uBAAgB,GAAgB,yDAAW,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IA+D7E,aAAC;CAAA,CAjE2B,0DAAY,CAAC,UAAU,GAiElD;AAjEkB;;;;;;;;;;;;;;;;;;;;;ACN4B;AAE/C;IAAmC,iCAAqB;IAGpD,uBAAY,QAAqB,EAAE,IAAe,EAAE,cAAyC;QAA7F;QACI,wGAAwG;QACxG,kBAAM,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,yDAAW,CAAC,KAAK,CAAC,WAAW,CAAC,SAIxF;QAFG,KAAI,CAAC,WAAW,GAAG,IAAI,yDAAW,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;QACrF,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;;IACpC,CAAC;IAEM,kCAAU,GAAjB;QACI,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,KAAK,CAAC;IACrC,CAAC;IACL,oBAAC;AAAD,CAAC,CAdkC,yDAAW,CAAC,SAAS,GAcvD;;;;;;;;;;;;;;;;;;;;;;AChB8C;AAG/C;IAA8C,4CAAyC;IACnF,kCAAY,QAA6B,EAAE,OAAgC;QAA3E,YACI,kBAAM,QAAQ,CAAC,SAGlB;QADG,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;;IAC9B,CAAC;IAEM,8CAAW,GAAlB,UAAmB,OAAgC;QAC/C,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;IACrC,CAAC;IAEM,yCAAM,GAAb,UAAc,QAAqB;QAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;QAEpF,iBAAM,MAAM,YAAC,QAAQ,CAAC,CAAC;IAC3B,CAAC;IAEM,0CAAO,GAAd;QACI,kCAAkC;QAClC,IAAI,CAAC,MAAM,GAAG,cAAQ,CAAC,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,cAAQ,CAAC,CAAC;IACjC,CAAC;IACL,+BAAC;AAAD,CAAC,CAvB6C,oEAAsB,CAAC,kBAAkB,GAuBtF;;;;;;;;;;;;ACzBqE;AAGtE;IAGI,gCAAoB,OAAe,EAAU,eAA0C;QAAvF,iBAcC;QAdmB,YAAO,GAAP,OAAO,CAAQ;QAAU,oBAAe,GAAf,eAAe,CAA2B;QACnF,IAAI,CAAC,mBAAmB,GAAG,IAAI,kFAAwB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAE9E,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,IAAI,CAAC;YACrC,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACvB,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QACnC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC;YAC1B,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;YAClC,KAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC;QACpC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAC5D,CAAC;IAEM,uCAAM,GAAb,UAAc,QAAqB;QAC/B,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC9C,CAAC;IACL,6BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;AC1BiD;AACC;AAEnD;IAA8C,4CAAS;IAKnD,kCAAY,cAAyC;QAArD,YACI,kBAAM,yDAAW,CAAC,IAAI,EAAE,cAAc,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EAAE,wBAAwB,CAAC,GAAG,EAAE,wBAAwB,CAAC,UAAU,EAAE,wBAAwB,CAAC,WAAW,CAAC,SAG/K;QAFG,KAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;QACxD,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;;IACzB,CAAC;IAEM,uCAAI,GAAX;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,iBAAM,IAAI,WAAE,CAAC;IACjB,CAAC;IAba,mCAAU,GAAc,IAAI,uDAAS,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAC9C,oCAAW,GAAW,EAAE,CAAC;IACzB,4BAAG,GAAW,EAAE,CAAC;IAYnC,+BAAC;CAAA,CAf6C,2DAAS,GAetD;AAfoC;;;;;;;;;;;;;;;;;;;;;;;ACHU;AACX;AAE6B;AAEjE;IAAgC,8BAAO;IAMnC,oBAAY,OAAqB,EAAE,cAAyC;QAA5E,YACI,kBAAM,OAAO,EAAE,IAAI,6EAAiB,CAAC,OAAO,CAAC,kBAAkB,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC,SAG7F;QADG,KAAI,CAAC,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC;;IACjC,CAAC;IAEM,2BAAM,GAAb,UAAc,QAAqB;QAC/B,IAAI,yDAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,YAAY,IAAI,UAAU,CAAC,SAAS,CAAC,YAAY,EAAE;YACvG,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,OAAO;SACV;QAEmB,IAAI,CAAC,OAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACvD,CAAC;IAlBa,eAAI,GAAc,IAAI,uDAAS,CAAC,EAAE,CAAC,CAAC;IACpC,oBAAS,GAAgB,yDAAW,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAkBtE,iBAAC;CAAA,CApB+B,gDAAO,GAoBtC;AApBsB;;;;;;;;;;;;;;;;;;;;;ACLwB;AAG/C;IAA6B,2BAAuB;IAMhD,iBAAY,OAAqB,EAAE,OAA8B;QAAjE,YACI,kBAAM,OAAO,CAAC,aAAa,EAAE,CAAC,SAKjC;QAHG,KAAI,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;QACrB,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;;IAC5B,CAAC;IAEM,6BAAW,GAAlB,UAAmB,OAAqB;QACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,kBAAkB,CAAC,QAAQ,CAAC;IACvF,CAAC;IAEM,wBAAM,GAAb,UAAc,QAAqB;IACnC,CAAC;IAEM,yBAAO,GAAd;QACI,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YAClB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAEvB,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;SAC1B;IACL,CAAC;IACL,cAAC;AAAD,CAAC,CA7B4B,0DAAY,CAAC,UAAU,GA6BnD;;;;;;;;;;;;;;;;;;;;;;;AC/BkD;AACR;AAE3C;IAAuC,qCAAS;IAI5C,2BAAY,QAAqB,EAAE,cAAyC;QAA5E,YACI,kBAAM,QAAQ,EAAE,cAAc,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,iBAAiB,CAAC,GAAG,EAAE,sDAAU,CAAC,IAAI,EAAE,iBAAiB,CAAC,WAAW,CAAC,SAGhI;QADG,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;IACpB,CAAC;IAPa,6BAAW,GAAW,EAAE,CAAC;IACzB,qBAAG,GAAW,EAAE,CAAC;IAOnC,wBAAC;CAAA,CATsC,2DAAS,GAS/C;AAT6B;;;;;;;;;ACA9B;AAAA;IAYI,4BAAoB,SAAiB,EAAU,SAAmC,EAAU,cAA6B;QAAzH,iBAOC;QAPmB,cAAS,GAAT,SAAS,CAAQ;QAAU,cAAS,GAAT,SAAS,CAA0B;QAAU,mBAAc,GAAd,cAAc,CAAe;QATjH,uBAAkB,GAAW,CAAC,CAAC,wCAAwC,CAAC,CAAC;QACzE,iBAAY,GAAW,CAAC,CAAC,cAAc,CAAC,CAAC;QACzC,iBAAY,GAAW,CAAC,CAAC,cAAc,CAAC,CAAC;QACzC,eAAU,GAAW,CAAC,CAAC,YAAY,CAAC,CAAC;QACrC,eAAU,GAAW,CAAC,CAAC,YAAY,CAAC,CAAC;QACrC,qBAAgB,GAAa,EAAE,CAAC;QAEjC,kBAAa,GAAY,KAAK,CAAC;QAGlC,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACjC,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAE9B,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAC,eAAwC;YAClF,KAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,sDAAyB,GAAjC;QACI,IAAI,OAAO,GAAW,CAAC,CAAC,mBAAmB,CAAC,CAAC;QAE7C,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAEpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,kBAAkB,CAAC,gBAAgB,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC9D,IAAI,OAAO,GAAW,OAAO,CAAC,KAAK,EAAE,CAAC;YACtC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACpC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SACrC;IACL,CAAC;IAEO,8CAAiB,GAAzB,UAA0B,IAA6B;QACnD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClC,IAAI,GAAG,GAAW,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;YAE9C,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,SAAS,EAAE;gBAC/B,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC5B,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,4BAA4B,CAAC;iBAChD;gBACD,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;aAC7B;iBACI;gBACD,GAAG,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;aAChC;YAED,qDAAqD;YACrD,IAAI,QAAQ,GAAW,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC5C,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC5B,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,iCAAiC,CAAC;aACrD;YAED,IAAI,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE;gBACxC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;aACvC;YAED,yGAAyG;YACzG,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YACrB,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAElB,KAAK,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE;gBACrB,aAAa;gBACb,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aAC5C;SACJ;IACL,CAAC;IAED,mBAAmB;IACX,mDAAsB,GAA9B;QAAA,iBAQC;QAPG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,GAAG,EAAE;YAC/B,KAAI,CAAC,iBAAiB,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,CAAC,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC;YACtB,KAAI,CAAC,iBAAiB,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,8CAAiB,GAAzB;QACI,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACrB,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;aAAM;YACH,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;IACL,CAAC;IAEO,4CAAe,GAAvB;QACI,kGAAkG;QAClG,yCAAyC;QACzC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;YACvC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;YAChD,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAC9B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAC5B,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,6BAA6B,CAAC,CAAC;SACxE;IACL,CAAC;IAEO,4CAAe,GAAvB;QAAA,iBASC;QARG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;YACvC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE;gBAC3B,KAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;YACnD,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAC7B,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,yBAAyB,CAAC,CAAC;SACpE;IACL,CAAC;IACL,yBAAC;AAAD,CAAC;;;;;;;;;;AC9GD;AAAA;IAaI;QATQ,aAAQ,GAAW,CAAC,CAAC,wCAAwC,CAAC,CAAC;QAC/D,iBAAY,GAAW,CAAC,CAAC,cAAc,CAAC,CAAC;QACzC,kBAAa,GAAW,CAAC,CAAC,wCAAwC,CAAC,CAAC;QACpE,mBAAc,GAAW,CAAC,CAAC,0CAA0C,CAAC,CAAC;QACvE,uBAAkB,GAAW,CAAC,CAAC,oBAAoB,CAAC,CAAC;QACrD,kBAAa,GAAW,CAAC,CAAC,wCAAwC,CAAC,CAAC;QACpE,kBAAa,GAAW,CAAC,CAAC,eAAe,CAAC,CAAC;QAC3C,kBAAa,GAAW,CAAC,CAAC,eAAe,CAAC,CAAC;QAG/C,IAAI,CAAC,aAAa,GAAG;YACjB,CAAC,8BAA8B,EAAE,wBAAwB,CAAC;YAC1D,CAAC,qBAAqB,EAAE,OAAO,CAAC;YAChC,CAAC,kBAAkB,EAAE,EAAE,CAAC;YACxB,CAAC,KAAK,EAAE,SAAS,CAAC;YAClB,CAAC,cAAc,EAAE,sBAAsB,CAAC;YACxC,CAAC,0BAA0B,EAAE,QAAQ,CAAC;YACtC,CAAC,mBAAmB,EAAE,EAAE,CAAC;YACzB,CAAC,SAAS,EAAE,WAAW,CAAC;YACxB,CAAC,+BAA+B,EAAE,EAAE,CAAC;YACrC,CAAC,mBAAmB,EAAE,EAAE,CAAC;YACzB,CAAC,aAAa,EAAE,sBAAsB,CAAC;YACvC,CAAC,gBAAgB,EAAE,iBAAiB,CAAC;YACrC,CAAC,aAAa,EAAE,oCAAoC,CAAC;YACrD,CAAC,aAAa,EAAE,qBAAqB,CAAC;YACtC,CAAC,IAAI,EAAE,EAAE,CAAC;SACb,CAAC;IACN,CAAC;IAEM,iCAAW,GAAlB,UAAmB,OAAqB;QACpC,IAAI,OAAO,CAAC,YAAY,EAAE;YACtB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,EAAE,OAAO,CAAC,aAAa,CAAC,CAAC;SAC7D;IACL,CAAC;IAEO,6BAAO,GAAf,UAAgB,EAAU,EAAE,OAAe;QAA3C,iBA8BC;QA7BG,IAAI,KAAK,GAAW,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAE1E,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAE/D,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC5B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QAEzC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAC3C,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAEhD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAEtC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,WAAW,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QAE9E,IAAI,QAAQ,GAAG,WAAW,CAAC;YACvB,IAAI,IAAI,GAAW,QAAQ,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAChE,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAEjD,IAAI,IAAI,KAAK,CAAC,EAAE;gBACZ,aAAa,CAAC,QAAQ,CAAC,CAAC;gBACxB,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE;oBACxB,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;oBAC1C,KAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;oBAC/C,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;gBAC7C,CAAC,CAAC,CAAC;aACN;QACL,CAAC,EAAE,IAAI,CAAC,CAAC;IACb,CAAC;IACL,kBAAC;AAAD,CAAC;;;;;;;;;;;;ACzE0E;AAG3E;IAUI,yBAAY,aAA4B;QAAxC,iBAYC;QAXG,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,IAAI,KAAK,EAAU,CAAC;QACrC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QAErB,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC;YAC7B,IAAI,KAAI,CAAC,YAAY,EAAE;gBACnB,KAAI,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,KAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,CAAC;gBACjE,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;aAC5B;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,wCAAc,GAArB;QACI,IAAI,EAAE,IAAI,CAAC,SAAS,GAAG,eAAe,CAAC,kBAAkB,KAAK,CAAC,EAAE;YAC7D,IAAI,CAAC,YAAY,GAAG,IAAI,IAAI,EAAE,CAAC;YAE/B,OAAO,IAAI,CAAC;SACf;QAED,OAAO,KAAK,CAAC;IACjB,CAAC;IAEO,iCAAO,GAAf,UAAgB,WAAmB;QAC/B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,eAAe,CAAC,gBAAgB,EAAE;YAC5D,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;SAC1B;QAED,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAEjC,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAEO,uCAAa,GAArB;QACI,IAAI,cAAc,GAAW,CAAC,EAC1B,UAAU,GAAW,CAAC,EACtB,iBAAiB,GAAW,qFAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,EAC7D,WAAW,GAAW,2EAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAElD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5C,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,IAAI,iBAAiB,EAAE;gBAChE,cAAc,EAAE,CAAC;gBACjB,UAAU,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;aACnC;SACJ;QAED,IAAI,cAAc,GAAG,CAAC,EAAE;YACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,cAAc,CAAC,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC;SAC5E;IACL,CAAC;IA3Da,kCAAkB,GAAW,CAAC,CAAC;IAC/B,gCAAgB,GAAW,GAAG,CAAC;IA2DjD,sBAAC;CAAA;AA7D2B;;;;;;;;;;;ACDE;AAG9B;IAKI,qBAAoB,SAAsC,EAAU,MAA4B,EAAU,iBAAgD,EAAU,eAA0C;QAA1L,cAAS,GAAT,SAAS,CAA6B;QAAU,WAAM,GAAN,MAAM,CAAsB;QAAU,sBAAiB,GAAjB,iBAAiB,CAA+B;QAAU,oBAAe,GAAf,eAAe,CAA2B;QAC1M,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACrB,CAAC;IAEM,gCAAU,GAAjB,UAAkB,eAAgC;QAC9C,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;IAC3C,CAAC;IAEM,oCAAc,GAArB,UAAsB,QAAmB;QACrC,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,QAAQ,CAAC;IACnC,CAAC;IAEM,6BAAO,GAAd,UAAe,EAAU;QACrB,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IAC3B,CAAC;IAEM,gCAAU,GAAjB,UAAkB,MAAc;QAC5B,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;IAEM,iCAAW,GAAlB,UAAmB,OAAqB;QAAxC,iBAiCC;QAhCG,IAAI,WAAW,GAAqB,OAAO,CAAC,KAAK,EAC7C,IAAe,CAAC;QAEpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,IAAI,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;YAEtB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;gBACvB,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE;oBAC3E,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;iBAC9B;qBAAM;oBACH,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;iBAC/B;gBAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,0CAAI,CAAC,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;gBAC5D,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;gBACrD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;gBAE9C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,UAAC,IAAI;oBACtC,OAAO,KAAI,CAAC,MAAM,CAAQ,IAAK,CAAC,EAAE,CAAC,CAAC;gBACxC,CAAC,CAAC,CAAC;aACN;iBAAM;gBACH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;aAC1C;YAED,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;aAC5D;SACJ;QAED,IAAI,IAAI,CAAC,eAAe,EAAE;YACtB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;SAC7C;IACL,CAAC;IAEM,4BAAM,GAAb,UAAc,QAAqB;QAC/B,yBAAyB;QACzB,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE;YACxB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SACpC;QAED,IAAI,IAAI,CAAC,eAAe,EAAE;YACtB,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SACzC;QAED,4DAA4D;QAC5D,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE;YACxB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;gBAC7D,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;aAC7B;SACJ;IACL,CAAC;IACL,kBAAC;AAAD,CAAC;;;;;;;;;;;;ACjFiC;AAGlC;IAGI,uBAAoB,SAAsC,EAAU,MAA4B,EAAU,eAA0C;QAAhI,cAAS,GAAT,SAAS,CAA6B;QAAU,WAAM,GAAN,MAAM,CAAsB;QAAU,oBAAe,GAAf,eAAe,CAA2B;QAChJ,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACvB,CAAC;IAEM,sCAAc,GAArB,UAAsB,QAAmB;QACrC,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,QAAQ,CAAC;IACnC,CAAC;IAEM,mCAAW,GAAlB,UAAmB,OAAqB;QAAxC,iBA0BC;QAzBG,IAAI,aAAa,GAAuB,OAAO,CAAC,OAAO,EACnD,MAAmB,CAAC;QAExB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC3C,MAAM,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;YAE1B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE;gBAC3B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,IAAI,8CAAM,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;gBACpE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;gBAElD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,UAAC,MAAW;oBACjD,OAAO,KAAI,CAAC,QAAQ,CAAU,MAAO,CAAC,EAAE,CAAC,CAAC;gBAC9C,CAAC,CAAC,CAAC;aACN;iBAAM;gBACH,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;aAChD;YAED,IAAI,MAAM,CAAC,QAAQ,EAAE;gBACjB,IAAI,MAAM,CAAC,QAAQ,EAAE;oBACjB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,kBAAkB,CAAC,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC;iBAC5E;gBAED,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;aACrD;SACJ;IACL,CAAC;IAEM,8BAAM,GAAb,UAAc,QAAqB;QAC/B,yBAAyB;QACzB,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,QAAQ,EAAE;YAC1B,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SACtC;QAED,yBAAyB;QACzB,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,QAAQ,EAAE;YAC1B,8DAA8D;YAC9D,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;gBAC/D,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACpC;SACJ;IACL,CAAC;IACL,oBAAC;AAAD,CAAC;;;;;;;;;;;;ACvDyC;AAG1C;IAGI,wBAAoB,SAAsC,EAAU,MAA4B,EAAU,eAA0C;QAAhI,cAAS,GAAT,SAAS,CAA6B;QAAU,WAAM,GAAN,MAAM,CAAsB;QAAU,oBAAe,GAAf,eAAe,CAA2B;QAChJ,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACxB,CAAC;IAEM,oCAAW,GAAlB,UAAmB,OAAqB;QAAxC,iBAyBC;QAxBG,IAAI,cAAc,GAAwB,OAAO,CAAC,QAAQ,EACtD,OAAqB,CAAC;QAE1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5C,OAAO,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;YAE5B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;gBAC7B,IAAI,OAAO,CAAC,IAAI,KAAK,CAAC,EAAE;oBACpB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,IAAI,sDAAU,CAAC,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;iBAC9E;gBAED,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;gBAEpD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,UAAC,OAAO;oBAC/C,OAAO,KAAI,CAAC,SAAS,CAAW,OAAQ,CAAC,EAAE,CAAC,CAAC;gBACjD,CAAC,CAAC,CAAC;aACN;iBAAM;gBACH,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;aACnD;YAED,IAAI,OAAO,CAAC,QAAQ,EAAE;gBAClB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;aACxC;SACJ;IACL,CAAC;IAEM,+BAAM,GAAb,UAAc,QAAqB;QAC/B,yBAAyB;QACzB,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,SAAS,EAAE;YAC3B,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SACvC;QAED,yBAAyB;QACzB,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,SAAS,EAAE;YAC3B,+DAA+D;YAC/D,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;gBAChE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;aAChC;SACJ;IACL,CAAC;IACL,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;ACpD2C;AACE;AACJ;AACJ;AACM;AACY;AAKxD;IAWI,sBAAY,QAAgB,EAAE,IAAU,EAAE,aAA4B;QAClE,aAAa;QACb,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,MAAM,CAAC;QAExE,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,IAAI,CAAC,YAAY,GAAG,IAAI,wDAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YACxE,IAAI,CAAC,aAAa,GAAG,IAAI,0DAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAClD,IAAI,CAAC,WAAW,GAAG,IAAI,sDAAU,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;YAC5D,IAAI,CAAC,SAAS,GAAG,IAAI,kDAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAClD,IAAI,CAAC,YAAY,GAAG,IAAI,wDAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACxD,IAAI,CAAC,kBAAkB,GAAG,IAAI,oEAAiB,CAAC,IAAI,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;SACtF;IACL,CAAC;IAEM,kCAAW,GAAlB,UAAmB,OAAqB;QACpC,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,EAAE;YAC3D,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YACvC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SAChD;IACL,CAAC;IAEM,6BAAM,GAAb,UAAc,QAAqB;QAC/B,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,YAAY,EAAE;YACvH,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAClC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAChC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YACnC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YACpC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SACtC;IACL,CAAC;IAEM,2BAAI,GAAX,UAAY,OAAiC;QACzC,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,SAAS,EAAE;YACnC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAChC;IACL,CAAC;IAEO,iCAAU,GAAlB;QACI,IAAI,IAAI,GAAG,EAAE,EACT,IAAI,EACJ,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAE1F,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAE5B,aAAa;YACb,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACnB,aAAa;YACb,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;SAC3B;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IA9Da,uBAAU,GAAW,OAAO,CAAC;IA+D/C,mBAAC;CAAA;AAhEwB;;;;;;;;;;;ACVY;AAGrC;IAGI,qBAAoB,SAAiB,EAAU,MAA4B,EAAU,QAAmC;QAApG,cAAS,GAAT,SAAS,CAAQ;QAAU,WAAM,GAAN,MAAM,CAAsB;QAAU,aAAQ,GAAR,QAAQ,CAA2B;IACxH,CAAC;IAEM,iCAAW,GAAlB,UAAmB,OAAyB;QACxC,IAAI,WAAsB,CAAC;QAE3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrC,WAAW,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YAEzB,IAAI,WAAW,CAAC,EAAE,KAAK,IAAI,CAAC,SAAS,EAAE;gBACnC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;oBACd,IAAI,CAAC,MAAM,GAAG,IAAI,gDAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACnD,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,cAAc,GAAG,KAAK,CAAC;oBACtD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;oBACtC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;iBACxC;qBAAM;oBACH,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;iBACxC;aACJ;SACJ;IACL,CAAC;IAEM,4BAAM,GAAb,UAAc,QAAqB;QAC/B,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SAChC;IACL,CAAC;IACL,kBAAC;AAAD,CAAC;;;;;;;;;;;;AClC8C;AAE/C;IAaI,sBAAoB,MAA4B;QAA5B,WAAM,GAAN,MAAM,CAAsB;QAC5C,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC;QACrC,IAAI,CAAC,OAAO,GAAG,IAAI,yDAAW,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,CAAC,sBAAsB,CAAC,CAAC;QAC1F,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,yDAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAEhD,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAClC,CAAC;IAEM,4CAAqB,GAA5B,UAA6B,KAAa;QACtC,IAAI,UAAU,GAAG,IAAI,uDAAS,CAAC,iBAAiB,CAAC,yDAAW,CAAC,IAAI,EAAE,YAAY,CAAC,aAAa,CAAC,EAC1F,YAAY,GAAuB,IAAI,yDAAW,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,GAAG,IAAI,EAAE,YAAY,CAAC,gBAAgB,CAAC,EACxK,YAAgC,EAChC,iBAAiB,GAAc,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,EACxD,cAAyB,EACzB,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;QAEjD,YAAY,CAAC,YAAY,CAAC,UAAU,GAAG,MAAM,CAAC;QAC9C,YAAY,CAAC,KAAK,GAAG,MAAM,CAAC;QAC5B,YAAY,CAAC,YAAY,CAAC,QAAQ,GAAG,YAAY,CAAC,eAAe,GAAG,IAAI,CAAC;QACzE,YAAY,CAAC,YAAY,CAAC,UAAU,GAAG,YAAY,CAAC,SAAS,CAAC;QAE9D,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;QAE9B,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAE5E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7C,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;SACtF;QAED,YAAY,CAAC,QAAQ,GAAG,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;QAEvF,YAAY,GAAG,IAAI,yDAAW,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,GAAG,YAAY,CAAC,aAAa,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAC9J,YAAY,CAAC,KAAK,GAAG,MAAM,CAAC;QAC5B,YAAY,CAAC,YAAY,CAAC,QAAQ,GAAG,YAAY,CAAC,eAAe,GAAG,IAAI,CAAC;QACzE,YAAY,CAAC,YAAY,CAAC,UAAU,GAAG,YAAY,CAAC,SAAS,CAAC;QAE9D,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QACpC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QAEpC,OAAO,YAAY,CAAC;IACxB,CAAC;IAEM,qCAAc,GAArB,UAAsB,OAA8B;QAChD,IAAI,MAAM,GAAgC,OAAO,CAAC,aAAa,EAAE,CAAC;QAElE,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QAC5D,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,YAAY,CAAC,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QAElE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAE1B,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;QAE7E,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAEM,6BAAM,GAAb,UAAc,QAAqB;QAC/B,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC5B,CAAC;IAEO,uCAAgB,GAAxB;QACI,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;QAE3C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC;QACnE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC;IACxE,CAAC;IAEO,mCAAY,GAApB,UAAqB,MAAmC;QACpD,IAAI,eAAe,GAAW,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,OAAO,GAAG,CAAC,CAAC;QAE3E,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,GAAG,eAAe,CAAC;QAE1C,IAAI,CAAC,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,WAAW,CAAC;QAE/D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,OAAO,GAAG,YAAY,CAAC,WAAW,CAAC;IAC/F,CAAC;IAzFa,wBAAW,GAAW,CAAC,CAAC;IACxB,oBAAO,GAAW,EAAE,CAAC;IACrB,0BAAa,GAAc,IAAI,uDAAS,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IAClD,6BAAgB,GAAsB,yDAAW,CAAC,KAAK,CAAC,KAAK,CAAC;IAC9D,mCAAsB,GAAsB,yDAAW,CAAC,KAAK,CAAC,IAAI,CAAC;IACnE,4BAAe,GAAW,EAAE,CAAC;IAC7B,4BAAe,GAAW,EAAE,CAAC;IAC7B,sBAAS,GAA2B,yDAAW,CAAC,UAAU,CAAC,OAAO,CAAC;IAmFrF,mBAAC;CAAA;AA3FwB;;;;;;;;;;;;;;;;;;;;;ACDmB;AAG5C;IAAgC,8BAAW;IAGvC,oBAAY,QAAsB,EAAE,IAAa;eAC7C,kBAAM,UAAU,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;IACpE,CAAC;IAEM,2BAAM,GAAb,UAAc,QAAqB;QAC/B,IAAI,CAAC,QAAQ,EAAE,CAAC;QAEhB,iBAAM,MAAM,YAAC,QAAQ,CAAC,CAAC;IAC3B,CAAC;IAVa,gBAAK,GAAW,aAAa;IAW/C,iBAAC;CAAA,CAZ+B,wDAAW,GAY1C;AAZsB;;;;;;;;;;;;ACJwB;AAEL;AAE1C;IAQI,qBAAY,KAAa,EAAE,QAAsB,EAAU,WAAmB;QAAnB,gBAAW,GAAX,WAAW,CAAQ;QAC1E,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;QAEvD,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,WAAW,CAAC,UAAU,CAAC;QAC9C,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC;QAE5B,IAAI,CAAC,iBAAiB,GAAG,IAAI,IAAI,EAAE,CAAC;QACpC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IACpB,CAAC;IAEM,8BAAQ,GAAf;QACI,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAEM,4BAAM,GAAb,UAAc,QAAqB;QAC/B,IAAI,yDAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,IAAI,sDAAU,CAAC,eAAe,CAAC,OAAO,EAAE;YAC1G,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC;YAE7H,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAChB,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,GAAG,CAAC;SACzC;IACL,CAAC;IA5Ba,sBAAU,GAAsB,yDAAW,CAAC,KAAK,CAAC,KAAK,CAAC;IACxD,2BAAe,GAAgB,yDAAW,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IA4B5E,kBAAC;CAAA;AA9BuB;;;;;;;;;;;;;;;;;;;;;ACJoB;AAG5C;IAA8B,4BAAW;IAGrC,kBAAY,QAAsB;eAC9B,kBAAM,QAAQ,CAAC,KAAK,EAAE,QAAQ,EAAE,EAAE,CAAC;IACvC,CAAC;IAEM,uBAAI,GAAX,UAAY,OAAiC;QACzC,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;IARa,cAAK,GAAW,WAAW;IAS7C,eAAC;CAAA,CAV6B,wDAAW,GAUxC;AAVoB;;;;;;;;;;;;;;;;;;;;;;ACHU;AACa;AAK5C;IAAiC,+BAAW;IAGxC,qBAAY,QAAsB;eAC9B,kBAAM,WAAW,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,GAAwB,0CAAI,CAAC,iBAAiB,CAAC,UAAW,CAAC,aAAa,CAAC;IACpH,CAAC;IAEM,iCAAW,GAAlB,UAAmB,OAAqB;QACpC,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;IARa,iBAAK,GAAW,cAAc;IAShD,kBAAC;CAAA,CAVgC,wDAAW,GAU3C;AAVuB;;;;;;;;;;;ACNuB;AAK/C,IAAK,eAKJ;AALD,WAAK,eAAe;IAChB,iEAAc;IACd,+DAAa;IACb,qEAAgB;IAChB,qEAAgB;AACpB,CAAC,EALI,eAAe,KAAf,eAAe,QAKnB;AAED;IAYI,2BAAY,QAAsB,EAAE,aAA4B;QAC5D,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QACzE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,UAAU,GAAG,MAAM,CAAC;QAEhD,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,UAAU,CAAC;QAE5C,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAEO,sCAAU,GAAlB;QACI,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QAC7C,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;IAC9C,CAAC;IAEO,0CAAc,GAAtB;QACI,OAAO,yDAAW,CAAC,KAAK,CAAC,UAAU,CAAC;IACxC,CAAC;IAEO,wCAAY,GAApB;QACI,OAAO,eAAe,CAAO,IAAI,CAAC,WAAY,CAAC,KAAK,CAAC;IACzD,CAAC;IA/Ba,uBAAK,GAAW,kBAAkB,CAAC;IAgCrD,wBAAC;CAAA;AAjC6B;;;;;;;;;;;;;;;;;;;;ACVsB;AACJ;AACQ;AACJ;AACM;AACA;AACd;AACgB;AACM;AACpC;AAO9B;IAmBI,oBAAY,cAAqC,EAAU,YAAyB,EAAE,YAA0B,EAAE,QAAkC,EAAE,aAA4B;QAAvH,iBAAY,GAAZ,YAAY,CAAa;QAlB5E,aAAQ,GAAW,CAAC,CAAC,UAAU,CAAC,CAAC;QACjC,uBAAkB,GAAW,CAAC,CAAC,oBAAoB,CAAC,CAAC;QAErD,mBAAc,GAAW,CAAC,CAAC,2BAA2B,CAAC,CAAC;QACxD,eAAU,GAAW,CAAC,CAAC,kBAAkB,CAAC,CAAC;QAC3C,YAAO,GAAW,CAAC,CAAC,SAAS,CAAC,CAAC;QAcnC,IAAI,CAAC,SAAS,GAAG,cAAc,CAAC,MAAM,CAAC;QACvC,IAAI,CAAC,cAAc,GAAY,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAG,CAAC;QACvD,IAAI,CAAC,gBAAgB,GAAG,IAAI,gEAAe,EAAE,CAAC;QAC9C,IAAI,CAAC,kBAAkB,GAAG,IAAI,4DAAa,EAAE,CAAC;QAC9C,IAAI,CAAC,sBAAsB,GAAG,IAAI,oEAAiB,EAAE,CAAC;QACtD,IAAI,CAAC,gBAAgB,GAAG,IAAI,gEAAe,EAAE,CAAC;QAC9C,IAAI,CAAC,mBAAmB,GAAG,IAAI,sEAAkB,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;QACnG,IAAI,CAAC,mBAAmB,GAAG,IAAI,sEAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC;QAC3F,IAAI,CAAC,YAAY,GAAG,IAAI,wDAAW,EAAE,CAAC;QACtC,IAAI,CAAC,oBAAoB,GAAG,IAAI,wEAAmB,CAAC,aAAa,CAAC,CAAC;QACnE,IAAI,CAAC,uBAAuB,GAAG,IAAI,8EAAsB,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;QAC1F,IAAI,CAAC,KAAK,GAAG,IAAI,0CAAI,CAAC,cAAc,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;QAErE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;YACf,gBAAgB;YAChB,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC/B,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;gBAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1C,QAAQ,CAAC,MAAM,GAAG,CAAC,GAAG,yCAAyC,CAAC;aACnE;YAED,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,mCAAc,GAArB,UAAsB,WAAsB;QACxC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;QAC9C,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QACjD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC;QAC7C,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,CAAC;QACzC,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;QAEpC,4BAA4B;QAC5B,IAAI,WAAW,CAAC,KAAK,IAAI,IAAI,EAAE;YAC3B,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;SAC9C;aACI;YACD,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;SAC/C;QAED,4BAA4B;QAC5B,IAAI,WAAW,CAAC,KAAK,IAAI,IAAI,EAAE;YAC3B,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;SAC1C;aACI;YACD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;SAC3C;IACL,CAAC;IAEM,sCAAiB,GAAxB,UAAyB,WAAsB;QAC3C,iCAAiC;QACjC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,GAAW,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAG,GAAG,CAAC,CAAC,CAAC;IACjH,CAAC;IAEM,gCAAW,GAAlB,UAAmB,OAAqB;QACpC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC3C,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC9C,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACvC,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IACnD,CAAC;IAEM,2BAAM,GAAb,UAAc,QAAqB;QAC/B,IAAI,IAAI,GAAS,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAE3D,IAAI,IAAI,EAAE;YACN,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACnC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACrC,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACzC,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACtC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACtC;IACL,CAAC;IACL,iBAAC;AAAD,CAAC;;;;;;;;;;;;;AC/GoC;AAC4B;AAEjE;IASI;QAJQ,iBAAY,GAAW,CAAC,CAAC,QAAQ,CAAC,CAAC;QACnC,kBAAa,GAAW,CAAC,CAAC,kBAAkB,CAAC,CAAC;QAC9C,kBAAa,GAAW,CAAC,CAAC,kBAAkB,CAAC,CAAC;QAGlD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;IACzB,CAAC;IAEM,gCAAM,GAAb,UAAc,IAAU;QACpB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAChI,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,4EAAkB,CAAC,UAAU,EAC7E,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,gDAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;QAEtG,IAAI,IAAI,CAAC,UAAU,KAAK,KAAK,EAAE;YAC3B,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;YAClD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;SAC3B;QAED,IAAI,IAAI,CAAC,kBAAkB,KAAK,aAAa,EAAE;YAC3C,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,aAAa,CAAC,QAAQ,EAAE,CAAC;YAC3D,IAAI,CAAC,kBAAkB,GAAG,aAAa,CAAC;SAC3C;QAED,IAAI,IAAI,CAAC,WAAW,KAAK,eAAe,EAAE;YACtC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,eAAe,CAAC,QAAQ,EAAE,CAAC;YAC7D,IAAI,CAAC,WAAW,GAAG,eAAe,CAAC;SACtC;IACL,CAAC;IACL,sBAAC;AAAD,CAAC;;;;;;;;;;;;ACrCgE;AAGjE;IAcI;QAXQ,eAAU,GAAW,4EAAkB,CAAC,UAAU,CAAC;QAEnD,sBAAiB,GAAW,CAAC,CAAC,SAAS,CAAC,CAAC;QACzC,wBAAmB,GAAW,CAAC,CAAC,cAAc,CAAC,CAAC;QAChD,yBAAoB,GAAW,CAAC,CAAC,mBAAmB,CAAC,CAAC;QACtD,kBAAa,GAAW,CAAC,CAAC,eAAe,CAAC,CAAC;QAC3C,gBAAW,GAAW,CAAC,CAAC,aAAa,CAAC,CAAC;QACvC,iBAAY,GAAW,CAAC,CAAC,cAAc,CAAC,CAAC;QAEzC,uBAAkB,GAAY,IAAI,CAAC;QAGvC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,eAAe,GAAG,EAAE,GAAY,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAG,CAAC;IAC3E,CAAC;IAEM,sCAAc,GAArB;QACI,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;IAC1B,CAAC;IAEM,8BAAM,GAAb,UAAc,IAAU;QACpB,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,IAAI,CAAC,WAAW,EAAE;YACjD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC;YAChD,yBAAyB;YACzB,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE;gBAC/C,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,IAAI,CAAC,EAAE;oBACjC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;oBAC/D,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;iBACnC;aACJ;iBACI;gBACD,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;oBAC1B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;oBAC/B,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;iBACjE;aACJ;YAED,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;YAC9C,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,GAAG,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC;YACzE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAClC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEpC,IAAI,cAAc,GAAW,IAAI,CAAC,cAAc,CAAC,aAAa,EAC1D,WAAW,GAAoB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAG,EAC1D,SAAS,GAAW,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,GAAG,cAAc,CAAC,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,EAAE,WAAW,GAAG,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,EACxI,QAA2B,CAAC;YAEhC,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;YAEtD,IAAI,cAAc,IAAI,4EAAkB,CAAC,aAAa,EAAE;gBACpD,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACzC,QAAQ,GAAG,4EAAkB,CAAC,SAAS,CAAC;aAC3C;iBACI,IAAI,cAAc,IAAI,4EAAkB,CAAC,cAAc,EAAE;gBAC1D,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBAC1C,QAAQ,GAAG,4EAAkB,CAAC,UAAU,CAAC;aAC5C;iBACI;gBACD,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBAC1C,QAAQ,GAAG,4EAAkB,CAAC,UAAU,CAAC;aAC5C;YAED,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,aAAa,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;YAClG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,cAAc,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,eAAe,EAAE,QAAQ,EAAE,EAAE,aAAa,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;SAClJ;IACL,CAAC;IAnEa,2BAAa,GAAW,GAAG,CAAC;IAoE9C,oBAAC;CAAA;AArEyB;;;;;;;;;ACD1B;AAAA;IAaI;QAPQ,uBAAkB,GAAW,CAAC,CAAC,aAAa,CAAC,CAAC;QAC9C,mBAAc,GAAW,CAAC,CAAC,gBAAgB,CAAC,CAAC;QAC7C,kBAAa,GAAW,CAAC,CAAC,QAAQ,CAAC,CAAC;QACpC,uBAAkB,GAAW,CAAC,CAAC,oBAAoB,CAAC,CAAC;QACrD,8BAAyB,GAAW,CAAC,CAAC,4BAA4B,CAAC,CAAC;QACpE,iBAAY,GAAW,CAAC,CAAC,cAAc,CAAC,CAAC;QAG7C,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;QACrB,IAAI,CAAC,0BAA0B,GAAG,CAAC,CAAC;IACxC,CAAC;IAEM,kCAAM,GAAb,UAAc,IAAU;QACpB,IAAI,IAAI,GAAsB,IAAI,CAAC;QAEnC,IAAI,IAAI,CAAC,YAAY,CAAC,UAAU,KAAK,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,KAAK,IAAI,CAAC,UAAU,EAAE;YACtG,IAAI,kBAAkB,EAAE,oBAAoB,CAAC;YAE7C,yEAAyE;YACzE,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,KAAK,IAAI,CAAC,UAAU,EAAE;gBAC7C,kBAAkB,GAAG,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;gBAE3G,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,sEAAsE;gBAC9G,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;gBAC1C,IAAI,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;gBACjF,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,EAAE,IAAI,EAAE;oBACvF,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;gBAC7C,CAAC,CAAC,CAAC;aACN;iBACI;gBACD,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC;aAC5E;YAED,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC;YAEpH,oBAAoB,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,GAAG,GAAG,CAAC;YAEtG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACnC,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,iBAAiB,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,iBAAiB,CAAC,aAAa,CAAC,CAAC;YAEtJ,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,oBAAoB,CAAC,GAAG,GAAG,EAAE,EAAE,iBAAiB,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;YAErH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAC1C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;YACpD,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC;YAE1E,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;SACxE;IACL,CAAC;IAtDa,+BAAa,GAAW,GAAG,CAAC;IAuD9C,wBAAC;CAAA;AAxD6B;;;;;;;;;;;ACHiB;AAI/C;IAeI;QAZQ,gBAAW,GAAW,CAAC,CAAC,CAAC,4FAA4F;QACrH,mBAAc,GAAW,CAAC,CAAC,gBAAgB,CAAC,CAAC;QAC7C,qBAAgB,GAAW,CAAC,CAAC,kBAAkB,CAAC,CAAC;QACjD,cAAS,GAAW,CAAC,CAAC,QAAQ,CAAC,CAAC;QAChC,eAAU,GAAW,CAAC,CAAC,SAAS,CAAC,CAAC;QAClC,gBAAW,GAAW,CAAC,CAAC,UAAU,CAAC,CAAC;QAQxC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QAC1C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;IACxB,CAAC;IAEM,qCAAW,GAAlB,UAAmB,OAAqB;QACpC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,mBAAmB,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC;QAC1E,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;IAC1D,CAAC;IAEM,gCAAM,GAAb,UAAc,IAAU;QACpB,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;YACxB,OAAO;SACV;QAED,OAAO,IAAI,CAAC,cAAc,KAAK,CAAC,EAAE;YAC9B,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,EAAE,yDAAW,CAAC,KAAK,CAAC,KAAK,EAAE,eAAe,CAAC,gBAAgB,CAAC,CAAC;YAE3F,IAAI,CAAC,cAAc,EAAE,CAAC;SACzB;IACL,CAAC;IAEO,2CAAiB,GAAzB,UAA0B,WAAmB,EAAE,KAAa;QACxD,IAAI,IAAI,CAAC,WAAW,IAAI,WAAW,IAAI,KAAK,KAAK,IAAI,CAAC,UAAU,EAAE;YAC9D,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,IAAI,WAAW,EAAE;gBACrD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC/B,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,GAAG,CAAC,CAAC;aAC7F;YAED,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC/B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAExB,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;YAC/D,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,GAAG,MAAM,GAAG,KAAK,CAAC;SAC1E;IACL,CAAC;IAEO,2CAAiB,GAAzB,UAA0B,KAAa,EAAE,MAAc;QACnD,IAAI,KAAK,IAAI,IAAI,CAAC,UAAU,IAAI,MAAM,IAAI,IAAI,CAAC,WAAW,EAAE;YACxD,IAAI,KAAK,IAAI,IAAI,CAAC,UAAU,EAAE;gBAC1B,IAAI,CAAC,cAAc,GAAG,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;gBAC9C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC1B,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,GAAG,CAAC,CAAC;gBACrF,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;aAClD;YAED,IAAI,MAAM,IAAI,IAAI,CAAC,WAAW,EAAE;gBAC5B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC3B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,GAAG,CAAC,CAAC;gBACtF,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;aACpD;YAED,IAAI,UAAkB,CAAC;YAEvB,IAAI,MAAM,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,EAAE;gBAC7B,UAAU,GAAG,GAAG,CAAC;aACpB;iBACI,IAAI,MAAM,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,EAAE;gBAClC,UAAU,GAAG,EAAE,CAAC;aACnB;iBACI;gBACD,IAAI,MAAc,EACd,MAAc,CAAC;gBAEnB,IAAI,KAAK,IAAI,MAAM,IAAI,KAAK,KAAK,CAAC,EAAE;oBAChC,MAAM,GAAG,CAAC,CAAC;oBACX,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE;iBACtD;qBACQ;oBACD,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;oBAChD,MAAM,GAAG,CAAC,CAAC;iBACd;gBAED,UAAU,GAAG,MAAM,GAAG,GAAG,GAAG,MAAM,CAAC;aACtC;YAED,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,UAAU,CAAC;YAE3C,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;SAC7B;IACL,CAAC;IAnGa,gCAAgB,GAAgB,yDAAW,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAoG7E,sBAAC;CAAA;AArG2B;;;;;;;;;ACC5B;AAAA;IAMI,4BAAoB,aAA2B,EAAU,gBAA6C;QAAlF,kBAAa,GAAb,aAAa,CAAc;QAAU,qBAAgB,GAAhB,gBAAgB,CAA6B;QAL9F,aAAQ,GAAW,CAAC,CAAC,UAAU,CAAC,CAAC;QACjC,kBAAa,GAAW,CAAC,CAAC,eAAe,CAAC,CAAC;QAC3C,kBAAa,GAAW,CAAC,CAAC,eAAe,CAAC,CAAC;QAC3C,UAAK,GAAW,CAAC,CAAC,OAAO,CAAC,CAAC;IAEuE,CAAC;IAEpG,wCAAW,GAAlB,UAAmB,OAAqB;QACpC,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACvB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,OAAO,CAAC;SAC9E;QACD,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,OAAO,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;QACpE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,OAAO,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;IACtE,CAAC;IAEM,mCAAM,GAAb,UAAc,IAAU;QACpB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;IAC/G,CAAC;IACL,yBAAC;AAAD,CAAC;;;;;;;;;;ACrBD;AAAA;IAYI,6BAAY,aAA4B;QAAxC,iBA8BC;QAzCO,qBAAgB,GAAW,CAAC,CAAC,mBAAmB,CAAC,CAAC;QAClD,mBAAc,GAAW,CAAC,CAAC,WAAW,CAAC,CAAC;QACxC,uBAAkB,GAAW,CAAC,CAAC,qBAAqB,CAAC,CAAC;QACtD,qBAAgB,GAAW,CAAC,CAAC,eAAe,CAAC,CAAC;QAC9C,kBAAa,GAAW,CAAC,CAAC,gBAAgB,CAAC,CAAC;QAC5C,2BAAsB,GAAoB,CAAC,CAAC,eAAe,CAAC,CAAC,MAAM,EAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC;QAC3H,2BAAsB,GAAoB,CAAC,CAAC,mBAAmB,CAAC,CAAC,MAAM,EAAG,CAAC;QAC3E,2BAAsB,GAAW,EAAE,CAAC;QACpC,2BAAsB,GAAW,IAAI,CAAC,CAAC,4CAA4C;QACnF,eAAU,GAAW,IAAI,CAAC;QAG9B,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;YACtB,IAAI,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;gBACxC,KAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,KAAI,CAAC,cAAc,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;aAC7C;iBAAM;gBACH,KAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;aAC1C;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAC5B,UAAU,CAAC;YACP,6CAA6C;YAC7C,IAAI,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;gBACxC,KAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;aAC/B;QACL,CAAC,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAEhC,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC;YACjC,KAAI,CAAC,MAAM,CAAC,sFAAsF,EAAE,IAAI,CAAC,CAAC;YAE1G,aAAa,CAAC,IAAI,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;QAEH,aAAa,CAAC,oBAAoB,CAAC,IAAI,CAAC;YACpC,KAAI,CAAC,MAAM,CAAC,kGAAkG,EAAE,IAAI,CAAC,CAAC;YAEtH,aAAa,CAAC,IAAI,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,sCAAQ,GAAhB;QACI,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAC/G,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACvC,CAAC;IAEO,sCAAQ,GAAhB;QAAA,iBAKC;QAJG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,EAAE;YAChC,KAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,KAAI,CAAC,sBAAsB,CAAC,CAAC;YAC/G,KAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,yCAAW,GAAlB,UAAmB,OAAqB;QACpC,IAAI,OAAO,CAAC,YAAY,EAAE;YACtB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;SAC5C;IACL,CAAC;IAEM,oCAAM,GAAb,UAAc,OAAe,EAAE,MAAe;QAA9C,iBA2BC;QA1BG,IAAI,eAAe,GAAW,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,EACvD,gBAAgB,GAAW,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAEzD,gBAAgB,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,OAAO,CAAC;QAExC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QAE3C,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAEhD,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAE/G,eAAe,CAAC,MAAM,CAAC,IAAI,EAAE;YACzB,IAAI,CAAC,MAAM,EAAE;gBACT,UAAU,CAAC;oBACP,eAAe,CAAC,OAAO,CAAC,IAAI,EAAE;wBAC1B,eAAe,CAAC,MAAM,EAAE,CAAC;wBACzB,KAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,KAAI,CAAC,sBAAsB,CAAC,CAAC;wBAC/G,KAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;oBACnD,CAAC,CAAC,CAAC;gBACP,CAAC,EAAE,KAAI,CAAC,UAAU,CAAC;aAC1B;QACD,CAAC,CAAC,CAAC;QAEH,IAAI,cAAc,GAAoB,gBAAgB,CAAC,MAAM,EAAG,GAAG,CAAC,CAAC;QAErE,gBAAgB,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,sBAAsB,GAAG,cAAc,CAAC,CAAC;IAC9E,CAAC;IACL,0BAAC;AAAD,CAAC;;;;;;;;;;AC5FD;AAAA;IAMI,gCAAY,eAAiC;QALrC,iBAAY,GAAW,CAAC,CAAC,cAAc,CAAC,CAAC;QACzC,mBAAc,GAAW,CAAC,CAAC,gBAAgB,CAAC,CAAC;QAC7C,SAAI,GAAW,CAAC,CAAC,MAAM,CAAC,CAAC;QACzB,WAAM,GAAW,CAAC,CAAC,QAAQ,CAAC,CAAC;QAGjC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,eAAe,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,eAAe,CAAC,KAAK,CAAC,CAAC;IACnD,CAAC;IACL,6BAAC;AAAD,CAAC;;;;;;;;;;;;;;ACd8C;AAI/C,IAAY,eAGX;AAHD,WAAY,eAAe;IACvB,qDAAQ;IACR,yDAAU;AACd,CAAC,EAHW,eAAe,KAAf,eAAe,QAG1B;AAED;IACI,qBAAmB,IAAY,EAAS,OAAe,EAAS,IAAqB;QAAlE,SAAI,GAAJ,IAAI,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAiB;IAAI,CAAC;IAC9F,kBAAC;AAAD,CAAC;;AAED;IAoBI,cAAoB,gBAAkC,EAAE,aAA4B;QAApF,iBA2CC;QA3CmB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAlB9C,cAAS,GAAqB,CAAC,CAAC,QAAQ,CAAC,CAAC;QAC1C,mBAAc,GAAW,CAAC,CAAC,OAAO,CAAC,CAAC;QACpC,aAAQ,GAAW,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;QACxG,sBAAiB,GAAW,CAAC,CAAC,MAAM,CAAC,CAAC;QACtC,oBAAe,GAAY,KAAK,CAAC;QACjC,YAAO,GAAa;YACxB,yDAAW,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE;YAChC,yDAAW,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE;YACnC,yDAAW,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE;YACnC,yDAAW,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE;YAClC,yDAAW,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE;YACjC,yDAAW,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE;YACnC,yDAAW,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE;YAClC,yDAAW,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE;SACpC,CAAC;QAEM,wBAAmB,GAAW,yDAAW,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QAGtE,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAC,IAAiB;YACnD,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;QACpB,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7C,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAC,GAAG;YACvB,QAAQ,GAAG,CAAC,OAAO,EAAE;gBACjB,qBAAqB;gBACrB,KAAK,EAAE;oBACH,IAAI,KAAI,CAAC,eAAe,EAAE;wBACtB,IAAI,OAAO,GAAG,KAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;wBAClC,IAAI,OAAO,EAAE;4BACT,KAAI,CAAC,UAAU,CAAC,IAAI,WAAW,CAAC,KAAI,CAAC,gBAAgB,CAAC,IAAI,EAAW,OAAQ,EAAE,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;4BACtG,aAAa,CAAC,UAAU,CAAC,MAAM,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;yBAC3D;wBACD,KAAI,CAAC,WAAW,EAAE,CAAC;qBACtB;yBAAM;wBACH,KAAI,CAAC,WAAW,EAAE,CAAC;qBACtB;oBAED,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;oBAC1B,MAAM;gBAEV,gBAAgB;gBAChB,KAAK,EAAE;oBACH,IAAI,CAAC,KAAI,CAAC,eAAe,EAAE;wBACvB,KAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;qBAC7B;oBACD,8BAA8B;oBAC9B,MAAM;gBAEV,YAAY;gBACZ,KAAK,EAAE,EAAE,4BAA4B;oBACjC,IAAI,KAAI,CAAC,eAAe,EAAE;wBACtB,KAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;qBAC7B;oBACD,MAAM;aACb;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,8BAAe,GAAvB,UAAwB,GAAQ;QAC5B,GAAG,CAAC,cAAc,EAAE,CAAC;QACrB,GAAG,CAAC,eAAe,EAAE,CAAC;IAC1B,CAAC;IAEO,0BAAW,GAAnB;QACI,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACnD,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;QAC9B,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACtB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IAChC,CAAC;IAEO,0BAAW,GAAnB;QACI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACtB,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC;QAChC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IACjC,CAAC;IAEO,yBAAU,GAAlB,UAAmB,WAAwB;QAEvC,cAAc;QACd,IAAI,WAAW,CAAC,IAAI,KAAK,eAAe,CAAC,IAAI,EAAE;YAC3C,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAC9E,UAAU,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,EACnE,OAAO,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC;YAExG,6EAA6E;YAC7E,6CAA6C;YAC7C,IAAI,IAAI,CAAC,eAAe,EAAE;gBACtB,CAAC,CAAC,MAAM,CAAC;qBACJ,MAAM,CAAC,UAAU,CAAC;qBAClB,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBAC9B,MAAM,CAAC,OAAO,CAAC;qBACf,YAAY,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;aAC7C;iBAAM;gBACH,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;qBAC/B,MAAM,CAAC,UAAU,CAAC;qBAClB,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBAC9B,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;aACzB;SACJ;QAED,gBAAgB;QAChB,IAAI,WAAW,CAAC,IAAI,KAAK,eAAe,CAAC,MAAM,EAAE;YAC7C,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;iBAC/B,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC;iBAC3B,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;SAChD;QAED,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,GAAG,GAAG,EAAE;YAC3C,aAAa;YACb,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;SAC5C;IACL,CAAC;IAEO,0BAAW,GAAnB,UAAoB,IAAY;QAC5B,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACtB,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO,IAAI,CAAC;QACnC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACrC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACvB,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;YAChC,IAAI,IAAI,CAAC,CAAC;SACb;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IACL,WAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;AC/I8C;AACK;AACe;AACL;AAEzB;AACc;AACsB;AAEA;AAIzE;IAUI,yBAAmB,gBAAwB,EAAU,YAAyB,EAAU,iBAAgD,EAAE,KAA4B,EAAU,OAA8B,EAAE,aAA4B;QAA5O,iBA8CC;QA9CkB,qBAAgB,GAAhB,gBAAgB,CAAQ;QAAU,iBAAY,GAAZ,YAAY,CAAa;QAAU,sBAAiB,GAAjB,iBAAiB,CAA+B;QAAwC,YAAO,GAAP,OAAO,CAAuB;QAC1M,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,UAAU,CAAC;QAC5C,IAAI,CAAC,qBAAqB,GAAG,IAAI,0EAAoB,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC9G,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,eAAe,GAAG,IAAI,gEAAe,CAAC,aAAa,CAAC,CAAC;QAE1D,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,UAAC,IAA6B,EAAE,QAAiC;YACrG,IAAI,IAAI,YAAY,gDAAI,IAAI,QAAQ,YAAY,8DAAW,EAAE;gBACzD,IAAI,IAAI,CAAC,EAAE,KAAK,KAAI,CAAC,gBAAgB,EAAE;oBACnC,KAAK,IAAI,CAAC,GAAG,oFAAsB,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;wBAC3E,KAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,KAAK,EAAE,KAAI,CAAC,kBAAkB,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;wBAClF,KAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,KAAK,EAAE,KAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC;qBACtF;iBACJ;aACJ;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,oBAAoB,GAAG,IAAI,8EAAmB,CAAC,KAAK,CAAC,QAAQ,EAAE,UAAC,SAAiB,EAAE,WAAoB;YACxG,IAAI,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAI,CAAC,gBAAgB,CAAC,CAAC;YAE5D,IAAI,IAAI,IAAI,IAAI,CAAC,kBAAkB,CAAC,YAAY,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE;gBAC3E,IAAI,WAAW,EAAE;oBACb,IAAI,SAAS,KAAK,OAAO,EAAE;wBACvB,KAAI,CAAC,MAAM,CAAC,sBAAsB,EAAE,KAAI,CAAC,eAAe,CAAC,cAAc,EAAE,EAAE,KAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;wBAEpH,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;wBACxC,kFAAkF;qBACrF;yBAAM,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,SAAS,CAAC,EAAE;wBAChE,KAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE,KAAI,CAAC,eAAe,CAAC,cAAc,EAAE,EAAE,KAAI,CAAC,kBAAkB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;wBAElH,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;qBACxD;iBACJ;qBAAM;oBACH,kFAAkF;oBAClF,IAAI,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,SAAS,CAAC,EAAE;wBACxD,KAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,KAAI,CAAC,eAAe,CAAC,cAAc,EAAE,EAAE,KAAI,CAAC,kBAAkB,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;wBAElH,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;qBACxD;iBACJ;aACJ;QACL,CAAC,EAAE,UAAC,UAAkB;YACd,IAAI,SAAS,GAAW,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAExF,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACX,CAAC;IAEM,qCAAW,GAAlB,UAAmB,OAAqB;QACpC,IAAI,IAAI,GAAS,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAElE,IAAI,IAAI,EAAE;YACN,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,qBAAqB,CAAC,CAAC;SACzF;IACL,CAAC;IAEM,gCAAM,GAAb,UAAc,QAAqB;QAC/B,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAE5D,IAAI,IAAI,EAAE;YACN,IAAI,yDAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,eAAe,CAAC,aAAa,CAAC,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE;gBACjI,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,GAAG,CAAC;gBAC9B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,cAAc,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,sFAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,GAAG,UAAU,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;aAC3X;YAED,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SAC/C;IACL,CAAC;IAEO,gCAAM,GAAd,UAAe,MAAc,EAAE,QAAiB,EAAE,OAAqB;QACnE,IAAI,IAAI,GAAS,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAElE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,sFAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,GAAG,UAAU,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;IAC/Y,CAAC;IAEO,4CAAkB,GAA1B,UAA2B,SAAiB,EAAE,WAAoB;QAC9D,IAAI,OAAO,GAAiB;YACxB,OAAO,EAAE,SAAS;YAClB,KAAK,EAAE,WAAW;YAClB,SAAS,EAAE,KAAK;SACnB,CAAC;QAEF,OAAO,OAAO,CAAC;IACnB,CAAC;IAEO,2CAAiB,GAAzB,UAA0B,OAAe,EAAE,WAAoB;QAC3D,IAAI,OAAO,GAAiB;YACxB,OAAO,EAAE,OAAO;YAChB,KAAK,EAAE,WAAW;YAClB,SAAS,EAAE,IAAI;SAClB,CAAC;QAEF,OAAO,OAAO,CAAC;IACnB,CAAC;IAtGa,6BAAa,GAAgB,yDAAW,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAuG5E,sBAAC;CAAA;AAxG2B;;;;;;;;;;;;ACbmB;AACW;AAG1D;IAOI,6BAAoB,SAAmC,EAAU,OAA0D,EAAU,OAAqC;QAA1K,iBA6BC;QA7BmB,cAAS,GAAT,SAAS,CAA0B;QAAU,YAAO,GAAP,OAAO,CAAmD;QAAU,YAAO,GAAP,OAAO,CAA8B;QACtK,IAAI,CAAC,WAAW,GAAG;YACf,OAAO,EAAE,KAAK;YACd,QAAQ,EAAE,KAAK;YACf,YAAY,EAAE,KAAK;YACnB,aAAa,EAAE,KAAK;SACvB,CAAC;QACF,IAAI,CAAC,aAAa,GAAG,IAAI,IAAI,EAAE,CAAC;QAEhC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,eAAe,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;QACvD,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,eAAe,EAAE,eAAe,EAAE,IAAI,CAAC,CAAC;QAC7D,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,eAAe,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;QACxD,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,eAAe,EAAE,cAAc,EAAE,IAAI,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,aAAa,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;QACtD,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,aAAa,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,aAAa,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;QACvD,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,aAAa,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;QAE3D,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,EAAE;YAC5B,IAAI,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;YAErB,IAAI,yDAAW,CAAC,QAAQ,CAAC,KAAI,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC,YAAY,IAAI,mBAAmB,CAAC,gBAAgB,CAAC,YAAY,EAAE;gBACjH,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;aAC/B;iBAAM,EAAE,gBAAgB;gBACrB,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC;aAC5B;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,GAAG,IAAI,sEAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAChF,CAAC;IAEO,sCAAQ,GAAhB,UAAiB,OAAiB,EAAE,aAAqB,EAAE,SAAiB,EAAE,WAAoB;QAAlG,iBAYC;QAXG,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrC,aAAa;YACb,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;gBACtC,aAAa;gBACb,IAAI,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,WAAW,EAAE;oBAC7C,aAAa;oBACb,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,WAAW,CAAC;oBAC1C,KAAI,CAAC,OAAO,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;iBACxC;YACL,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IAjDa,oCAAgB,GAAgB,yDAAW,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;IAkDpF,0BAAC;CAAA;AAnD+B;;;;;;;;;;;ACJe;AAG/C;IAOI,8BAAoB,SAAiB,EAAU,YAAyB,EAAU,OAA8B;QAAhH,iBAOC;QAPmB,cAAS,GAAT,SAAS,CAAQ;QAAU,iBAAY,GAAZ,YAAY,CAAa;QAAU,YAAO,GAAP,OAAO,CAAuB;QAC5G,IAAI,CAAC,cAAc,GAAG,IAAI,yDAAW,CAAC,aAAa,CAAC,yDAAW,CAAC,IAAI,EAAE,yDAAW,CAAC,IAAI,EAAE,oBAAoB,CAAC,aAAa,EAAE,kEAAoB,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACtK,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAC,WAAW;YAC1C,KAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,WAAW,CAAC;QACxC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;IAEM,qCAAM,GAAb,UAAc,QAAqB;QAC/B,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,EAChD,QAAgB,CAAC;QAErB,IAAI,IAAI,EAAE;YACN,mFAAmF;YACnF,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;gBACzD,OAAO;aACV;YAED,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC;YAExF,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,EAAE;gBAClC,IAAI,QAAQ,GAAG,oBAAoB,CAAC,kBAAkB,EAAE;oBACpD,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;iBAC5D;qBAAM;oBACH,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;oBACjD,IAAI,CAAC,cAAc,CAAC,EAAE,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;oBAC1D,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;iBACjC;aACJ;iBAAM;gBACH,IAAI,CAAC,cAAc,CAAC,EAAE,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;aAC7D;SACJ;QAED,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACzC,CAAC;IA3Ca,uCAAkB,GAAW,GAAG,CAAC;IACjC,kCAAa,GAAgB,yDAAW,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;IA2CjF,2BAAC;CAAA;AA7CgC;;;;;;;;;;;;;;ACHc;AAEL;AACkB;AACQ;AAKpE;IAeI,uBAAmB,UAAyB,EAAE,cAAsB;QAAjD,eAAU,GAAV,UAAU,CAAe;QACxC,IAAI,CAAC,SAAS,GAAG,IAAI,8DAAgB,EAAgB,CAAC;QACtD,IAAI,CAAC,mBAAmB,GAAG,IAAI,8DAAgB,EAAgC,CAAC;QAChF,IAAI,CAAC,iBAAiB,GAAG,IAAI,6DAAe,EAAE,CAAC;QAC/C,IAAI,CAAC,oBAAoB,GAAG,IAAI,6DAAe,EAAE,CAAC;QAClD,IAAI,CAAC,aAAa,GAAG,IAAI,6DAAe,EAAE,CAAC;QAC3C,IAAI,CAAC,WAAW,GAAG,IAAI,8DAAgB,EAAa,CAAC;QACrD,IAAI,CAAC,iBAAiB,GAAG,IAAI,8DAAgB,EAAe,CAAC;QAE7D,IAAI,CAAC,kBAAkB,GAAG,IAAI,gFAAuB,CAAC,cAAc,CAAC,CAAC;IAC1E,CAAC;IAEM,iCAAS,GAAhB;QAAA,iBAkBC;QAjBG,IAAI,MAAM,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;QAE1B,IAAI,CAAC,IAAI,EAAE,CAAC;QAEZ,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;YACzB,IAAI,eAAe,GAAqB,KAAI,CAAC,kBAAkB,CAAC,mBAAmB,EAAE,CAAC;YACtF,KAAI,CAAC,aAAa,CAAC,eAAe,EAAE,UAAC,cAAqC;gBACtE,cAAc,CAAC,eAAe,GAAG,eAAe,CAAC;gBACjD,KAAI,CAAC,oBAAoB,GAAG,IAAI,wEAAmB,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC;gBAEzF,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;gBAE/B,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;YAC/C,CAAC,CAAC,CAAC;QACP,CAAC,EAAE,UAAC,MAAW,IAAK,cAAO,CAAC,KAAK,CAAC,iDAAiD,GAAG,MAAM,CAAC,EAAzE,CAAyE,CAAC,CAAC;QAE/F,OAAO,MAAM,CAAC,OAAO,EAAE,CAAC;IAC5B,CAAC;IAEM,4BAAI,GAAX;QACI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IAC3B,CAAC;IAEO,qCAAa,GAArB,UAAsB,eAAiC,EAAE,UAA2D,EAAE,KAAiB;QAAvI,iBAeC;QAfqH,iCAAiB;QACnI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,kBAAkB,EAAE,eAAe,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,UAAC,cAAqC;YAClH,IAAI,CAAC,cAAc,EAAE;gBACjB,IAAI,KAAK,IAAI,aAAa,CAAC,iBAAiB,EAAE;oBAC1C,OAAO,CAAC,GAAG,CAAC,uDAAuD,CAAC,CAAC;oBACrE,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;iBAC5B;qBAAM;oBACH,UAAU,CAAC;wBACP,KAAI,CAAC,aAAa,CAAC,eAAe,EAAE,UAAU,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;oBAC/D,CAAC,EAAE,aAAa,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;iBAC9C;aACJ;iBAAM;gBACH,UAAU,CAAC,cAAc,CAAC,CAAC;aAC9B;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,4BAAI,GAAZ;QAAA,iBAgCC;QA/BG,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,GAAG,EAAE,UAAC,OAAY;YACjC,IAAI,KAAI,CAAC,oBAAoB,EAAE;gBAC3B,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;aACzE;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,GAAG,EAAE,UAAC,iBAAsB;YAC3C,IAAI,KAAI,CAAC,oBAAoB,EAAE;gBAC3B,KAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,KAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,CAAC,CAAC;aACxG;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE;YAC7B,KAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,oBAAoB,EAAE;YACrC,KAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,CAAC;QACxC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,EAAE;YAC3B,KAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,kBAAkB,EAAE,UAAC,IAAS;YAC7C,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,uDAAS,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,aAAa,EAAE,UAAC,IAAY,EAAE,OAAe,EAAE,IAAY;YAC1E,KAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,qDAAW,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;QACzE,CAAC,CAAC,CAAC;IACP,CAAC;IAnGa,+BAAiB,GAAW,CAAC,CAAC;IAC9B,yBAAW,GAAgB,yDAAW,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAmGxE,oBAAC;CAAA;AArGyB;;;;;;;;;;;;;ACTqB;AAEK;AACf;AAErC;IAQI,6BAAY,SAAc;QACtB,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC,eAAe,CAAC;QACjD,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC,kBAAkB,CAAC;QACvD,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC,YAAY,CAAC;QAC3C,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC,cAAc,CAAC;QAC/C,IAAI,CAAC,wBAAwB,GAAG,SAAS,CAAC,wBAAwB,CAAC;QACnE,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC,eAAe,CAAC;IACrD,CAAC;IAEO,kDAAoB,GAA5B,UAA6B,GAAU;QACnC,OAAO;YACH,QAAQ,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;YACjD,UAAU,EAAE,IAAI,yDAAW,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;YAC/G,kBAAkB,EAAE;gBAChB,MAAM,EAAE,IAAI,yDAAW,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;gBACnG,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC;gBACvC,QAAQ,EAAE,IAAI,yDAAW,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;gBACzG,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,GAAG,WAAW;gBAC7D,QAAQ,EAAE,IAAI,yDAAW,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;aAC5G;YACD,cAAc,EAAE;gBACZ,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;gBACzC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC;aAC9C;YACD,EAAE,EAAE,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC;YACnC,QAAQ,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;SACpD,CAAC;IACN,CAAC;IAEO,4CAAc,GAAtB,UAAuB,IAAS;QAC5B,IAAI,MAAM,GAAyB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;QAEnE,MAAM,CAAC,kBAAkB,CAAC,QAAQ,GAAG,MAAM,CAAC,kBAAkB,CAAC,QAAQ,CAAC,GAAG,CAAC,gDAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;QAEpG,MAAM,CAAC,kBAAkB,CAAC,MAAM,GAAG;YAC/B,YAAY,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC;YACpD,aAAa,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC;YACtD,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;YAC1C,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;SAC/C,CAAC;QAEF,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC3C,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QACjD,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC7C,MAAM,CAAC,SAAS,GAAG;YACf,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;SACvC,CAAC;QAEF,OAAO,MAAM,CAAC;IAClB,CAAC;IAEO,8CAAgB,GAAxB,UAAyB,MAAW;QAChC,IAAI,MAAM,GAA6B,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;QAEzE,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QAE7D,OAAO,MAAM,CAAC;IAClB,CAAC;IAEO,wDAA0B,GAAlC,UAAmC,IAAS;QACxC,OAAO;YACH,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC;YAC9C,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC;YAChD,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,EAAE,CAAC;YAC1C,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC;YAChD,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC;YAChD,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC;YAClD,QAAQ,EAAE,CAAC;SACd,CAAC;IACN,CAAC;IAEO,+CAAiB,GAAzB,UAA0B,IAAS;QAC/B,OAAO;YACH,kBAAkB,EAAE;gBAChB,QAAQ,EAAE,IAAI,yDAAW,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,+DAAU,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,+DAAU,CAAC,IAAI,CAAC,UAAU,CAAC;gBAC9J,QAAQ,EAAE,CAAC;aACd;YACD,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC;YACjC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;YAC7C,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;YACrC,cAAc,EAAE;gBACZ,KAAK,EAAE,IAAI;gBACX,MAAM,EAAE,CAAC;aACZ;SACJ,CAAC;IACN,CAAC;IAEM,+CAAiB,GAAxB,UAAyB,IAAS;QAC9B,OAAO;YACH,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;YACvC,mBAAmB,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC;YACnE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;YACvC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;YACzC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;YAC7C,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC;YAC3C,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC;YACrD,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC;YACzD,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC;YACjD,qBAAqB,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC;YACvE,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC;YACrD,oBAAoB,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,oBAAoB,CAAC;YACrE,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC;YACrD,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC;SAC1D,CAAC;IACN,CAAC;IAEM,mDAAqB,GAA5B,UAA6B,IAAS;QAClC,IAAI,OAAO,GAA4B,EAAE,CAAC;QAE1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClC,IAAI,IAAI,GAAG,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACpD,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;YAEtB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACtB;QAED,OAAO,OAAO,CAAC;IACnB,CAAC;IAEM,wCAAU,GAAjB,UAAkB,IAAS;QACvB,IAAI,OAAO,GAAiB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EACpD,CAAC,GAAW,CAAC,CAAC;QAElB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SAC5D;QAED,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;SAClE;QAED,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1C,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;SACrE;QAED,OAAO,OAAO,CAAC;IACnB,CAAC;IACL,0BAAC;AAAD,CAAC;;;;;;;;;;ACpJD;AAAA;IACI,iCAAoB,eAAuB;QAAvB,oBAAe,GAAf,eAAe,CAAQ;IAAG,CAAC;IAExC,qDAAmB,GAA1B;QACI,IAAI,WAAW,GAAuB,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,EAChE,KAAK,GAAQ,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAO,WAAY,CAAC,CAAC,CAAC,CAAC,EAAE,EAC9D,cAAc,GAAW,KAAK,CAAC,cAAc,CAAC;QAElD,IAAI,cAAc,EAAE;YAChB,OAAO,KAAK,CAAC,cAAc,CAAC;YAE5B,oCAAoC;YACpC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,CAAC;YAElF,OAAO;gBACH,IAAI,EAAE,KAAK,CAAC,WAAW;gBACvB,KAAK,EAAE,KAAK,CAAC,KAAK;gBAClB,cAAc,EAAE,cAAc;aACjC,CAAC;SACL;aAAM;YACH,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;SACrD;IACL,CAAC;IACL,8BAAC;AAAD,CAAC","file":"shootR.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"shootR\"] = factory();\n\telse\n\t\troot[\"shootR\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import * as JQuery from \"jquery\";\r\nimport * as signalR from \"@aspnet/signalr\"\r\nimport { Game } from \"./Game\";\r\nimport { ServerAdapter } from \"./Server/ServerAdapter\";\r\nimport { GameScreen } from \"./GameScreen\";\r\nimport { IClientInitialization } from \"./Server/IClientInitialization\";\r\n\r\n$(function () {\r\n    let connection = new signalR.HubConnectionBuilder().withUrl(\"/Game\").configureLogging(signalR.LogLevel.Warning).build();\r\n    let gameCanvas: JQuery = $(\"#game\"),\r\n        popUpHolder: JQuery = $(\"#popUpHolder\"),\r\n        gameContent: JQuery = $(\"#gameContent\"),\r\n        loadContent: JQuery = $(\"#loadContent\"),\r\n        game: Game,\r\n        serverAdapter: ServerAdapter = new ServerAdapter(connection, \"shootr.state\"),\r\n        gameScreen: GameScreen = new GameScreen(gameCanvas, popUpHolder, serverAdapter);\r\n\r\n        serverAdapter.Negotiate().then((initializationData: IClientInitialization) => {\r\n            loadContent.hide();\r\n            gameContent.show();\r\n\r\n            game = new Game(<HTMLCanvasElement>gameCanvas[0], gameScreen, serverAdapter, initializationData);\r\n            gameScreen.ForceResizeCheck();\r\n        }, (reason) => console.error(\"Failed to negotiate with server: \" + reason));\r\n\r\n});","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// Version token that will be replaced by the prepack command\r\n/** The version of the SignalR client. */\r\nexport var VERSION = \"1.0.2\";\r\nexport { HttpError, TimeoutError } from \"./Errors\";\r\nexport { DefaultHttpClient, HttpClient, HttpResponse } from \"./HttpClient\";\r\nexport { HubConnection } from \"./HubConnection\";\r\nexport { HubConnectionBuilder } from \"./HubConnectionBuilder\";\r\nexport { MessageType } from \"./IHubProtocol\";\r\nexport { LogLevel } from \"./ILogger\";\r\nexport { HttpTransportType, TransferFormat } from \"./ITransport\";\r\nexport { NullLogger } from \"./Loggers\";\r\nexport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\n//# sourceMappingURL=index.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nimport * as tslib_1 from \"tslib\";\r\n/** Error thrown when an HTTP request fails. */\r\nvar HttpError = /** @class */ (function (_super) {\r\n    tslib_1.__extends(HttpError, _super);\r\n    /** Constructs a new instance of {@link HttpError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     * @param {number} statusCode The HTTP status code represented by this error.\r\n     */\r\n    function HttpError(errorMessage, statusCode) {\r\n        var _newTarget = this.constructor;\r\n        var _this = this;\r\n        var trueProto = _newTarget.prototype;\r\n        _this = _super.call(this, errorMessage) || this;\r\n        _this.statusCode = statusCode;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        _this.__proto__ = trueProto;\r\n        return _this;\r\n    }\r\n    return HttpError;\r\n}(Error));\r\nexport { HttpError };\r\n/** Error thrown when a timeout elapses. */\r\nvar TimeoutError = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TimeoutError, _super);\r\n    /** Constructs a new instance of {@link TimeoutError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    function TimeoutError(errorMessage) {\r\n        var _newTarget = this.constructor;\r\n        if (errorMessage === void 0) { errorMessage = \"A timeout occurred.\"; }\r\n        var _this = this;\r\n        var trueProto = _newTarget.prototype;\r\n        _this = _super.call(this, errorMessage) || this;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        _this.__proto__ = trueProto;\r\n        return _this;\r\n    }\r\n    return TimeoutError;\r\n}(Error));\r\nexport { TimeoutError };\r\n//# sourceMappingURL=Errors.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { HttpError, TimeoutError } from \"./Errors\";\r\nimport { LogLevel } from \"./ILogger\";\r\n/** Represents an HTTP response. */\r\nvar HttpResponse = /** @class */ (function () {\r\n    function HttpResponse(statusCode, statusText, content) {\r\n        this.statusCode = statusCode;\r\n        this.statusText = statusText;\r\n        this.content = content;\r\n    }\r\n    return HttpResponse;\r\n}());\r\nexport { HttpResponse };\r\n/** Abstraction over an HTTP client.\r\n *\r\n * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.\r\n */\r\nvar HttpClient = /** @class */ (function () {\r\n    function HttpClient() {\r\n    }\r\n    HttpClient.prototype.get = function (url, options) {\r\n        return this.send(tslib_1.__assign({}, options, { method: \"GET\", url: url }));\r\n    };\r\n    HttpClient.prototype.post = function (url, options) {\r\n        return this.send(tslib_1.__assign({}, options, { method: \"POST\", url: url }));\r\n    };\r\n    HttpClient.prototype.delete = function (url, options) {\r\n        return this.send(tslib_1.__assign({}, options, { method: \"DELETE\", url: url }));\r\n    };\r\n    return HttpClient;\r\n}());\r\nexport { HttpClient };\r\n/** Default implementation of {@link HttpClient}. */\r\nvar DefaultHttpClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DefaultHttpClient, _super);\r\n    /** Creates a new instance of the {@link DefaultHttpClient}, using the provided {@link ILogger} to log messages. */\r\n    function DefaultHttpClient(logger) {\r\n        var _this = _super.call(this) || this;\r\n        _this.logger = logger;\r\n        return _this;\r\n    }\r\n    /** @inheritDoc */\r\n    DefaultHttpClient.prototype.send = function (request) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open(request.method, request.url, true);\r\n            xhr.withCredentials = true;\r\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n            // Explicitly setting the Content-Type header for React Native on Android platform.\r\n            xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\r\n            if (request.headers) {\r\n                Object.keys(request.headers)\r\n                    .forEach(function (header) { return xhr.setRequestHeader(header, request.headers[header]); });\r\n            }\r\n            if (request.responseType) {\r\n                xhr.responseType = request.responseType;\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = function () {\r\n                    xhr.abort();\r\n                };\r\n            }\r\n            if (request.timeout) {\r\n                xhr.timeout = request.timeout;\r\n            }\r\n            xhr.onload = function () {\r\n                if (request.abortSignal) {\r\n                    request.abortSignal.onabort = null;\r\n                }\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    resolve(new HttpResponse(xhr.status, xhr.statusText, xhr.response || xhr.responseText));\r\n                }\r\n                else {\r\n                    reject(new HttpError(xhr.statusText, xhr.status));\r\n                }\r\n            };\r\n            xhr.onerror = function () {\r\n                _this.logger.log(LogLevel.Warning, \"Error from HTTP request. \" + xhr.status + \": \" + xhr.statusText);\r\n                reject(new HttpError(xhr.statusText, xhr.status));\r\n            };\r\n            xhr.ontimeout = function () {\r\n                _this.logger.log(LogLevel.Warning, \"Timeout from HTTP request.\");\r\n                reject(new TimeoutError());\r\n            };\r\n            xhr.send(request.content || \"\");\r\n        });\r\n    };\r\n    return DefaultHttpClient;\r\n}(HttpClient));\r\nexport { DefaultHttpClient };\r\n//# sourceMappingURL=HttpClient.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\r\n/** Indicates the severity of a log message.\r\n *\r\n * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.\r\n */\r\nexport var LogLevel;\r\n(function (LogLevel) {\r\n    /** Log level for very low severity diagnostic messages. */\r\n    LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\r\n    /** Log level for low severity diagnostic messages. */\r\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\r\n    /** Log level for informational diagnostic messages. */\r\n    LogLevel[LogLevel[\"Information\"] = 2] = \"Information\";\r\n    /** Log level for diagnostic messages that indicate a non-fatal problem. */\r\n    LogLevel[LogLevel[\"Warning\"] = 3] = \"Warning\";\r\n    /** Log level for diagnostic messages that indicate a failure in the current operation. */\r\n    LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\r\n    /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */\r\n    LogLevel[LogLevel[\"Critical\"] = 5] = \"Critical\";\r\n    /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */\r\n    LogLevel[LogLevel[\"None\"] = 6] = \"None\";\r\n})(LogLevel || (LogLevel = {}));\r\n//# sourceMappingURL=ILogger.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { HandshakeProtocol } from \"./HandshakeProtocol\";\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { Arg, Subject } from \"./Utils\";\r\nvar DEFAULT_TIMEOUT_IN_MS = 30 * 1000;\r\n/** Represents a connection to a SignalR Hub. */\r\nvar HubConnection = /** @class */ (function () {\r\n    function HubConnection(connection, logger, protocol) {\r\n        var _this = this;\r\n        Arg.isRequired(connection, \"connection\");\r\n        Arg.isRequired(logger, \"logger\");\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.serverTimeoutInMilliseconds = DEFAULT_TIMEOUT_IN_MS;\r\n        this.logger = logger;\r\n        this.protocol = protocol;\r\n        this.connection = connection;\r\n        this.handshakeProtocol = new HandshakeProtocol();\r\n        this.connection.onreceive = function (data) { return _this.processIncomingData(data); };\r\n        this.connection.onclose = function (error) { return _this.connectionClosed(error); };\r\n        this.callbacks = {};\r\n        this.methods = {};\r\n        this.closedCallbacks = [];\r\n        this.id = 0;\r\n    }\r\n    /** @internal */\r\n    // Using a public static factory method means we can have a private constructor and an _internal_\r\n    // create method that can be used by HubConnectionBuilder. An \"internal\" constructor would just\r\n    // be stripped away and the '.d.ts' file would have no constructor, which is interpreted as a\r\n    // public parameter-less constructor.\r\n    HubConnection.create = function (connection, logger, protocol) {\r\n        return new HubConnection(connection, logger, protocol);\r\n    };\r\n    /** Starts the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully established, or rejects with an error.\r\n     */\r\n    HubConnection.prototype.start = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var handshakeRequest;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        handshakeRequest = {\r\n                            protocol: this.protocol.name,\r\n                            version: this.protocol.version,\r\n                        };\r\n                        this.logger.log(LogLevel.Debug, \"Starting HubConnection.\");\r\n                        this.receivedHandshakeResponse = false;\r\n                        return [4 /*yield*/, this.connection.start(this.protocol.transferFormat)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        this.logger.log(LogLevel.Debug, \"Sending handshake request.\");\r\n                        return [4 /*yield*/, this.connection.send(this.handshakeProtocol.writeHandshakeRequest(handshakeRequest))];\r\n                    case 2:\r\n                        _a.sent();\r\n                        this.logger.log(LogLevel.Information, \"Using HubProtocol '\" + this.protocol.name + \"'.\");\r\n                        // defensively cleanup timeout in case we receive a message from the server before we finish start\r\n                        this.cleanupTimeout();\r\n                        this.configureTimeout();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /** Stops the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully terminated, or rejects with an error.\r\n     */\r\n    HubConnection.prototype.stop = function () {\r\n        this.logger.log(LogLevel.Debug, \"Stopping HubConnection.\");\r\n        this.cleanupTimeout();\r\n        return this.connection.stop();\r\n    };\r\n    /** Invokes a streaming hub method on the server using the specified name and arguments.\r\n     *\r\n     * @typeparam T The type of the items returned by the server.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {IStreamResult<T>} An object that yields results from the server as they are received.\r\n     */\r\n    HubConnection.prototype.stream = function (methodName) {\r\n        var _this = this;\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var invocationDescriptor = this.createStreamInvocation(methodName, args);\r\n        var subject = new Subject(function () {\r\n            var cancelInvocation = _this.createCancelInvocation(invocationDescriptor.invocationId);\r\n            var cancelMessage = _this.protocol.writeMessage(cancelInvocation);\r\n            delete _this.callbacks[invocationDescriptor.invocationId];\r\n            return _this.connection.send(cancelMessage);\r\n        });\r\n        this.callbacks[invocationDescriptor.invocationId] = function (invocationEvent, error) {\r\n            if (error) {\r\n                subject.error(error);\r\n                return;\r\n            }\r\n            if (invocationEvent.type === MessageType.Completion) {\r\n                if (invocationEvent.error) {\r\n                    subject.error(new Error(invocationEvent.error));\r\n                }\r\n                else {\r\n                    subject.complete();\r\n                }\r\n            }\r\n            else {\r\n                subject.next((invocationEvent.item));\r\n            }\r\n        };\r\n        var message = this.protocol.writeMessage(invocationDescriptor);\r\n        this.connection.send(message)\r\n            .catch(function (e) {\r\n            subject.error(e);\r\n            delete _this.callbacks[invocationDescriptor.invocationId];\r\n        });\r\n        return subject;\r\n    };\r\n    /** Invokes a hub method on the server using the specified name and arguments. Does not wait for a response from the receiver.\r\n     *\r\n     * The Promise returned by this method resolves when the client has sent the invocation to the server. The server may still\r\n     * be processing the invocation.\r\n     *\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<void>} A Promise that resolves when the invocation has been successfully sent, or rejects with an error.\r\n     */\r\n    HubConnection.prototype.send = function (methodName) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var invocationDescriptor = this.createInvocation(methodName, args, true);\r\n        var message = this.protocol.writeMessage(invocationDescriptor);\r\n        return this.connection.send(message);\r\n    };\r\n    /** Invokes a hub method on the server using the specified name and arguments.\r\n     *\r\n     * The Promise returned by this method resolves when the server indicates it has finished invoking the method. When the promise\r\n     * resolves, the server has finished invoking the method. If the server method returns a result, it is produced as the result of\r\n     * resolving the Promise.\r\n     *\r\n     * @typeparam T The expected return type.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<T>} A Promise that resolves with the result of the server method (if any), or rejects with an error.\r\n     */\r\n    HubConnection.prototype.invoke = function (methodName) {\r\n        var _this = this;\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var invocationDescriptor = this.createInvocation(methodName, args, false);\r\n        var p = new Promise(function (resolve, reject) {\r\n            _this.callbacks[invocationDescriptor.invocationId] = function (invocationEvent, error) {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n                if (invocationEvent.type === MessageType.Completion) {\r\n                    var completionMessage = invocationEvent;\r\n                    if (completionMessage.error) {\r\n                        reject(new Error(completionMessage.error));\r\n                    }\r\n                    else {\r\n                        resolve(completionMessage.result);\r\n                    }\r\n                }\r\n                else {\r\n                    reject(new Error(\"Unexpected message type: \" + invocationEvent.type));\r\n                }\r\n            };\r\n            var message = _this.protocol.writeMessage(invocationDescriptor);\r\n            _this.connection.send(message)\r\n                .catch(function (e) {\r\n                reject(e);\r\n                delete _this.callbacks[invocationDescriptor.invocationId];\r\n            });\r\n        });\r\n        return p;\r\n    };\r\n    /** Registers a handler that will be invoked when the hub method with the specified method name is invoked.\r\n     *\r\n     * @param {string} methodName The name of the hub method to define.\r\n     * @param {Function} newMethod The handler that will be raised when the hub method is invoked.\r\n     */\r\n    HubConnection.prototype.on = function (methodName, newMethod) {\r\n        if (!methodName || !newMethod) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        if (!this.methods[methodName]) {\r\n            this.methods[methodName] = [];\r\n        }\r\n        // Preventing adding the same handler multiple times.\r\n        if (this.methods[methodName].indexOf(newMethod) !== -1) {\r\n            return;\r\n        }\r\n        this.methods[methodName].push(newMethod);\r\n    };\r\n    HubConnection.prototype.off = function (methodName, method) {\r\n        if (!methodName) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        var handlers = this.methods[methodName];\r\n        if (!handlers) {\r\n            return;\r\n        }\r\n        if (method) {\r\n            var removeIdx = handlers.indexOf(method);\r\n            if (removeIdx !== -1) {\r\n                handlers.splice(removeIdx, 1);\r\n                if (handlers.length === 0) {\r\n                    delete this.methods[methodName];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            delete this.methods[methodName];\r\n        }\r\n    };\r\n    /** Registers a handler that will be invoked when the connection is closed.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection is closed. Optionally receives a single argument containing the error that caused the connection to close (if any).\r\n     */\r\n    HubConnection.prototype.onclose = function (callback) {\r\n        if (callback) {\r\n            this.closedCallbacks.push(callback);\r\n        }\r\n    };\r\n    HubConnection.prototype.processIncomingData = function (data) {\r\n        this.cleanupTimeout();\r\n        if (!this.receivedHandshakeResponse) {\r\n            data = this.processHandshakeResponse(data);\r\n            this.receivedHandshakeResponse = true;\r\n        }\r\n        // Data may have all been read when processing handshake response\r\n        if (data) {\r\n            // Parse the messages\r\n            var messages = this.protocol.parseMessages(data, this.logger);\r\n            for (var _i = 0, messages_1 = messages; _i < messages_1.length; _i++) {\r\n                var message = messages_1[_i];\r\n                switch (message.type) {\r\n                    case MessageType.Invocation:\r\n                        this.invokeClientMethod(message);\r\n                        break;\r\n                    case MessageType.StreamItem:\r\n                    case MessageType.Completion:\r\n                        var callback = this.callbacks[message.invocationId];\r\n                        if (callback != null) {\r\n                            if (message.type === MessageType.Completion) {\r\n                                delete this.callbacks[message.invocationId];\r\n                            }\r\n                            callback(message);\r\n                        }\r\n                        break;\r\n                    case MessageType.Ping:\r\n                        // Don't care about pings\r\n                        break;\r\n                    case MessageType.Close:\r\n                        this.logger.log(LogLevel.Information, \"Close message received from server.\");\r\n                        this.connection.stop(message.error ? new Error(\"Server returned an error on close: \" + message.error) : null);\r\n                        break;\r\n                    default:\r\n                        this.logger.log(LogLevel.Warning, \"Invalid message type: \" + message.type);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        this.configureTimeout();\r\n    };\r\n    HubConnection.prototype.processHandshakeResponse = function (data) {\r\n        var responseMessage;\r\n        var remainingData;\r\n        try {\r\n            _a = this.handshakeProtocol.parseHandshakeResponse(data), remainingData = _a[0], responseMessage = _a[1];\r\n        }\r\n        catch (e) {\r\n            var message = \"Error parsing handshake response: \" + e;\r\n            this.logger.log(LogLevel.Error, message);\r\n            var error = new Error(message);\r\n            this.connection.stop(error);\r\n            throw error;\r\n        }\r\n        if (responseMessage.error) {\r\n            var message = \"Server returned handshake error: \" + responseMessage.error;\r\n            this.logger.log(LogLevel.Error, message);\r\n            this.connection.stop(new Error(message));\r\n        }\r\n        else {\r\n            this.logger.log(LogLevel.Debug, \"Server handshake complete.\");\r\n        }\r\n        return remainingData;\r\n        var _a;\r\n    };\r\n    HubConnection.prototype.configureTimeout = function () {\r\n        var _this = this;\r\n        if (!this.connection.features || !this.connection.features.inherentKeepAlive) {\r\n            // Set the timeout timer\r\n            this.timeoutHandle = setTimeout(function () { return _this.serverTimeout(); }, this.serverTimeoutInMilliseconds);\r\n        }\r\n    };\r\n    HubConnection.prototype.serverTimeout = function () {\r\n        // The server hasn't talked to us in a while. It doesn't like us anymore ... :(\r\n        // Terminate the connection\r\n        this.connection.stop(new Error(\"Server timeout elapsed without receiving a message from the server.\"));\r\n    };\r\n    HubConnection.prototype.invokeClientMethod = function (invocationMessage) {\r\n        var _this = this;\r\n        var methods = this.methods[invocationMessage.target.toLowerCase()];\r\n        if (methods) {\r\n            methods.forEach(function (m) { return m.apply(_this, invocationMessage.arguments); });\r\n            if (invocationMessage.invocationId) {\r\n                // This is not supported in v1. So we return an error to avoid blocking the server waiting for the response.\r\n                var message = \"Server requested a response, which is not supported in this version of the client.\";\r\n                this.logger.log(LogLevel.Error, message);\r\n                this.connection.stop(new Error(message));\r\n            }\r\n        }\r\n        else {\r\n            this.logger.log(LogLevel.Warning, \"No client method with the name '\" + invocationMessage.target + \"' found.\");\r\n        }\r\n    };\r\n    HubConnection.prototype.connectionClosed = function (error) {\r\n        var _this = this;\r\n        var callbacks = this.callbacks;\r\n        this.callbacks = {};\r\n        Object.keys(callbacks)\r\n            .forEach(function (key) {\r\n            var callback = callbacks[key];\r\n            callback(undefined, error ? error : new Error(\"Invocation canceled due to connection being closed.\"));\r\n        });\r\n        this.cleanupTimeout();\r\n        this.closedCallbacks.forEach(function (c) { return c.apply(_this, [error]); });\r\n    };\r\n    HubConnection.prototype.cleanupTimeout = function () {\r\n        if (this.timeoutHandle) {\r\n            clearTimeout(this.timeoutHandle);\r\n        }\r\n    };\r\n    HubConnection.prototype.createInvocation = function (methodName, args, nonblocking) {\r\n        if (nonblocking) {\r\n            return {\r\n                arguments: args,\r\n                target: methodName,\r\n                type: MessageType.Invocation,\r\n            };\r\n        }\r\n        else {\r\n            var id = this.id;\r\n            this.id++;\r\n            return {\r\n                arguments: args,\r\n                invocationId: id.toString(),\r\n                target: methodName,\r\n                type: MessageType.Invocation,\r\n            };\r\n        }\r\n    };\r\n    HubConnection.prototype.createStreamInvocation = function (methodName, args) {\r\n        var id = this.id;\r\n        this.id++;\r\n        return {\r\n            arguments: args,\r\n            invocationId: id.toString(),\r\n            target: methodName,\r\n            type: MessageType.StreamInvocation,\r\n        };\r\n    };\r\n    HubConnection.prototype.createCancelInvocation = function (id) {\r\n        return {\r\n            invocationId: id,\r\n            type: MessageType.CancelInvocation,\r\n        };\r\n    };\r\n    return HubConnection;\r\n}());\r\nexport { HubConnection };\r\n//# sourceMappingURL=HubConnection.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nvar HandshakeProtocol = /** @class */ (function () {\r\n    function HandshakeProtocol() {\r\n    }\r\n    // Handshake request is always JSON\r\n    HandshakeProtocol.prototype.writeHandshakeRequest = function (handshakeRequest) {\r\n        return TextMessageFormat.write(JSON.stringify(handshakeRequest));\r\n    };\r\n    HandshakeProtocol.prototype.parseHandshakeResponse = function (data) {\r\n        var responseMessage;\r\n        var messageData;\r\n        var remainingData;\r\n        if (data instanceof ArrayBuffer) {\r\n            // Format is binary but still need to read JSON text from handshake response\r\n            var binaryData = new Uint8Array(data);\r\n            var separatorIndex = binaryData.indexOf(TextMessageFormat.RecordSeparatorCode);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            var responseLength = separatorIndex + 1;\r\n            messageData = String.fromCharCode.apply(null, binaryData.slice(0, responseLength));\r\n            remainingData = (binaryData.byteLength > responseLength) ? binaryData.slice(responseLength).buffer : null;\r\n        }\r\n        else {\r\n            var textData = data;\r\n            var separatorIndex = textData.indexOf(TextMessageFormat.RecordSeparator);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            var responseLength = separatorIndex + 1;\r\n            messageData = textData.substring(0, responseLength);\r\n            remainingData = (textData.length > responseLength) ? textData.substring(responseLength) : null;\r\n        }\r\n        // At this point we should have just the single handshake message\r\n        var messages = TextMessageFormat.parse(messageData);\r\n        responseMessage = JSON.parse(messages[0]);\r\n        // multiple messages could have arrived with handshake\r\n        // return additional data to be parsed as usual, or null if all parsed\r\n        return [remainingData, responseMessage];\r\n    };\r\n    return HandshakeProtocol;\r\n}());\r\nexport { HandshakeProtocol };\r\n//# sourceMappingURL=HandshakeProtocol.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// Not exported from index\r\nvar TextMessageFormat = /** @class */ (function () {\r\n    function TextMessageFormat() {\r\n    }\r\n    TextMessageFormat.write = function (output) {\r\n        return \"\" + output + TextMessageFormat.RecordSeparator;\r\n    };\r\n    TextMessageFormat.parse = function (input) {\r\n        if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\r\n            throw new Error(\"Message is incomplete.\");\r\n        }\r\n        var messages = input.split(TextMessageFormat.RecordSeparator);\r\n        messages.pop();\r\n        return messages;\r\n    };\r\n    TextMessageFormat.RecordSeparatorCode = 0x1e;\r\n    TextMessageFormat.RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);\r\n    return TextMessageFormat;\r\n}());\r\nexport { TextMessageFormat };\r\n//# sourceMappingURL=TextMessageFormat.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n/** Defines the type of a Hub Message. */\r\nexport var MessageType;\r\n(function (MessageType) {\r\n    /** Indicates the message is an Invocation message and implements the {@link InvocationMessage} interface. */\r\n    MessageType[MessageType[\"Invocation\"] = 1] = \"Invocation\";\r\n    /** Indicates the message is a StreamItem message and implements the {@link StreamItemMessage} interface. */\r\n    MessageType[MessageType[\"StreamItem\"] = 2] = \"StreamItem\";\r\n    /** Indicates the message is a Completion message and implements the {@link CompletionMessage} interface. */\r\n    MessageType[MessageType[\"Completion\"] = 3] = \"Completion\";\r\n    /** Indicates the message is a Stream Invocation message and implements the {@link StreamInvocationMessage} interface. */\r\n    MessageType[MessageType[\"StreamInvocation\"] = 4] = \"StreamInvocation\";\r\n    /** Indicates the message is a Cancel Invocation message and implements the {@link CancelInvocationMessage} interface. */\r\n    MessageType[MessageType[\"CancelInvocation\"] = 5] = \"CancelInvocation\";\r\n    /** Indicates the message is a Ping message and implements the {@link PingMessage} interface. */\r\n    MessageType[MessageType[\"Ping\"] = 6] = \"Ping\";\r\n    /** Indicates the message is a Close message and implements the {@link CloseMessage} interface. */\r\n    MessageType[MessageType[\"Close\"] = 7] = \"Close\";\r\n})(MessageType || (MessageType = {}));\r\n//# sourceMappingURL=IHubProtocol.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { NullLogger } from \"./Loggers\";\r\nvar Arg = /** @class */ (function () {\r\n    function Arg() {\r\n    }\r\n    Arg.isRequired = function (val, name) {\r\n        if (val === null || val === undefined) {\r\n            throw new Error(\"The '\" + name + \"' argument is required.\");\r\n        }\r\n    };\r\n    Arg.isIn = function (val, values, name) {\r\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\r\n        if (!(val in values)) {\r\n            throw new Error(\"Unknown \" + name + \" value: \" + val + \".\");\r\n        }\r\n    };\r\n    return Arg;\r\n}());\r\nexport { Arg };\r\nexport function getDataDetail(data, includeContent) {\r\n    var length = null;\r\n    if (data instanceof ArrayBuffer) {\r\n        length = \"Binary data of length \" + data.byteLength;\r\n        if (includeContent) {\r\n            length += \". Content: '\" + formatArrayBuffer(data) + \"'\";\r\n        }\r\n    }\r\n    else if (typeof data === \"string\") {\r\n        length = \"String data of length \" + data.length;\r\n        if (includeContent) {\r\n            length += \". Content: '\" + data + \"'.\";\r\n        }\r\n    }\r\n    return length;\r\n}\r\nexport function formatArrayBuffer(data) {\r\n    var view = new Uint8Array(data);\r\n    // Uint8Array.map only supports returning another Uint8Array?\r\n    var str = \"\";\r\n    view.forEach(function (num) {\r\n        var pad = num < 16 ? \"0\" : \"\";\r\n        str += \"0x\" + pad + num.toString(16) + \" \";\r\n    });\r\n    // Trim of trailing space.\r\n    return str.substr(0, str.length - 1);\r\n}\r\nexport function sendMessage(logger, transportName, httpClient, url, accessTokenFactory, content, logMessageContent) {\r\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n        var headers, token, response, _a;\r\n        return tslib_1.__generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, accessTokenFactory()];\r\n                case 1:\r\n                    token = _b.sent();\r\n                    if (token) {\r\n                        headers = (_a = {},\r\n                            _a[\"Authorization\"] = \"Bearer \" + token,\r\n                            _a);\r\n                    }\r\n                    logger.log(LogLevel.Trace, \"(\" + transportName + \" transport) sending data. \" + getDataDetail(content, logMessageContent) + \".\");\r\n                    return [4 /*yield*/, httpClient.post(url, {\r\n                            content: content,\r\n                            headers: headers,\r\n                        })];\r\n                case 2:\r\n                    response = _b.sent();\r\n                    logger.log(LogLevel.Trace, \"(\" + transportName + \" transport) request complete. Response status: \" + response.statusCode + \".\");\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nexport function createLogger(logger) {\r\n    if (logger === undefined) {\r\n        return new ConsoleLogger(LogLevel.Information);\r\n    }\r\n    if (logger === null) {\r\n        return NullLogger.instance;\r\n    }\r\n    if (logger.log) {\r\n        return logger;\r\n    }\r\n    return new ConsoleLogger(logger);\r\n}\r\nvar Subject = /** @class */ (function () {\r\n    function Subject(cancelCallback) {\r\n        this.observers = [];\r\n        this.cancelCallback = cancelCallback;\r\n    }\r\n    Subject.prototype.next = function (item) {\r\n        for (var _i = 0, _a = this.observers; _i < _a.length; _i++) {\r\n            var observer = _a[_i];\r\n            observer.next(item);\r\n        }\r\n    };\r\n    Subject.prototype.error = function (err) {\r\n        for (var _i = 0, _a = this.observers; _i < _a.length; _i++) {\r\n            var observer = _a[_i];\r\n            if (observer.error) {\r\n                observer.error(err);\r\n            }\r\n        }\r\n    };\r\n    Subject.prototype.complete = function () {\r\n        for (var _i = 0, _a = this.observers; _i < _a.length; _i++) {\r\n            var observer = _a[_i];\r\n            if (observer.complete) {\r\n                observer.complete();\r\n            }\r\n        }\r\n    };\r\n    Subject.prototype.subscribe = function (observer) {\r\n        this.observers.push(observer);\r\n        return new SubjectSubscription(this, observer);\r\n    };\r\n    return Subject;\r\n}());\r\nexport { Subject };\r\nvar SubjectSubscription = /** @class */ (function () {\r\n    function SubjectSubscription(subject, observer) {\r\n        this.subject = subject;\r\n        this.observer = observer;\r\n    }\r\n    SubjectSubscription.prototype.dispose = function () {\r\n        var index = this.subject.observers.indexOf(this.observer);\r\n        if (index > -1) {\r\n            this.subject.observers.splice(index, 1);\r\n        }\r\n        if (this.subject.observers.length === 0) {\r\n            this.subject.cancelCallback().catch(function (_) { });\r\n        }\r\n    };\r\n    return SubjectSubscription;\r\n}());\r\nexport { SubjectSubscription };\r\nvar ConsoleLogger = /** @class */ (function () {\r\n    function ConsoleLogger(minimumLogLevel) {\r\n        this.minimumLogLevel = minimumLogLevel;\r\n    }\r\n    ConsoleLogger.prototype.log = function (logLevel, message) {\r\n        if (logLevel >= this.minimumLogLevel) {\r\n            switch (logLevel) {\r\n                case LogLevel.Critical:\r\n                case LogLevel.Error:\r\n                    console.error(LogLevel[logLevel] + \": \" + message);\r\n                    break;\r\n                case LogLevel.Warning:\r\n                    console.warn(LogLevel[logLevel] + \": \" + message);\r\n                    break;\r\n                case LogLevel.Information:\r\n                    console.info(LogLevel[logLevel] + \": \" + message);\r\n                    break;\r\n                default:\r\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\r\n                    console.log(LogLevel[logLevel] + \": \" + message);\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    return ConsoleLogger;\r\n}());\r\nexport { ConsoleLogger };\r\n//# sourceMappingURL=Utils.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n/** A logger that does nothing when log messages are sent to it. */\r\nvar NullLogger = /** @class */ (function () {\r\n    function NullLogger() {\r\n    }\r\n    /** @inheritDoc */\r\n    NullLogger.prototype.log = function (logLevel, message) {\r\n    };\r\n    /** The singleton instance of the {@link NullLogger}. */\r\n    NullLogger.instance = new NullLogger();\r\n    return NullLogger;\r\n}());\r\nexport { NullLogger };\r\n//# sourceMappingURL=Loggers.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nimport { HttpConnection } from \"./HttpConnection\";\r\nimport { HubConnection } from \"./HubConnection\";\r\nimport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { Arg, ConsoleLogger } from \"./Utils\";\r\n/** A builder for configuring {@link HubConnection} instances. */\r\nvar HubConnectionBuilder = /** @class */ (function () {\r\n    function HubConnectionBuilder() {\r\n    }\r\n    HubConnectionBuilder.prototype.configureLogging = function (logging) {\r\n        Arg.isRequired(logging, \"logging\");\r\n        if (isLogger(logging)) {\r\n            this.logger = logging;\r\n        }\r\n        else {\r\n            this.logger = new ConsoleLogger(logging);\r\n        }\r\n        return this;\r\n    };\r\n    HubConnectionBuilder.prototype.withUrl = function (url, transportTypeOrOptions) {\r\n        Arg.isRequired(url, \"url\");\r\n        this.url = url;\r\n        // Flow-typing knows where it's at. Since HttpTransportType is a number and IHttpConnectionOptions is guaranteed\r\n        // to be an object, we know (as does TypeScript) this comparison is all we need to figure out which overload was called.\r\n        if (typeof transportTypeOrOptions === \"object\") {\r\n            this.httpConnectionOptions = transportTypeOrOptions;\r\n        }\r\n        else {\r\n            this.httpConnectionOptions = {\r\n                transport: transportTypeOrOptions,\r\n            };\r\n        }\r\n        return this;\r\n    };\r\n    /** Configures the {@link HubConnection} to use the specified Hub Protocol.\r\n     *\r\n     * @param {IHubProtocol} protocol The {@link IHubProtocol} implementation to use.\r\n     */\r\n    HubConnectionBuilder.prototype.withHubProtocol = function (protocol) {\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.protocol = protocol;\r\n        return this;\r\n    };\r\n    /** Creates a {@link HubConnection} from the configuration options specified in this builder.\r\n     *\r\n     * @returns {HubConnection} The configured {@link HubConnection}.\r\n     */\r\n    HubConnectionBuilder.prototype.build = function () {\r\n        // If httpConnectionOptions has a logger, use it. Otherwise, override it with the one\r\n        // provided to configureLogger\r\n        var httpConnectionOptions = this.httpConnectionOptions || {};\r\n        // If it's 'null', the user **explicitly** asked for null, don't mess with it.\r\n        if (httpConnectionOptions.logger === undefined) {\r\n            // If our logger is undefined or null, that's OK, the HttpConnection constructor will handle it.\r\n            httpConnectionOptions.logger = this.logger;\r\n        }\r\n        // Now create the connection\r\n        if (!this.url) {\r\n            throw new Error(\"The 'HubConnectionBuilder.withUrl' method must be called before building the connection.\");\r\n        }\r\n        var connection = new HttpConnection(this.url, httpConnectionOptions);\r\n        return HubConnection.create(connection, this.logger || NullLogger.instance, this.protocol || new JsonHubProtocol());\r\n    };\r\n    return HubConnectionBuilder;\r\n}());\r\nexport { HubConnectionBuilder };\r\nfunction isLogger(logger) {\r\n    return logger.log !== undefined;\r\n}\r\n//# sourceMappingURL=HubConnectionBuilder.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DefaultHttpClient } from \"./HttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { HttpTransportType, TransferFormat } from \"./ITransport\";\r\nimport { LongPollingTransport } from \"./LongPollingTransport\";\r\nimport { ServerSentEventsTransport } from \"./ServerSentEventsTransport\";\r\nimport { Arg, createLogger } from \"./Utils\";\r\nimport { WebSocketTransport } from \"./WebSocketTransport\";\r\nvar MAX_REDIRECTS = 100;\r\nvar HttpConnection = /** @class */ (function () {\r\n    function HttpConnection(url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        this.features = {};\r\n        Arg.isRequired(url, \"url\");\r\n        this.logger = createLogger(options.logger);\r\n        this.baseUrl = this.resolveUrl(url);\r\n        options = options || {};\r\n        options.accessTokenFactory = options.accessTokenFactory || (function () { return null; });\r\n        options.logMessageContent = options.logMessageContent || false;\r\n        this.httpClient = options.httpClient || new DefaultHttpClient(this.logger);\r\n        this.connectionState = 2 /* Disconnected */;\r\n        this.options = options;\r\n    }\r\n    HttpConnection.prototype.start = function (transferFormat) {\r\n        transferFormat = transferFormat || TransferFormat.Binary;\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this.logger.log(LogLevel.Debug, \"Starting connection with transfer format '\" + TransferFormat[transferFormat] + \"'.\");\r\n        if (this.connectionState !== 2 /* Disconnected */) {\r\n            return Promise.reject(new Error(\"Cannot start a connection that is not in the 'Disconnected' state.\"));\r\n        }\r\n        this.connectionState = 0 /* Connecting */;\r\n        this.startPromise = this.startInternal(transferFormat);\r\n        return this.startPromise;\r\n    };\r\n    HttpConnection.prototype.send = function (data) {\r\n        if (this.connectionState !== 1 /* Connected */) {\r\n            throw new Error(\"Cannot send data if the connection is not in the 'Connected' State.\");\r\n        }\r\n        return this.transport.send(data);\r\n    };\r\n    HttpConnection.prototype.stop = function (error) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var e_1;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.connectionState = 2 /* Disconnected */;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.startPromise];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 4:\r\n                        if (!this.transport) return [3 /*break*/, 6];\r\n                        this.stopError = error;\r\n                        return [4 /*yield*/, this.transport.stop()];\r\n                    case 5:\r\n                        _a.sent();\r\n                        this.transport = null;\r\n                        _a.label = 6;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.startInternal = function (transferFormat) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            var url, negotiateResponse, redirects, _loop_1, this_1, state_1, e_2;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        url = this.baseUrl;\r\n                        this.accessTokenFactory = this.options.accessTokenFactory;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 12, , 13]);\r\n                        if (!this.options.skipNegotiation) return [3 /*break*/, 5];\r\n                        if (!(this.options.transport === HttpTransportType.WebSockets)) return [3 /*break*/, 3];\r\n                        // No need to add a connection ID in this case\r\n                        this.transport = this.constructTransport(HttpTransportType.WebSockets);\r\n                        // We should just call connect directly in this case.\r\n                        // No fallback or negotiate in this case.\r\n                        return [4 /*yield*/, this.transport.connect(url, transferFormat)];\r\n                    case 2:\r\n                        // We should just call connect directly in this case.\r\n                        // No fallback or negotiate in this case.\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3: throw Error(\"Negotiation can only be skipped when using the WebSocket transport directly.\");\r\n                    case 4: return [3 /*break*/, 11];\r\n                    case 5:\r\n                        negotiateResponse = null;\r\n                        redirects = 0;\r\n                        _loop_1 = function () {\r\n                            var accessToken_1;\r\n                            return tslib_1.__generator(this, function (_a) {\r\n                                switch (_a.label) {\r\n                                    case 0: return [4 /*yield*/, this_1.getNegotiationResponse(url)];\r\n                                    case 1:\r\n                                        negotiateResponse = _a.sent();\r\n                                        // the user tries to stop the connection when it is being started\r\n                                        if (this_1.connectionState === 2 /* Disconnected */) {\r\n                                            return [2 /*return*/, { value: void 0 }];\r\n                                        }\r\n                                        if (negotiateResponse.url) {\r\n                                            url = negotiateResponse.url;\r\n                                        }\r\n                                        if (negotiateResponse.accessToken) {\r\n                                            accessToken_1 = negotiateResponse.accessToken;\r\n                                            this_1.accessTokenFactory = function () { return accessToken_1; };\r\n                                        }\r\n                                        redirects++;\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        };\r\n                        this_1 = this;\r\n                        _a.label = 6;\r\n                    case 6: return [5 /*yield**/, _loop_1()];\r\n                    case 7:\r\n                        state_1 = _a.sent();\r\n                        if (typeof state_1 === \"object\")\r\n                            return [2 /*return*/, state_1.value];\r\n                        _a.label = 8;\r\n                    case 8:\r\n                        if (negotiateResponse.url && redirects < MAX_REDIRECTS) return [3 /*break*/, 6];\r\n                        _a.label = 9;\r\n                    case 9:\r\n                        if (redirects === MAX_REDIRECTS && negotiateResponse.url) {\r\n                            throw Error(\"Negotiate redirection limit exceeded.\");\r\n                        }\r\n                        return [4 /*yield*/, this.createTransport(url, this.options.transport, negotiateResponse, transferFormat)];\r\n                    case 10:\r\n                        _a.sent();\r\n                        _a.label = 11;\r\n                    case 11:\r\n                        if (this.transport instanceof LongPollingTransport) {\r\n                            this.features.inherentKeepAlive = true;\r\n                        }\r\n                        this.transport.onreceive = this.onreceive;\r\n                        this.transport.onclose = function (e) { return _this.stopConnection(e); };\r\n                        // only change the state if we were connecting to not overwrite\r\n                        // the state if the connection is already marked as Disconnected\r\n                        this.changeState(0 /* Connecting */, 1 /* Connected */);\r\n                        return [3 /*break*/, 13];\r\n                    case 12:\r\n                        e_2 = _a.sent();\r\n                        this.logger.log(LogLevel.Error, \"Failed to start the connection: \" + e_2);\r\n                        this.connectionState = 2 /* Disconnected */;\r\n                        this.transport = null;\r\n                        throw e_2;\r\n                    case 13: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.getNegotiationResponse = function (url) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var token, headers, negotiateUrl, response, e_3, _a;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 1:\r\n                        token = _b.sent();\r\n                        if (token) {\r\n                            headers = (_a = {},\r\n                                _a[\"Authorization\"] = \"Bearer \" + token,\r\n                                _a);\r\n                        }\r\n                        negotiateUrl = this.resolveNegotiateUrl(url);\r\n                        this.logger.log(LogLevel.Debug, \"Sending negotiation request: \" + negotiateUrl);\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        _b.trys.push([2, 4, , 5]);\r\n                        return [4 /*yield*/, this.httpClient.post(negotiateUrl, {\r\n                                content: \"\",\r\n                                headers: headers,\r\n                            })];\r\n                    case 3:\r\n                        response = _b.sent();\r\n                        if (response.statusCode !== 200) {\r\n                            throw Error(\"Unexpected status code returned from negotiate \" + response.statusCode);\r\n                        }\r\n                        return [2 /*return*/, JSON.parse(response.content)];\r\n                    case 4:\r\n                        e_3 = _b.sent();\r\n                        this.logger.log(LogLevel.Error, \"Failed to complete negotiation with the server: \" + e_3);\r\n                        throw e_3;\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.createConnectUrl = function (url, connectionId) {\r\n        return url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + (\"id=\" + connectionId);\r\n    };\r\n    HttpConnection.prototype.createTransport = function (url, requestedTransport, negotiateResponse, requestedTransferFormat) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var connectUrl, transports, _i, transports_1, endpoint, transport, ex_1;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        connectUrl = this.createConnectUrl(url, negotiateResponse.connectionId);\r\n                        if (!this.isITransport(requestedTransport)) return [3 /*break*/, 2];\r\n                        this.logger.log(LogLevel.Debug, \"Connection was provided an instance of ITransport, using that directly.\");\r\n                        this.transport = requestedTransport;\r\n                        return [4 /*yield*/, this.transport.connect(connectUrl, requestedTransferFormat)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        // only change the state if we were connecting to not overwrite\r\n                        // the state if the connection is already marked as Disconnected\r\n                        this.changeState(0 /* Connecting */, 1 /* Connected */);\r\n                        return [2 /*return*/];\r\n                    case 2:\r\n                        transports = negotiateResponse.availableTransports;\r\n                        _i = 0, transports_1 = transports;\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        if (!(_i < transports_1.length)) return [3 /*break*/, 9];\r\n                        endpoint = transports_1[_i];\r\n                        this.connectionState = 0 /* Connecting */;\r\n                        transport = this.resolveTransport(endpoint, requestedTransport, requestedTransferFormat);\r\n                        if (!(typeof transport === \"number\")) return [3 /*break*/, 8];\r\n                        this.transport = this.constructTransport(transport);\r\n                        if (!(negotiateResponse.connectionId === null)) return [3 /*break*/, 5];\r\n                        return [4 /*yield*/, this.getNegotiationResponse(url)];\r\n                    case 4:\r\n                        negotiateResponse = _a.sent();\r\n                        connectUrl = this.createConnectUrl(url, negotiateResponse.connectionId);\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        _a.trys.push([5, 7, , 8]);\r\n                        return [4 /*yield*/, this.transport.connect(connectUrl, requestedTransferFormat)];\r\n                    case 6:\r\n                        _a.sent();\r\n                        this.changeState(0 /* Connecting */, 1 /* Connected */);\r\n                        return [2 /*return*/];\r\n                    case 7:\r\n                        ex_1 = _a.sent();\r\n                        this.logger.log(LogLevel.Error, \"Failed to start the transport '\" + HttpTransportType[transport] + \"': \" + ex_1);\r\n                        this.connectionState = 2 /* Disconnected */;\r\n                        negotiateResponse.connectionId = null;\r\n                        return [3 /*break*/, 8];\r\n                    case 8:\r\n                        _i++;\r\n                        return [3 /*break*/, 3];\r\n                    case 9: throw new Error(\"Unable to initialize any of the available transports.\");\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.constructTransport = function (transport) {\r\n        switch (transport) {\r\n            case HttpTransportType.WebSockets:\r\n                return new WebSocketTransport(this.accessTokenFactory, this.logger, this.options.logMessageContent);\r\n            case HttpTransportType.ServerSentEvents:\r\n                return new ServerSentEventsTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent);\r\n            case HttpTransportType.LongPolling:\r\n                return new LongPollingTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent);\r\n            default:\r\n                throw new Error(\"Unknown transport: \" + transport + \".\");\r\n        }\r\n    };\r\n    HttpConnection.prototype.resolveTransport = function (endpoint, requestedTransport, requestedTransferFormat) {\r\n        var transport = HttpTransportType[endpoint.transport];\r\n        if (transport === null || transport === undefined) {\r\n            this.logger.log(LogLevel.Debug, \"Skipping transport '\" + endpoint.transport + \"' because it is not supported by this client.\");\r\n        }\r\n        else {\r\n            var transferFormats = endpoint.transferFormats.map(function (s) { return TransferFormat[s]; });\r\n            if (transportMatches(requestedTransport, transport)) {\r\n                if (transferFormats.indexOf(requestedTransferFormat) >= 0) {\r\n                    if ((transport === HttpTransportType.WebSockets && typeof WebSocket === \"undefined\") ||\r\n                        (transport === HttpTransportType.ServerSentEvents && typeof EventSource === \"undefined\")) {\r\n                        this.logger.log(LogLevel.Debug, \"Skipping transport '\" + HttpTransportType[transport] + \"' because it is not supported in your environment.'\");\r\n                    }\r\n                    else {\r\n                        this.logger.log(LogLevel.Debug, \"Selecting transport '\" + HttpTransportType[transport] + \"'\");\r\n                        return transport;\r\n                    }\r\n                }\r\n                else {\r\n                    this.logger.log(LogLevel.Debug, \"Skipping transport '\" + HttpTransportType[transport] + \"' because it does not support the requested transfer format '\" + TransferFormat[requestedTransferFormat] + \"'.\");\r\n                }\r\n            }\r\n            else {\r\n                this.logger.log(LogLevel.Debug, \"Skipping transport '\" + HttpTransportType[transport] + \"' because it was disabled by the client.\");\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    HttpConnection.prototype.isITransport = function (transport) {\r\n        return transport && typeof (transport) === \"object\" && \"connect\" in transport;\r\n    };\r\n    HttpConnection.prototype.changeState = function (from, to) {\r\n        if (this.connectionState === from) {\r\n            this.connectionState = to;\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    HttpConnection.prototype.stopConnection = function (error) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                this.transport = null;\r\n                // If we have a stopError, it takes precedence over the error from the transport\r\n                error = this.stopError || error;\r\n                if (error) {\r\n                    this.logger.log(LogLevel.Error, \"Connection disconnected with error '\" + error + \"'.\");\r\n                }\r\n                else {\r\n                    this.logger.log(LogLevel.Information, \"Connection disconnected.\");\r\n                }\r\n                this.connectionState = 2 /* Disconnected */;\r\n                if (this.onclose) {\r\n                    this.onclose(error);\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    HttpConnection.prototype.resolveUrl = function (url) {\r\n        // startsWith is not supported in IE\r\n        if (url.lastIndexOf(\"https://\", 0) === 0 || url.lastIndexOf(\"http://\", 0) === 0) {\r\n            return url;\r\n        }\r\n        if (typeof window === \"undefined\" || !window || !window.document) {\r\n            throw new Error(\"Cannot resolve '\" + url + \"'.\");\r\n        }\r\n        // Setting the url to the href propery of an anchor tag handles normalization\r\n        // for us. There are 3 main cases.\r\n        // 1. Relative  path normalization e.g \"b\" -> \"http://localhost:5000/a/b\"\r\n        // 2. Absolute path normalization e.g \"/a/b\" -> \"http://localhost:5000/a/b\"\r\n        // 3. Networkpath reference normalization e.g \"//localhost:5000/a/b\" -> \"http://localhost:5000/a/b\"\r\n        var aTag = window.document.createElement(\"a\");\r\n        aTag.href = url;\r\n        this.logger.log(LogLevel.Information, \"Normalizing '\" + url + \"' to '\" + aTag.href + \"'.\");\r\n        return aTag.href;\r\n    };\r\n    HttpConnection.prototype.resolveNegotiateUrl = function (url) {\r\n        var index = url.indexOf(\"?\");\r\n        var negotiateUrl = url.substring(0, index === -1 ? url.length : index);\r\n        if (negotiateUrl[negotiateUrl.length - 1] !== \"/\") {\r\n            negotiateUrl += \"/\";\r\n        }\r\n        negotiateUrl += \"negotiate\";\r\n        negotiateUrl += index === -1 ? \"\" : url.substring(index);\r\n        return negotiateUrl;\r\n    };\r\n    return HttpConnection;\r\n}());\r\nexport { HttpConnection };\r\nfunction transportMatches(requestedTransport, actualTransport) {\r\n    return !requestedTransport || ((actualTransport & requestedTransport) !== 0);\r\n}\r\n//# sourceMappingURL=HttpConnection.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// This will be treated as a bit flag in the future, so we keep it using power-of-two values.\r\n/** Specifies a specific HTTP transport type. */\r\nexport var HttpTransportType;\r\n(function (HttpTransportType) {\r\n    /** Specifies no transport preference. */\r\n    HttpTransportType[HttpTransportType[\"None\"] = 0] = \"None\";\r\n    /** Specifies the WebSockets transport. */\r\n    HttpTransportType[HttpTransportType[\"WebSockets\"] = 1] = \"WebSockets\";\r\n    /** Specifies the Server-Sent Events transport. */\r\n    HttpTransportType[HttpTransportType[\"ServerSentEvents\"] = 2] = \"ServerSentEvents\";\r\n    /** Specifies the Long Polling transport. */\r\n    HttpTransportType[HttpTransportType[\"LongPolling\"] = 4] = \"LongPolling\";\r\n})(HttpTransportType || (HttpTransportType = {}));\r\n/** Specifies the transfer format for a connection. */\r\nexport var TransferFormat;\r\n(function (TransferFormat) {\r\n    /** Specifies that only text data will be transmitted over the connection. */\r\n    TransferFormat[TransferFormat[\"Text\"] = 1] = \"Text\";\r\n    /** Specifies that binary data will be transmitted over the connection. */\r\n    TransferFormat[TransferFormat[\"Binary\"] = 2] = \"Binary\";\r\n})(TransferFormat || (TransferFormat = {}));\r\n//# sourceMappingURL=ITransport.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { AbortController } from \"./AbortController\";\r\nimport { HttpError, TimeoutError } from \"./Errors\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, sendMessage } from \"./Utils\";\r\nvar SHUTDOWN_TIMEOUT = 5 * 1000;\r\n// Not exported from 'index', this type is internal.\r\nvar LongPollingTransport = /** @class */ (function () {\r\n    function LongPollingTransport(httpClient, accessTokenFactory, logger, logMessageContent, shutdownTimeout) {\r\n        this.httpClient = httpClient;\r\n        this.accessTokenFactory = accessTokenFactory || (function () { return null; });\r\n        this.logger = logger;\r\n        this.pollAbort = new AbortController();\r\n        this.logMessageContent = logMessageContent;\r\n        this.shutdownTimeout = shutdownTimeout || SHUTDOWN_TIMEOUT;\r\n    }\r\n    Object.defineProperty(LongPollingTransport.prototype, \"pollAborted\", {\r\n        // This is an internal type, not exported from 'index' so this is really just internal.\r\n        get: function () {\r\n            return this.pollAbort.aborted;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LongPollingTransport.prototype.connect = function (url, transferFormat) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var pollOptions, token, closeError, pollUrl, response;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        Arg.isRequired(url, \"url\");\r\n                        Arg.isRequired(transferFormat, \"transferFormat\");\r\n                        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n                        this.url = url;\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Connecting\");\r\n                        if (transferFormat === TransferFormat.Binary && (typeof new XMLHttpRequest().responseType !== \"string\")) {\r\n                            // This will work if we fix: https://github.com/aspnet/SignalR/issues/742\r\n                            throw new Error(\"Binary protocols over XmlHttpRequest not implementing advanced features are not supported.\");\r\n                        }\r\n                        pollOptions = {\r\n                            abortSignal: this.pollAbort.signal,\r\n                            headers: {},\r\n                            timeout: 90000,\r\n                        };\r\n                        if (transferFormat === TransferFormat.Binary) {\r\n                            pollOptions.responseType = \"arraybuffer\";\r\n                        }\r\n                        return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 1:\r\n                        token = _a.sent();\r\n                        this.updateHeaderToken(pollOptions, token);\r\n                        pollUrl = url + \"&_=\" + Date.now();\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) polling: \" + pollUrl);\r\n                        return [4 /*yield*/, this.httpClient.get(pollUrl, pollOptions)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        if (response.statusCode !== 200) {\r\n                            this.logger.log(LogLevel.Error, \"(LongPolling transport) Unexpected response code: \" + response.statusCode);\r\n                            // Mark running as false so that the poll immediately ends and runs the close logic\r\n                            closeError = new HttpError(response.statusText, response.statusCode);\r\n                            this.running = false;\r\n                        }\r\n                        else {\r\n                            this.running = true;\r\n                        }\r\n                        this.poll(this.url, pollOptions, closeError);\r\n                        return [2 /*return*/, Promise.resolve()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    LongPollingTransport.prototype.updateHeaderToken = function (request, token) {\r\n        if (token) {\r\n            // tslint:disable-next-line:no-string-literal\r\n            request.headers[\"Authorization\"] = \"Bearer \" + token;\r\n            return;\r\n        }\r\n        // tslint:disable-next-line:no-string-literal\r\n        if (request.headers[\"Authorization\"]) {\r\n            // tslint:disable-next-line:no-string-literal\r\n            delete request.headers[\"Authorization\"];\r\n        }\r\n    };\r\n    LongPollingTransport.prototype.poll = function (url, pollOptions, closeError) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var token, pollUrl, response, e_1;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, , 8, 9]);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        if (!this.running) return [3 /*break*/, 7];\r\n                        return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 2:\r\n                        token = _a.sent();\r\n                        this.updateHeaderToken(pollOptions, token);\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        _a.trys.push([3, 5, , 6]);\r\n                        pollUrl = url + \"&_=\" + Date.now();\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) polling: \" + pollUrl);\r\n                        return [4 /*yield*/, this.httpClient.get(pollUrl, pollOptions)];\r\n                    case 4:\r\n                        response = _a.sent();\r\n                        if (response.statusCode === 204) {\r\n                            this.logger.log(LogLevel.Information, \"(LongPolling transport) Poll terminated by server\");\r\n                            this.running = false;\r\n                        }\r\n                        else if (response.statusCode !== 200) {\r\n                            this.logger.log(LogLevel.Error, \"(LongPolling transport) Unexpected response code: \" + response.statusCode);\r\n                            // Unexpected status code\r\n                            closeError = new HttpError(response.statusText, response.statusCode);\r\n                            this.running = false;\r\n                        }\r\n                        else {\r\n                            // Process the response\r\n                            if (response.content) {\r\n                                this.logger.log(LogLevel.Trace, \"(LongPolling transport) data received. \" + getDataDetail(response.content, this.logMessageContent));\r\n                                if (this.onreceive) {\r\n                                    this.onreceive(response.content);\r\n                                }\r\n                            }\r\n                            else {\r\n                                // This is another way timeout manifest.\r\n                                this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                            }\r\n                        }\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        e_1 = _a.sent();\r\n                        if (!this.running) {\r\n                            // Log but disregard errors that occur after we were stopped by DELETE\r\n                            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll errored after shutdown: \" + e_1.message);\r\n                        }\r\n                        else {\r\n                            if (e_1 instanceof TimeoutError) {\r\n                                // Ignore timeouts and reissue the poll.\r\n                                this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                            }\r\n                            else {\r\n                                // Close the connection with the error as the result.\r\n                                closeError = e_1;\r\n                                this.running = false;\r\n                            }\r\n                        }\r\n                        return [3 /*break*/, 6];\r\n                    case 6: return [3 /*break*/, 1];\r\n                    case 7: return [3 /*break*/, 9];\r\n                    case 8:\r\n                        // Indicate that we've stopped so the shutdown timer doesn't get registered.\r\n                        this.stopped = true;\r\n                        // Clean up the shutdown timer if it was registered\r\n                        if (this.shutdownTimer) {\r\n                            clearTimeout(this.shutdownTimer);\r\n                        }\r\n                        // Fire our onclosed event\r\n                        if (this.onclose) {\r\n                            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Firing onclose event. Error: \" + (closeError || \"<undefined>\"));\r\n                            this.onclose(closeError);\r\n                        }\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Transport finished.\");\r\n                        return [7 /*endfinally*/];\r\n                    case 9: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    LongPollingTransport.prototype.send = function (data) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                if (!this.running) {\r\n                    return [2 /*return*/, Promise.reject(new Error(\"Cannot send until the transport is connected\"))];\r\n                }\r\n                return [2 /*return*/, sendMessage(this.logger, \"LongPolling\", this.httpClient, this.url, this.accessTokenFactory, data, this.logMessageContent)];\r\n            });\r\n        });\r\n    };\r\n    LongPollingTransport.prototype.stop = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            var deleteOptions, token, response;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, , 3, 4]);\r\n                        this.running = false;\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) sending DELETE request to \" + this.url + \".\");\r\n                        deleteOptions = {\r\n                            headers: {},\r\n                        };\r\n                        return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 1:\r\n                        token = _a.sent();\r\n                        this.updateHeaderToken(deleteOptions, token);\r\n                        return [4 /*yield*/, this.httpClient.delete(this.url, deleteOptions)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) DELETE request accepted.\");\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        // Abort the poll after the shutdown timeout if the server doesn't stop the poll.\r\n                        if (!this.stopped) {\r\n                            this.shutdownTimer = setTimeout(function () {\r\n                                _this.logger.log(LogLevel.Warning, \"(LongPolling transport) server did not terminate after DELETE request, canceling poll.\");\r\n                                // Abort any outstanding poll\r\n                                _this.pollAbort.abort();\r\n                            }, this.shutdownTimeout);\r\n                        }\r\n                        return [7 /*endfinally*/];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return LongPollingTransport;\r\n}());\r\nexport { LongPollingTransport };\r\n//# sourceMappingURL=LongPollingTransport.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// Rough polyfill of https://developer.mozilla.org/en-US/docs/Web/API/AbortController\r\n// We don't actually ever use the API being polyfilled, we always use the polyfill because\r\n// it's a very new API right now.\r\n// Not exported from index.\r\nvar AbortController = /** @class */ (function () {\r\n    function AbortController() {\r\n        this.isAborted = false;\r\n    }\r\n    AbortController.prototype.abort = function () {\r\n        if (!this.isAborted) {\r\n            this.isAborted = true;\r\n            if (this.onabort) {\r\n                this.onabort();\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(AbortController.prototype, \"signal\", {\r\n        get: function () {\r\n            return this;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AbortController.prototype, \"aborted\", {\r\n        get: function () {\r\n            return this.isAborted;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return AbortController;\r\n}());\r\nexport { AbortController };\r\n//# sourceMappingURL=AbortController.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, sendMessage } from \"./Utils\";\r\nvar ServerSentEventsTransport = /** @class */ (function () {\r\n    function ServerSentEventsTransport(httpClient, accessTokenFactory, logger, logMessageContent) {\r\n        this.httpClient = httpClient;\r\n        this.accessTokenFactory = accessTokenFactory || (function () { return null; });\r\n        this.logger = logger;\r\n        this.logMessageContent = logMessageContent;\r\n    }\r\n    ServerSentEventsTransport.prototype.connect = function (url, transferFormat) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            var token;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        Arg.isRequired(url, \"url\");\r\n                        Arg.isRequired(transferFormat, \"transferFormat\");\r\n                        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n                        if (typeof (EventSource) === \"undefined\") {\r\n                            throw new Error(\"'EventSource' is not supported in your environment.\");\r\n                        }\r\n                        this.logger.log(LogLevel.Trace, \"(SSE transport) Connecting\");\r\n                        return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 1:\r\n                        token = _a.sent();\r\n                        if (token) {\r\n                            url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + (\"access_token=\" + encodeURIComponent(token));\r\n                        }\r\n                        this.url = url;\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                var opened = false;\r\n                                if (transferFormat !== TransferFormat.Text) {\r\n                                    reject(new Error(\"The Server-Sent Events transport only supports the 'Text' transfer format\"));\r\n                                }\r\n                                var eventSource = new EventSource(url, { withCredentials: true });\r\n                                try {\r\n                                    eventSource.onmessage = function (e) {\r\n                                        if (_this.onreceive) {\r\n                                            try {\r\n                                                _this.logger.log(LogLevel.Trace, \"(SSE transport) data received. \" + getDataDetail(e.data, _this.logMessageContent) + \".\");\r\n                                                _this.onreceive(e.data);\r\n                                            }\r\n                                            catch (error) {\r\n                                                if (_this.onclose) {\r\n                                                    _this.onclose(error);\r\n                                                }\r\n                                                return;\r\n                                            }\r\n                                        }\r\n                                    };\r\n                                    eventSource.onerror = function (e) {\r\n                                        var error = new Error(e.message || \"Error occurred\");\r\n                                        if (opened) {\r\n                                            _this.close(error);\r\n                                        }\r\n                                        else {\r\n                                            reject(error);\r\n                                        }\r\n                                    };\r\n                                    eventSource.onopen = function () {\r\n                                        _this.logger.log(LogLevel.Information, \"SSE connected to \" + _this.url);\r\n                                        _this.eventSource = eventSource;\r\n                                        opened = true;\r\n                                        resolve();\r\n                                    };\r\n                                }\r\n                                catch (e) {\r\n                                    return Promise.reject(e);\r\n                                }\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ServerSentEventsTransport.prototype.send = function (data) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                if (!this.eventSource) {\r\n                    return [2 /*return*/, Promise.reject(new Error(\"Cannot send until the transport is connected\"))];\r\n                }\r\n                return [2 /*return*/, sendMessage(this.logger, \"SSE\", this.httpClient, this.url, this.accessTokenFactory, data, this.logMessageContent)];\r\n            });\r\n        });\r\n    };\r\n    ServerSentEventsTransport.prototype.stop = function () {\r\n        this.close();\r\n        return Promise.resolve();\r\n    };\r\n    ServerSentEventsTransport.prototype.close = function (e) {\r\n        if (this.eventSource) {\r\n            this.eventSource.close();\r\n            this.eventSource = null;\r\n            if (this.onclose) {\r\n                this.onclose(e);\r\n            }\r\n        }\r\n    };\r\n    return ServerSentEventsTransport;\r\n}());\r\nexport { ServerSentEventsTransport };\r\n//# sourceMappingURL=ServerSentEventsTransport.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail } from \"./Utils\";\r\nvar WebSocketTransport = /** @class */ (function () {\r\n    function WebSocketTransport(accessTokenFactory, logger, logMessageContent) {\r\n        this.logger = logger;\r\n        this.accessTokenFactory = accessTokenFactory || (function () { return null; });\r\n        this.logMessageContent = logMessageContent;\r\n    }\r\n    WebSocketTransport.prototype.connect = function (url, transferFormat) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            var token;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        Arg.isRequired(url, \"url\");\r\n                        Arg.isRequired(transferFormat, \"transferFormat\");\r\n                        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n                        if (typeof (WebSocket) === \"undefined\") {\r\n                            throw new Error(\"'WebSocket' is not supported in your environment.\");\r\n                        }\r\n                        this.logger.log(LogLevel.Trace, \"(WebSockets transport) Connecting\");\r\n                        return [4 /*yield*/, this.accessTokenFactory()];\r\n                    case 1:\r\n                        token = _a.sent();\r\n                        if (token) {\r\n                            url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + (\"access_token=\" + encodeURIComponent(token));\r\n                        }\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                url = url.replace(/^http/, \"ws\");\r\n                                var webSocket = new WebSocket(url);\r\n                                if (transferFormat === TransferFormat.Binary) {\r\n                                    webSocket.binaryType = \"arraybuffer\";\r\n                                }\r\n                                webSocket.onopen = function (event) {\r\n                                    _this.logger.log(LogLevel.Information, \"WebSocket connected to \" + url);\r\n                                    _this.webSocket = webSocket;\r\n                                    resolve();\r\n                                };\r\n                                webSocket.onerror = function (event) {\r\n                                    reject(event.error);\r\n                                };\r\n                                webSocket.onmessage = function (message) {\r\n                                    _this.logger.log(LogLevel.Trace, \"(WebSockets transport) data received. \" + getDataDetail(message.data, _this.logMessageContent) + \".\");\r\n                                    if (_this.onreceive) {\r\n                                        _this.onreceive(message.data);\r\n                                    }\r\n                                };\r\n                                webSocket.onclose = function (event) {\r\n                                    // webSocket will be null if the transport did not start successfully\r\n                                    _this.logger.log(LogLevel.Trace, \"(WebSockets transport) socket closed.\");\r\n                                    if (_this.onclose) {\r\n                                        if (event.wasClean === false || event.code !== 1000) {\r\n                                            _this.onclose(new Error(\"Websocket closed with status code: \" + event.code + \" (\" + event.reason + \")\"));\r\n                                        }\r\n                                        else {\r\n                                            _this.onclose();\r\n                                        }\r\n                                    }\r\n                                };\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    WebSocketTransport.prototype.send = function (data) {\r\n        if (this.webSocket && this.webSocket.readyState === WebSocket.OPEN) {\r\n            this.logger.log(LogLevel.Trace, \"(WebSockets transport) sending data. \" + getDataDetail(data, this.logMessageContent) + \".\");\r\n            this.webSocket.send(data);\r\n            return Promise.resolve();\r\n        }\r\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\r\n    };\r\n    WebSocketTransport.prototype.stop = function () {\r\n        if (this.webSocket) {\r\n            this.webSocket.close();\r\n            this.webSocket = null;\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n    return WebSocketTransport;\r\n}());\r\nexport { WebSocketTransport };\r\n//# sourceMappingURL=WebSocketTransport.js.map","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nvar JSON_HUB_PROTOCOL_NAME = \"json\";\r\n/** Implements the JSON Hub Protocol. */\r\nvar JsonHubProtocol = /** @class */ (function () {\r\n    function JsonHubProtocol() {\r\n        /** @inheritDoc */\r\n        this.name = JSON_HUB_PROTOCOL_NAME;\r\n        /** @inheritDoc */\r\n        this.version = 1;\r\n        /** @inheritDoc */\r\n        this.transferFormat = TransferFormat.Text;\r\n    }\r\n    /** Creates an array of {@link HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * @param {string} input A string containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    JsonHubProtocol.prototype.parseMessages = function (input, logger) {\r\n        // The interface does allow \"ArrayBuffer\" to be passed in, but this implementation does not. So let's throw a useful error.\r\n        if (typeof input !== \"string\") {\r\n            throw new Error(\"Invalid input for JSON hub protocol. Expected a string.\");\r\n        }\r\n        if (!input) {\r\n            return [];\r\n        }\r\n        if (logger === null) {\r\n            logger = NullLogger.instance;\r\n        }\r\n        // Parse the messages\r\n        var messages = TextMessageFormat.parse(input);\r\n        var hubMessages = [];\r\n        for (var _i = 0, messages_1 = messages; _i < messages_1.length; _i++) {\r\n            var message = messages_1[_i];\r\n            var parsedMessage = JSON.parse(message);\r\n            if (typeof parsedMessage.type !== \"number\") {\r\n                throw new Error(\"Invalid payload.\");\r\n            }\r\n            switch (parsedMessage.type) {\r\n                case MessageType.Invocation:\r\n                    this.isInvocationMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.StreamItem:\r\n                    this.isStreamItemMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Completion:\r\n                    this.isCompletionMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Ping:\r\n                    // Single value, no need to validate\r\n                    break;\r\n                case MessageType.Close:\r\n                    // All optional values, no need to validate\r\n                    break;\r\n                default:\r\n                    // Future protocol changes can add message types, old clients can ignore them\r\n                    logger.log(LogLevel.Information, \"Unknown message type '\" + parsedMessage.type + \"' ignored.\");\r\n                    continue;\r\n            }\r\n            hubMessages.push(parsedMessage);\r\n        }\r\n        return hubMessages;\r\n    };\r\n    /** Writes the specified {@link HubMessage} to a string and returns it.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string} A string containing the serialized representation of the message.\r\n     */\r\n    JsonHubProtocol.prototype.writeMessage = function (message) {\r\n        return TextMessageFormat.write(JSON.stringify(message));\r\n    };\r\n    JsonHubProtocol.prototype.isInvocationMessage = function (message) {\r\n        this.assertNotEmptyString(message.target, \"Invalid payload for Invocation message.\");\r\n        if (message.invocationId !== undefined) {\r\n            this.assertNotEmptyString(message.invocationId, \"Invalid payload for Invocation message.\");\r\n        }\r\n    };\r\n    JsonHubProtocol.prototype.isStreamItemMessage = function (message) {\r\n        this.assertNotEmptyString(message.invocationId, \"Invalid payload for StreamItem message.\");\r\n        if (message.item === undefined) {\r\n            throw new Error(\"Invalid payload for StreamItem message.\");\r\n        }\r\n    };\r\n    JsonHubProtocol.prototype.isCompletionMessage = function (message) {\r\n        if (message.result && message.error) {\r\n            throw new Error(\"Invalid payload for Completion message.\");\r\n        }\r\n        if (!message.result && message.error) {\r\n            this.assertNotEmptyString(message.error, \"Invalid payload for Completion message.\");\r\n        }\r\n        this.assertNotEmptyString(message.invocationId, \"Invalid payload for Completion message.\");\r\n    };\r\n    JsonHubProtocol.prototype.assertNotEmptyString = function (value, errorMessage) {\r\n        if (typeof value !== \"string\" || value === \"\") {\r\n            throw new Error(errorMessage);\r\n        }\r\n    };\r\n    return JsonHubProtocol;\r\n}());\r\nexport { JsonHubProtocol };\r\n//# sourceMappingURL=JsonHubProtocol.js.map","import * as eg from \"../../endgate/endgate\";\r\nimport { ConfigurationManager } from \"./Configuration/ConfigurationManager\";\r\nimport { ShipManager } from \"./Ships/ShipManager\";\r\nimport { BulletManager } from \"./Bullets/BulletManager\";\r\nimport { PowerupManager } from \"./Powerups/PowerupManager\";\r\nimport { DebugManager } from \"./Debug/DebugManager\";\r\nimport { HUDManager } from \"./HUD/HUDManager\";\r\nimport { GameScreen } from \"./GameScreen\";\r\nimport { ServerAdapter } from \"./Server/ServerAdapter\";\r\nimport { IClientInitialization } from \"./Server/IClientInitialization\";\r\nimport { ShipBodyGraphic } from \"./Ships/Graphics/ShipBodyGraphic\";\r\nimport { UserShipManager } from \"./User/UserShipManager\";\r\nimport { IPayloadData } from \"./Server/IPayloadDefinitions\";\r\nimport { Map } from \"./Space/Map\";\r\nimport { AreaRenderer } from \"./Space/AreaRenderer\";\r\n\r\nexport class Game extends eg.Game {\r\n    public static GameConfiguration: ConfigurationManager;\r\n\r\n    private _shipManager: ShipManager;\r\n    private _bulletManager: BulletManager;\r\n    private _powerupManager: PowerupManager;\r\n    private _debugManager: DebugManager;\r\n    private _bufferedViewport: eg.Bounds.BoundingRectangle;\r\n    private _map: Map;\r\n    private _hud: HUDManager;\r\n\r\n    constructor(gameCanvas: HTMLCanvasElement, gameScreen: GameScreen, serverAdapter: ServerAdapter, initializationData: IClientInitialization) {\r\n        super(gameCanvas);\r\n\r\n        Game.GameConfiguration = new ConfigurationManager(initializationData.Configuration);\r\n\r\n        this.Configuration.CollisionConfiguration.MinQuadTreeNodeSize = new eg.Size2d(75); // Size of a ship\r\n        this.Configuration.CollisionConfiguration.InitialQuadTreeSize = new eg.Size2d(10125); // Initial Map Size x 2\r\n\r\n        this._bufferedViewport = new eg.Bounds.BoundingRectangle(this.Scene.Camera.Position, this.Scene.Camera.Size.Add(GameScreen.SCREEN_BUFFER_AREA));\r\n        this._shipManager = new ShipManager(this._bufferedViewport, this.Scene, this.CollisionManager, this.Content);\r\n        this._shipManager.Initialize(new UserShipManager(initializationData.ShipID, this._shipManager, this.CollisionManager, this.Input, this.Scene.Camera, serverAdapter));\r\n        this._bulletManager = new BulletManager(this._bufferedViewport, this.Scene, this.Content);\r\n        this._powerupManager = new PowerupManager(this._bufferedViewport, this.Scene, this.Content);\r\n        this._map = new Map(this.Scene, this.CollisionManager, this.Content, this.Input.Keyboard, serverAdapter);\r\n        this._debugManager = new DebugManager(initializationData.ShipID, this, serverAdapter);\r\n        this._hud = new HUDManager(initializationData, this._shipManager, (<AreaRenderer>this._map.AreaRenderer), this.Input.Keyboard, serverAdapter);\r\n\r\n        serverAdapter.OnPayload.Bind((payload: IPayloadData) => {\r\n            this._shipManager.LoadPayload(payload);\r\n            this._bulletManager.LoadPayload(payload);\r\n            this._powerupManager.LoadPayload(payload);\r\n            this._hud.LoadPayload(payload);\r\n            this._debugManager.LoadPayload(payload);\r\n        });\r\n\r\n        gameScreen.OnResize.Bind((newSize: eg.Size2d) => {\r\n            this._hud.OnScreenResize(newSize);\r\n            this._bufferedViewport.Size = newSize.Add(GameScreen.SCREEN_BUFFER_AREA);\r\n        });\r\n    }\r\n\r\n    public LoadContent(): void {\r\n        this.Content.LoadImage(\"StarBackground\", \"/Images/bg_stars.png\", 1000, 1000);\r\n        this.Content.LoadImage(\"BulletExplosion\", \"/Images/SpriteSheets/explosion_1.png\", 320, 320);\r\n        this.Content.LoadImage(\"ShipExplosion\", \"/Images/SpriteSheets/explosion_2.png\", 768, 640);\r\n        this.Content.LoadImage(\"Bullet\", \"/Images/Laser.png\", 13, 13);\r\n        this.Content.LoadImage(\"Ship1\", \"/Images/Ships/ship_lvl1.png\", 75, 75);\r\n        this.Content.LoadImage(\"Ship3\", \"/Images/Ships/ship_lvl3.png\", 75, 75);\r\n        this.Content.LoadImage(\"Ship5\", \"/Images/Ships/ship_lvl5.png\", 75, 75);\r\n        this.Content.LoadImage(\"Ship7\", \"/Images/Ships/ship_lvl7.png\", 75, 75);\r\n        this.Content.LoadImage(\"Ship8\", \"/Images/Ships/ship_lvl8.png\", 75, 75);\r\n        this.Content.LoadImage(\"Ship9\", \"/Images/Ships/ship_lvl9.png\", 75, 75);\r\n        this.Content.LoadImage(\"Ship10\", \"/Images/Ships/ship_lvl10.png\", 75, 75);\r\n        this.Content.LoadImage(\"Ship12\", \"/Images/Ships/LaserCat.png\", 75, 75);\r\n        this.Content.LoadImage(\"Thrust\", \"/Images/SpriteSheets/thrust_basic.png\", 468, 100);\r\n        this.Content.LoadImage(\"ThrustStart\", \"/Images/SpriteSheets/thrust_start.png\", 468, 100);\r\n        this.Content.LoadImage(\"Boost\", \"/Images/SpriteSheets/thrusters-BOOST.png\", 400, 150);\r\n        this.Content.LoadImage(\"HealthPack\", \"/Images/SpriteSheets/health_pack.png\", 450, 100);\r\n        this.Content.LoadImage(\"ShipDamage1\", \"/Images/Ships/Damage/damage_1.png\", 75, 75);\r\n        this.Content.LoadImage(\"ShipDamage3\", \"/Images/Ships/Damage/damage_2.png\", 75, 75);\r\n        this.Content.LoadImage(\"ShipDamage5\", \"/Images/Ships/Damage/damage_3.png\", 75, 75);\r\n        this.Content.LoadImage(\"ShipDamage7\", \"/Images/Ships/Damage/damage_4.png\", 75, 75);\r\n\r\n        ShipBodyGraphic.LoadShipBodies(this.Content);\r\n    }\r\n\r\n    public Update(gameTime: eg.GameTime): void {\r\n        this._bufferedViewport.Position = this.Scene.Camera.Position;\r\n\r\n        this._shipManager.Update(gameTime);\r\n        this._bulletManager.Update(gameTime);\r\n        this._powerupManager.Update(gameTime);\r\n        this._hud.Update(gameTime);\r\n        this._debugManager.Update(gameTime);            \r\n    }\r\n\r\n    // Most drawing takes place via the Scene.\r\n    // This method can be used to draw items to the game screen with raw canvas API's.\r\n    // I don't do this because there's no need :), i only update the debug manager in order to track the draw rate.\r\n    public Draw(context: CanvasRenderingContext2D): void {\r\n        this._debugManager.Draw(context);\r\n    }\r\n}\r\n","export * from \"./Bounds/Bounds\";\r\nexport * from \"./Collision/Collision\";\r\nexport * from \"./Graphics/Graphics\";\r\nexport * from \"./Input/Input\";\r\nexport * from \"./InputControllers/InputControllers\";\r\nexport * from \"./MapLoaders/MapLoaders\";\r\nexport * from \"./MovementControllers/MovementControllers\";\r\nexport * from \"./Particles/Particles\";\r\nexport * from \"./Rendering/Rendering\";\r\nexport * from \"./Sound/Sound\";\r\nexport * from \"./Tweening/Tweening\";\r\nexport * from \"./Content/Content\";\r\nexport { Functions as TweeningFunctions } from \"./Tweening/Functions/Functions\";\r\nexport { EventHandler } from \"./Utilities/EventHandler\";\r\nexport { EventHandler1 } from \"./Utilities/EventHandler1\";\r\nexport { EventHandler2 } from \"./Utilities/EventHandler2\";\r\nexport { EventHandler3 } from \"./Utilities/EventHandler3\";\r\nexport { Game } from \"./Game\";\r\nexport { GameConfiguration } from \"./GameConfiguration\";\r\nexport { GameTime } from \"./GameTime\";\r\nexport { Matrix2x2 } from \"./Assets/Matrixes/Matrix2x2\";\r\nexport { Size2d } from \"./Assets/Sizes/Size2d\";\r\nexport { TimeSpan } from \"./Assets/TimeSpan\";\r\nexport { Vector2d } from \"./Assets/Vectors/Vector2d\";\r\nexport { ICloneable } from \"./Interfaces/ICloneable\";\r\nexport { IMoveable } from \"./Interfaces/IMoveable\";\r\nexport { IDisposable } from \"./Interfaces/IDisposable\";\r\nexport { IUpdateable } from \"./Interfaces/IUpdateable\";","import { Vector2d } from \"../Assets/Vectors/Vector2d\";\r\nimport { Vector2dHelpers } from \"../Assets/Vectors/Helpers/Vector2dHelpers\";\r\nimport { ITyped } from \"../Interfaces/ITyped\";\r\nimport { Size2d } from \"../Assets/Sizes/Size2d\";\r\nimport { IMoveable } from \"../Interfaces/IMoveable\";\r\n\r\nexport module Bounds {\r\n    /**\r\n    * Abstract bounds type that is used to detect intersections.\r\n    */\r\n    export class Bounds2d implements IMoveable {\r\n        public _boundsType: string = \"Bounds2d\";\r\n\r\n        /**\r\n        * Gets or sets the Position of the bounds.\r\n        */\r\n        public Position: Vector2d;\r\n        /**\r\n        * Gets or sets the Rotation of the bounds.\r\n        */\r\n        public Rotation: number;\r\n\r\n        /**\r\n        * Should only ever be called by derived classes.\r\n        * @param position Initial Position of the current bounded object.\r\n        */\r\n        constructor(position: Vector2d);\r\n        /**\r\n        * Should only ever be called by derived classes.\r\n        * @param position Initial Position of the current bounded object.\r\n        * @param rotation Initial Rotation of the current bounded object.\r\n        */\r\n        constructor(position: Vector2d, rotation: number);\r\n        constructor(position: Vector2d, rotation?: number) {\r\n            this.Position = position;\r\n            this.Rotation = rotation || 0;\r\n        }\r\n\r\n        /**\r\n        * Abstract: Scales the size of the bounded object.\r\n        * @param x Value to multiply the horizontal component by.\r\n        * @param y Value to multiply the vertical component by.\r\n        */\r\n        public Scale(x: number, y: number): void {\r\n            throw new Error(\"This method is abstract!\");\r\n        }\r\n\r\n        /**\r\n        * Abstract: Determines if the current bounded object contains the provided Vector2d.\r\n        * @param point A point.\r\n        */\r\n        public ContainsPoint(point: Vector2d): boolean {\r\n            throw new Error(\"This method is abstract!\");\r\n        }\r\n\r\n        /**\r\n        * Abstract: Determines if the current bounded object completely contains the provided BoundingCircle.\r\n        * @param circle A circle to check containment on.\r\n        */\r\n        public ContainsCircle(circle: BoundingCircle): boolean {\r\n            throw new Error(\"This method is abstract!\");\r\n        }\r\n\r\n        /**\r\n        * Abstract: Determines if the current bounded object completely contains the provided BoundingRectangle.\r\n        * @param rectangle A rectangle to check containment on.\r\n        */\r\n        public ContainsRectangle(rectangle: BoundingRectangle): boolean {\r\n            throw new Error(\"This method is abstract!\");\r\n        }\r\n\r\n        /**\r\n        * Abstract: Determines if the current bounded object contains the provided Vector2d.\r\n        * @param point A point to check containment on.\r\n        */\r\n        public Contains(point: Vector2d): boolean;\r\n        /**\r\n        * Abstract: Determines if the current bounded object completely contains another bounded object.\r\n        * @param obj A bounded object to check containment on.\r\n        */\r\n        public Contains(obj: Bounds2d): boolean;\r\n        public Contains(obj: any): boolean {\r\n            if (obj._boundsType === \"BoundingCircle\") {\r\n                return this.ContainsCircle(obj);\r\n            }\r\n            else if (obj._boundsType === \"BoundingRectangle\") {\r\n                return this.ContainsRectangle(obj);\r\n            }\r\n            else if (obj._type === \"Vector2d\") {\r\n                return this.ContainsPoint(obj);\r\n            }\r\n            else {\r\n                throw new Error(\"Cannot try and check contains with an unidentifiable object, must be a Vector2d, BoundingCircle or BoundingRectangle.\");\r\n            }\r\n        }\r\n\r\n        /**\r\n        * Determines if the current bounded object intersects another bounded object.\r\n        * @param obj Bounding object to check collision with.\r\n        */\r\n        public Intersects(obj: Bounds2d): boolean;\r\n        public Intersects(obj: any): boolean {\r\n            if (obj._boundsType === \"BoundingCircle\") {\r\n                return this.IntersectsCircle(obj);\r\n            }\r\n            else if (obj._boundsType === \"BoundingRectangle\") {\r\n                return this.IntersectsRectangle(obj);\r\n            }\r\n            else {\r\n                throw new Error(\"Cannot intersect with unidentifiable object, must be BoundingCircle or BoundingRectangle.\");\r\n            }\r\n        }\r\n\r\n        /**\r\n        * Abstract: Determines if the current bounded object is intersecting the provided BoundingCircle.\r\n        * @param circle BoundingCircle to check intersection with.\r\n        */\r\n        public IntersectsCircle(circle: BoundingCircle): boolean {\r\n            throw new Error(\"This method is abstract!\");\r\n        }\r\n\r\n        /**\r\n        * Abstract: Determines if the current bounded object is intersecting the provided BoundingRectangle.\r\n        * @param rectangle BoundingRectangle to check intersection with.\r\n        */\r\n        public IntersectsRectangle(rectangle: BoundingRectangle): boolean {\r\n            throw new Error(\"This method is abstract!\");\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Defines a circle that can be used to detect intersections.\r\n    */\r\n    export class BoundingCircle extends Bounds2d implements ITyped {\r\n        public _type: string = \"BoundingCircle\";\r\n        public _boundsType: string = \"BoundingCircle\";\r\n\r\n        /**\r\n        * Gets or sets the Radius of the circle.\r\n        */\r\n        public Radius: number;\r\n\r\n        /**\r\n        * Creates a new instance of BoundingCircle.\r\n        * @param position Initial Position of the BoundingCircle.\r\n        * @param radius Initial Radius of the BoundingCircle.\r\n        */\r\n        constructor(position: Vector2d, radius: number) {\r\n            super(position);\r\n\r\n            this.Radius = radius;\r\n        }\r\n\r\n        /**\r\n        * Scales the radius of the BoundingCircle.\r\n        * @param scale Value to multiply the radius by.\r\n        */\r\n        public Scale(scale: number): void {\r\n            // This is an overloaded version of Bounds2d Scale but we don't care\r\n            // about the second parameter within a BoundingCircle\r\n            this.Radius *= scale;\r\n        }\r\n\r\n        /**\r\n        * Calculates the area of the BoundingCircle.\r\n        */\r\n        public Area(): number {\r\n            return Math.PI * this.Radius * this.Radius;\r\n        }\r\n\r\n        /**\r\n        * Calculates the circumference of the BoundingCircle.\r\n        */\r\n        public Circumference(): number {\r\n            return 2 * Math.PI * this.Radius;\r\n        }\r\n\r\n        /**\r\n        * Determines if the current BoundingCircle is intersecting the provided BoundingCircle.\r\n        * @param circle BoundingCircle to check intersection with.\r\n        */\r\n        public IntersectsCircle(circle: BoundingCircle): boolean {\r\n            return this.Position.Distance(circle.Position).Length() < this.Radius + circle.Radius;\r\n        }\r\n\r\n        /**\r\n        * Determines if the current BoundingCircle is intersecting the provided BoundingRectangle.\r\n        * @param rectangle BoundingRectangle to check intersection with.\r\n        */\r\n        public IntersectsRectangle(rectangle: BoundingRectangle): boolean {\r\n            var translated = (rectangle.Rotation === 0)\r\n                ? this.Position\r\n                : this.Position.RotateAround(rectangle.Position, -rectangle.Rotation);\r\n\r\n            var circleDistance = translated.Distance(rectangle.Position);\r\n\r\n            if (circleDistance.X > (rectangle.Size.HalfWidth + this.Radius)) { return false; }\r\n            if (circleDistance.Y > (rectangle.Size.HalfHeight + this.Radius)) { return false; }\r\n\r\n            if (circleDistance.X <= (rectangle.Size.HalfWidth)) { return true; }\r\n            if (circleDistance.Y <= (rectangle.Size.HalfHeight)) { return true; }\r\n\r\n            var cornerDistance_sq = Math.pow(circleDistance.X - rectangle.Size.HalfWidth, 2) + Math.pow(circleDistance.Y - rectangle.Size.HalfHeight, 2);\r\n\r\n            return (cornerDistance_sq <= (this.Radius * this.Radius));\r\n        }\r\n\r\n        /**\r\n        * Determines if the current BoundingCircle contains the provided Vector2d.\r\n        * @param point A point.\r\n        */\r\n        public ContainsPoint(point: Vector2d): boolean {\r\n            return this.Position.Distance(point).Magnitude() < this.Radius;\r\n        }\r\n\r\n        /**\r\n        * Determines if the current BoundingCircle completely contains the provided BoundingCircle.\r\n        * @param circle A circle to check containment on.\r\n        */\r\n        public ContainsCircle(circle: BoundingCircle): boolean {\r\n            return circle.Position.Distance(this.Position).Length() + circle.Radius <= this.Radius;\r\n        }\r\n\r\n        /**\r\n        * Determines if the current BoundingCircle completely contains the provided BoundingRectangle.\r\n        * @param rectangle A rectangle to check containment on.\r\n        */\r\n        public ContainsRectangle(rectangle: BoundingRectangle): boolean {\r\n            var corners = rectangle.Corners();\r\n\r\n            for (var i = 0; i < corners.length; i++) {\r\n                if (!this.ContainsPoint(corners[i])) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Defines a rectangle that can be used to detect intersections.\r\n    */\r\n    export class BoundingRectangle extends Bounds2d implements ITyped {\r\n        public _type: string = \"BoundingRectangle\";\r\n        public _boundsType: string = \"BoundingRectangle\";\r\n\r\n        /**\r\n        * Gets or sets the Size of the rectangle.\r\n        */\r\n        public Size: Size2d;\r\n\r\n        /**\r\n        * Creates a new instance of BoundingRectangle.\r\n        * @param position Initial Position of the BoundingRectangle.\r\n        * @param size Initial Size of the BoundingRectangle.\r\n        */\r\n        constructor(position: Vector2d, size: Size2d) {\r\n            super(position);\r\n            this.Size = size;\r\n        }\r\n\r\n        /**\r\n        * Scales the width and height of the BoundingRectangle.\r\n        * @param x Value to multiply the width by.\r\n        * @param y Value to multiply the height by.\r\n        */\r\n        public Scale(x: number, y: number): void {\r\n            this.Size.Width *= x;\r\n            this.Size.Height *= y;\r\n        }\r\n\r\n        /** \r\n        * Gets the top left corner of the BoundingRectangle.\r\n        */\r\n        public get TopLeft(): Vector2d {\r\n            if (this.Rotation === 0) {\r\n                return new Vector2d(this.Position.X - this.Size.HalfWidth, this.Position.Y - this.Size.HalfHeight);\r\n            }\r\n\r\n            return new Vector2d(this.Position.X - this.Size.HalfWidth, this.Position.Y - this.Size.HalfHeight).RotateAround(this.Position, this.Rotation);\r\n        }\r\n\r\n        /** \r\n        * Gets the top right corner of the BoundingRectangle.\r\n        */\r\n        public get TopRight(): Vector2d {\r\n            if (this.Rotation === 0) {\r\n                return new Vector2d(this.Position.X + this.Size.HalfWidth, this.Position.Y - this.Size.HalfHeight);\r\n            }\r\n\r\n            return new Vector2d(this.Position.X + this.Size.HalfWidth, this.Position.Y - this.Size.HalfHeight).RotateAround(this.Position, this.Rotation);\r\n        }\r\n\r\n        /** \r\n        * Gets the bottom left corner of the BoundingRectangle.\r\n        */\r\n        public get BotLeft(): Vector2d {\r\n            if (this.Rotation === 0) {\r\n                return new Vector2d(this.Position.X - this.Size.HalfWidth, this.Position.Y + this.Size.HalfHeight);\r\n            }\r\n\r\n            return new Vector2d(this.Position.X - this.Size.HalfWidth, this.Position.Y + this.Size.HalfHeight).RotateAround(this.Position, this.Rotation);\r\n        }\r\n\r\n        /** \r\n        * Gets the bottom right corner of the BoundingRectangle.\r\n        */\r\n        public get BotRight(): Vector2d {\r\n            if (this.Rotation === 0) {\r\n                return new Vector2d(this.Position.X + this.Size.HalfWidth, this.Position.Y + this.Size.HalfHeight);\r\n            }\r\n\r\n            return new Vector2d(this.Position.X + this.Size.HalfWidth, this.Position.Y + this.Size.HalfHeight).RotateAround(this.Position, this.Rotation);\r\n        }\r\n\r\n        /**\r\n        * Returns a list of vertices that are the locations of each corner of the BoundingRectangle. Format: [TopLeft, TopRight, BotLeft, BotRight].\r\n        */\r\n        public Corners(): Vector2d[] {\r\n            return [this.TopLeft, this.TopRight, this.BotLeft, this.BotRight];\r\n        }\r\n\r\n        /**\r\n        * Determines if the current BoundingRectangle is intersecting the provided BoundingCircle.\r\n        * @param circle BoundingCircle to check intersection with.\r\n        */\r\n        public IntersectsCircle(circle: BoundingCircle): boolean {\r\n            return circle.IntersectsRectangle(this);\r\n        }\r\n\r\n        /**\r\n        * Determines if the current BoundingRectangle is intersecting the provided BoundingRectangle.\r\n        * @param rectangle BoundingRectangle to check intersection with.\r\n        */\r\n        public IntersectsRectangle(rectangle: BoundingRectangle): boolean {\r\n            if (this.Rotation === 0 && rectangle.Rotation === 0) {\r\n                var myTopLeft = this.TopLeft,\r\n                    myBotRight = this.BotRight,\r\n                    theirTopLeft = rectangle.TopLeft,\r\n                    theirBotRight = rectangle.BotRight;\r\n\r\n                return theirTopLeft.X <= myBotRight.X && theirBotRight.X >= myTopLeft.X && theirTopLeft.Y <= myBotRight.Y && theirBotRight.Y >= myTopLeft.Y;\r\n            }\r\n            else if (rectangle.Position.Distance(this.Position).Magnitude() <= rectangle.Size.Radius + this.Size.Radius) {// Check if we're somewhat close to the rectangle ect that we might be colliding with\r\n                var axisList: Vector2d[] = [this.TopRight.Subtract(this.TopLeft), this.TopRight.Subtract(this.BotRight), rectangle.TopLeft.Subtract(rectangle.BotLeft), rectangle.TopLeft.Subtract(rectangle.TopRight)];\r\n                var myVertices = this.Corners();\r\n                var theirVertices = rectangle.Corners();\r\n\r\n                for (var i: number = 0; i < axisList.length; i++) {\r\n                    var axi = axisList[i];\r\n                    var myProjections = Vector2dHelpers.GetMinMaxProjections(axi, myVertices);\r\n                    var theirProjections = Vector2dHelpers.GetMinMaxProjections(axi, theirVertices);\r\n\r\n                    // No collision\r\n                    if (theirProjections.Max < myProjections.Min || myProjections.Max < theirProjections.Min) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        /**\r\n        * Determines if the current BoundingRectangle contains the provided Vector2d.\r\n        * @param point A point.\r\n        */\r\n        public ContainsPoint(point: Vector2d): boolean {\r\n            var savedRotation: number = this.Rotation;\r\n\r\n            if (this.Rotation !== 0) {\r\n                this.Rotation = 0;\r\n                point = point.RotateAround(this.Position, -savedRotation);\r\n            }\r\n\r\n            var myTopLeft = this.TopLeft,\r\n                myBotRight = this.BotRight;\r\n\r\n            this.Rotation = savedRotation;\r\n\r\n            return point.X <= myBotRight.X && point.X >= myTopLeft.X && point.Y <= myBotRight.Y && point.Y >= myTopLeft.Y;\r\n        }\r\n\r\n        /**\r\n        * Determines if the current BoundingRectangle completely contains the provided BoundingCircle.\r\n        * @param circle A circle to check containment on.\r\n        */\r\n        public ContainsCircle(circle: BoundingCircle): boolean {\r\n            return this.ContainsPoint(new Vector2d(circle.Position.X - circle.Radius, circle.Position.Y)) &&\r\n                this.ContainsPoint(new Vector2d(circle.Position.X, circle.Position.Y - circle.Radius)) &&\r\n                this.ContainsPoint(new Vector2d(circle.Position.X + circle.Radius, circle.Position.Y)) &&\r\n                this.ContainsPoint(new Vector2d(circle.Position.X, circle.Position.Y + circle.Radius));\r\n        }\r\n\r\n        /**\r\n        * Determines if the current BoundingCircle completely contains the provided BoundingRectangle.\r\n        * @param rectangle A rectangle to check containment on.\r\n        */\r\n        public ContainsRectangle(rectangle: BoundingRectangle): boolean {\r\n            var corners = rectangle.Corners();\r\n\r\n            for (var i = 0; i < corners.length; i++) {\r\n                if (!this.ContainsPoint(corners[i])) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n    }\r\n}","import { Size2d } from \"../Sizes/Size2d\";\r\nimport { ICloneable } from \"../../Interfaces/ICloneable\";\r\nimport { ITyped } from \"../../Interfaces/ITyped\";\r\nimport { MathRoundTo } from \"../../Extensions/MathExtensions\";\r\n\r\n/**\r\n* Defines a two dimensional vector object which specifies an X and Y.\r\n*/\r\nexport class Vector2d implements ITyped, ICloneable {\r\n    public _type: string = \"Vector2d\";\r\n\r\n    /**\r\n    * Gets or sets the X component of the vector.\r\n    */\r\n    public X: number;\r\n    /**\r\n    * Gets or sets the Y component of the vector.\r\n    */\r\n    public Y: number;\r\n\r\n    /**\r\n    * Creates a new instance of Vector2d with the X and Y components initialized to 0.\r\n    */\r\n    constructor();\r\n    /**\r\n    * Creates a new instance of Vector2d.\r\n    * @param x Initial value of the X component of the Vector2d.\r\n    * @param y Initial value of the Y component of the Vector2d.\r\n    */\r\n    constructor(x: number, y: number);\r\n    constructor(x?: number, y?: number) {\r\n        this.X = x || 0;\r\n        this.Y = y || 0;\r\n    }\r\n\r\n    /**\r\n    * Returns a Vector2d with all its components set to zero.\r\n    */\r\n    public static get Zero(): Vector2d {\r\n        return new Vector2d(0, 0);\r\n    }\r\n\r\n    /**\r\n    * Returns a Vector2d with all its components set to one.\r\n    */\r\n    public static get One(): Vector2d {\r\n        return new Vector2d(1, 1);\r\n    }\r\n\r\n    /**\r\n    * Returns a Vector2d that's reflected over the normal.\r\n    * @param normal The normal to reflect over.\r\n    */\r\n    public Reflect(normal: Vector2d): Vector2d {\r\n        var normalUnit = normal.Unit(),\r\n            num = this.Dot(normalUnit) * 2;\r\n\r\n        return new Vector2d(this.X - num * normalUnit.X, this.Y - num * normalUnit.Y);\r\n    }\r\n\r\n    /**\r\n    * Returns a Vector2d that represents the current Vector2d projected onto the provided Vector2d.\r\n    * @param vector Source vector.\r\n    */\r\n    public ProjectOnto(vector: Vector2d): Vector2d {\r\n        return vector.Multiply(this.Dot(vector) / vector.Dot(vector));\r\n    }\r\n\r\n    /**\r\n    * Returns a Vector2d that represents the current Vector2d rotated around the provided point and angle.\r\n    * @param point Point to rotate around.\r\n    * @param angle How far to rotate around the point.\r\n    */\r\n    public RotateAround(point: Vector2d, angle: number): Vector2d;\r\n    /**\r\n    * Returns a Vector2d that represents the current Vector2d rotated around the provided point and angle.\r\n    * @param point Point to rotate around.\r\n    * @param angle How far to rotate around the point.\r\n    * @param precision The precision of the resulting Vector2d's X and Y components.\r\n    */\r\n    public RotateAround(point: Vector2d, angle: number, precision: number): Vector2d;\r\n    public RotateAround(point: Vector2d, angle: number, precision: number = 2): Vector2d {\r\n        var ca = Math.cos(angle);\r\n        var sa = Math.sin(angle);\r\n\r\n        return new Vector2d(\r\n            MathRoundTo(ca * (this.X - point.X) - sa * (this.Y - point.Y) + point.X, precision),\r\n            MathRoundTo(sa * (this.X - point.X) + ca * (this.Y - point.Y) + point.Y, precision)\r\n        );\r\n    }\r\n\r\n    /**\r\n    * Executes the action with the X and Y components of this Vector2d and sets the X and Y components to the corresponding return values.\r\n    * @param action The function used to modify the X and Y components.\r\n    */\r\n    public Apply(action: (val: number) => number): void {\r\n        this.X = action(this.X);\r\n        this.Y = action(this.Y);\r\n    }\r\n\r\n    /**\r\n    * Executes the action with the X and Y components of this Vector2d.\r\n    * @param action The function to pass the X and Y components to.\r\n    */\r\n    public Trigger(action: (val: number) => void): void {\r\n        action(this.X);\r\n        action(this.Y);\r\n    }\r\n\r\n    /**\r\n    * Returns the current vector as a unit vector. The result is a vector one unit in length pointing in the same direction as the original vector.\r\n    */\r\n    public Normalized(): Vector2d {\r\n        var magnitude = this.Magnitude();\r\n        return new Vector2d(this.X / magnitude, this.Y / magnitude);\r\n    }\r\n\r\n    /**\r\n    * Calculates the magnitude or length of the vector\r\n    */\r\n    public Magnitude(): number {\r\n        return Math.sqrt(this.X * this.X + this.Y * this.Y);\r\n    }\r\n\r\n    /**\r\n    * Calculates the length or magnitude of the vector\r\n    */\r\n    public Length(): number {\r\n        return this.Magnitude();\r\n    }\r\n\r\n    /**\r\n    * Calculates dot product.\r\n    * @param vector Source vector.\r\n    */\r\n    public Dot(vector: Vector2d): number {\r\n        return vector.X * this.X + vector.Y * this.Y;\r\n    }\r\n\r\n    /**\r\n    * Returns a Vector2d that has the current Vector2d's X and Y components as positive values.\r\n    */\r\n    public Abs(): Vector2d {\r\n        return new Vector2d(Math.abs(this.X), Math.abs(this.Y));\r\n    }\r\n\r\n    /**\r\n    * Returns a Vector2d that has its X and Y components converted to -1, 0 or 1 depending on the current Vector2d's component values.\r\n    */\r\n    public Sign(): Vector2d {\r\n        return new Vector2d(this.X / Math.abs(this.X), this.Y / Math.abs(this.Y));\r\n    }\r\n\r\n    /**\r\n    * Returns the unit vector of the current vector.\r\n    */\r\n    public Unit(): Vector2d {\r\n        var magnitude = this.Magnitude();\r\n\r\n        return new Vector2d(this.X / magnitude, this.Y / magnitude);\r\n    }\r\n\r\n    /**\r\n    * Calculates the distance between the current vector and the provided one.\r\n    */\r\n    public Distance(vector: Vector2d): Vector2d {\r\n        return new Vector2d(Math.abs(vector.X - this.X), Math.abs(vector.Y - this.Y));\r\n    }\r\n\r\n    /**\r\n    * Returns a Vector2d that is the result of adding the X and Y of this Vector2d to the X and Y of the provided Vector2d.\r\n    * @param val The Vector2d to add.\r\n    */\r\n    public Add(val: Vector2d): Vector2d;\r\n    /**\r\n    * Returns a Vector2d that is the result of adding the X and Y of this Vector2d to the Width and Height of the provided Size2d.\r\n    * @param val The Vector2d to add.\r\n    */\r\n    public Add(val: Size2d): Vector2d;\r\n    /**\r\n    * Returns a Vector2d that is the result of adding the X and Y of this Vector2d to the provided number.\r\n    * @param val The number to add.\r\n    */\r\n    public Add(val: number): Vector2d;\r\n    public Add(val: any): Vector2d {\r\n        if (val._type === \"Vector2d\") {\r\n            return new Vector2d(this.X + val.X, this.Y + val.Y);\r\n        }\r\n        else if (val._type === \"Size2d\") {\r\n            return new Vector2d(this.X + val.Width, this.Y + val.Height);\r\n        }\r\n        else {\r\n            return new Vector2d(this.X + val, this.Y + val);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Returns a Vector2d that is the result of multiplying the X and Y of this Vector2d by the X and Y of the provided Vector2d.\r\n    * @param val The Vector2d to multiply.\r\n    */\r\n    public Multiply(val: Vector2d): Vector2d;\r\n    /**\r\n    * Returns a Vector2d that is the result of multiplying the X and Y of this Vector2d by the Width and Height of the provided Size2d.\r\n    * @param val The Vector2d to multiply.\r\n    */\r\n    public Multiply(val: Size2d): Vector2d;\r\n    /**\r\n    * Returns a Vector2d that is the result of multiplying the X and Y of this Vector2d by the provided number.\r\n    * @param val The number to multiply.\r\n    */\r\n    public Multiply(val: number): Vector2d;\r\n    public Multiply(val: any): Vector2d {\r\n        if (val._type === \"Vector2d\") {\r\n            return new Vector2d(this.X * val.X, this.Y * val.Y);\r\n        }\r\n        else if (val._type === \"Size2d\") {\r\n            return new Vector2d(this.X * val.Width, this.Y * val.Height);\r\n        }\r\n        else {\r\n            return new Vector2d(this.X * val, this.Y * val);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Returns a Vector2d that is the result of subtracting the X and Y of this Vector2d by the X and Y of the provided Vector2d.\r\n    * @param val The Vector2d to subtract.\r\n    */\r\n    public Subtract(val: Vector2d): Vector2d;\r\n    /**\r\n    * Returns a Vector2d that is the result of subtracting the X and Y of this Vector2d by the Width and Height of the provided Size2d.\r\n    * @param val The Vector2d to subtract.\r\n    */\r\n    public Subtract(val: Size2d): Vector2d;\r\n    /**\r\n    * Returns a Vector2d that is the result of subtracting the X and Y of this Vector2d by the provided number.\r\n    * @param val The number to subtract.\r\n    */\r\n    public Subtract(val: number): Vector2d;\r\n    public Subtract(val: any): Vector2d {\r\n        if (val._type === \"Vector2d\") {\r\n            return new Vector2d(this.X - val.X, this.Y - val.Y);\r\n        }\r\n        else if (val._type === \"Size2d\") {\r\n            return new Vector2d(this.X - val.Width, this.Y - val.Height);\r\n        }\r\n        else {\r\n            return new Vector2d(this.X - val, this.Y - val);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Returns a Vector2d that is the result of subtracting the X and Y of this Vector2d from the X and Y of the provided Vector2d.\r\n    * @param val The Vector2d to subtract from.\r\n    */\r\n    public SubtractFrom(val: Vector2d): Vector2d;\r\n    /**\r\n    * Returns a Vector2d that is the result of subtracting the X and Y of this Vector2d from the Width and Height of the provided Size2d.\r\n    * @param val The Vector2d to subtract from.\r\n    */\r\n    public SubtractFrom(val: Size2d): Vector2d;\r\n    /**\r\n    * Returns a Vector2d that is the result of subtracting the X and Y of this Vector2d from the provided number.\r\n    * @param val The number to subtract from.\r\n    */\r\n    public SubtractFrom(val: number): Vector2d;\r\n    public SubtractFrom(val: any): Vector2d {\r\n        if (val._type === \"Vector2d\") {\r\n            return new Vector2d(val.X - this.X, val.Y - this.Y);\r\n        }\r\n        else if (val._type === \"Size2d\") {\r\n            return new Vector2d(val.Width - this.X, val.Height = this.Y);\r\n        }\r\n        else {\r\n            return new Vector2d(val - this.X, val - this.Y);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Returns a Vector2d that is the result of dividing the X and Y of this Vector2d by the X and Y of the provided Vector2d.\r\n    * @param val The Vector2d to divide.\r\n    */\r\n    public Divide(val: Vector2d): Vector2d;\r\n    /**\r\n    * Returns a Vector2d that is the result of dividing the X and Y of this Vector2d by the Width and Height of the provided Size2d.\r\n    * @param val The Vector2d to divide.\r\n    */\r\n    public Divide(val: Size2d): Vector2d;\r\n    /**\r\n    * Returns a Vector2d that is the result of dividing the X and Y of this Vector2d by the provided number.\r\n    * @param val The number to divide.\r\n    */\r\n    public Divide(val: number): Vector2d;\r\n    public Divide(val: any): Vector2d {\r\n        if (val._type === \"Vector2d\") {\r\n            return new Vector2d(this.X / val.X, this.Y / val.Y);\r\n        }\r\n        else if (val._type === \"Size2d\") {\r\n            return new Vector2d(this.X / val.Width, this.Y / val.Height);\r\n        }\r\n        else {\r\n            return new Vector2d(this.X / val, this.Y / val);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Returns a Vector2d that is the result of dividing the X and Y of this Vector2d from the X and Y of the provided Vector2d.\r\n    * @param val The Vector2d to divide from.\r\n    */\r\n    public DivideFrom(val: Vector2d): Vector2d;\r\n    /**\r\n    * Returns a Vector2d that is the result of dividing the X and Y of this Vector2d from the Width and Height of the provided Size2d.\r\n    * @param val The Vector2d to divide from.\r\n    */\r\n    public DivideFrom(val: Size2d): Vector2d;\r\n    /**\r\n    * Returns a Vector2d that is the result of dividing the X and Y of this Vector2d from the provided number.\r\n    * @param val The number to divide from.\r\n    */\r\n    public DivideFrom(val: number): Vector2d;\r\n    public DivideFrom(val: any): Vector2d {\r\n        if (val._type === \"Vector2d\") {\r\n            return new Vector2d(val.X / this.X, val.Y / this.Y);\r\n        }\r\n        else if (val._type === \"Size2d\") {\r\n            return new Vector2d(val.Width / this.X, val.Height / this.Y);\r\n        }\r\n        else {\r\n            return new Vector2d(val / this.X, val / this.Y);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Determines whether this Vector2d's X and Y components are zero.\r\n    */\r\n    public IsZero(): boolean {\r\n        return this.X === 0 && this.Y === 0;\r\n    }\r\n\r\n    /**\r\n    * Returns a Vector2d that is the negated version of this Vector2d.\r\n    */\r\n    public Negate(): Vector2d {\r\n        return new Vector2d(this.X * -1, this.Y * -1);\r\n    }\r\n\r\n    /**\r\n    * Determines whether this Vector2d has the same X and Y of the provided Vector2d.\r\n    * @param vector The Vector2d to compare the current Vector2d to.\r\n    */\r\n    public Equivalent(vector: Vector2d): boolean {\r\n        return this.X === vector.X && this.Y === vector.Y;\r\n    }\r\n\r\n    /**\r\n    * Returns a Vector2d that has an identical X and Y component as the current Vector2d.\r\n    */\r\n    public Clone(): Vector2d {\r\n        return new Vector2d(this.X, this.Y);\r\n    }\r\n\r\n    /**\r\n    * Overridden toString method to display Vector2d in the (X, Y) format.\r\n    */\r\n    public toString(): string {\r\n        return \"(\" + this.X + \", \" + this.Y + \")\";\r\n    }\r\n}","export function MathRoundTo(val: number, decimals: number): number {\r\n    var multiplier = Math.pow(10, decimals);\r\n\r\n    return Math.round(val * multiplier) / multiplier;\r\n};","import { Vector2d } from \"../Vector2d\";\r\nimport { MinMax } from \"./MinMax\";\r\n\r\nexport class Vector2dHelpers {\r\n    public static GetMinMaxProjections(axis: Vector2d, vertices: Vector2d[]): MinMax {\r\n        var min: number = vertices[0].ProjectOnto(axis).Dot(axis);\r\n        var max: number = min;\r\n\r\n        for (var i: number = 1; i < vertices.length; i++) {\r\n            var vertex: Vector2d = vertices[i];\r\n            var value: number = vertex.ProjectOnto(axis).Dot(axis);\r\n\r\n            if (value < min) {\r\n                min = value;\r\n            }\r\n            else if (value > max) {\r\n                max = value;\r\n            }\r\n        }\r\n\r\n        return new MinMax(min, max);\r\n    }\r\n}","export class MinMax {\r\n    public Min: number;\r\n    public Max: number;\r\n\r\n    constructor(min: number, max: number) {\r\n        this.Min = min;\r\n        this.Max = max;\r\n    }\r\n}\r\n","import { Size2d } from \"../Assets/Sizes/Size2d\";\r\nimport { IDisposable } from \"../Interfaces/IDisposable\";\r\nimport { Bounds } from \"../Bounds/Bounds\";\r\nimport { EventHandler1 } from \"../Utilities/EventHandler1\";\r\nimport { ITyped } from \"../Interfaces/ITyped\";\r\nimport { IUpdateable } from \"../Interfaces/IUpdateable\";\r\nimport { GameTime } from \"../GameTime\";\r\nimport { Vector2d } from \"../Assets/Vectors/Vector2d\";\r\nimport { EventHandler } from \"../Utilities/EventHandler\";\r\nimport { EventHandler2 } from \"../Utilities/EventHandler2\";\r\n\r\nexport module Collision {\r\n    /**\r\n    * Defines a collidable object that can be used to detect collisions with other objects.\r\n    */\r\n    export class Collidable implements IDisposable, ITyped {\r\n        public _type: string = \"Collidable\";\r\n        public _id: number;\r\n\r\n        /**\r\n        * Gets or sets the Bounds of the collidable.\r\n        */\r\n        public Bounds: Bounds.Bounds2d;\r\n\r\n        private static _collidableIDs: number = 0;\r\n        private _disposed: boolean;\r\n        private _onCollision: EventHandler1<CollisionData>;\r\n        private _onDisposed: EventHandler1<Collidable>;\r\n\r\n        /**\r\n        * Creates a new instance of Collidable.\r\n        * @param bounds Initial bounds for the Collidable.\r\n        */\r\n        constructor(bounds?: Bounds.Bounds2d) {\r\n            this._disposed = false;\r\n\r\n            this.Bounds = (<Bounds.Bounds2d>bounds);\r\n            this._id = Collidable._collidableIDs++;\r\n\r\n            this._onCollision = new EventHandler1<CollisionData>();\r\n            this._onDisposed = new EventHandler1<Collidable>();\r\n        }\r\n\r\n        /**\r\n        * Gets an event that is triggered when a collision happens.  Functions can be bound or unbound to this event to be executed when the event triggers.\r\n        */\r\n        public get OnCollision(): EventHandler1<CollisionData> {\r\n            return this._onCollision;\r\n        }\r\n        /**\r\n        * Gets an event that is triggered when the Collidable has been disposed.  Functions can be bound or unbound to this event to be executed when the event triggers.\r\n        */\r\n        public get OnDisposed(): EventHandler1<Collidable> {\r\n            return this._onDisposed;\r\n        }\r\n\r\n        /**\r\n        * Determines if the provided collidable is colliding with this Collidable.\r\n        * @param other Collidable to check collision with.\r\n        */\r\n        public IsCollidingWith(other: Collidable): boolean {\r\n            return this.Bounds.Intersects(other.Bounds);\r\n        }\r\n\r\n        /**\r\n        * Triggers the OnCollision event.  Can also be overridden from derived classes to be called when a collision occurs if the collidable is being used with a CollisionManager\r\n        * @param data Collision information related to the collision.\r\n        */\r\n        public Collided(data: CollisionData): void {\r\n            this.OnCollision.Trigger(data);\r\n        }\r\n\r\n        /**\r\n        * Triggers the OnDisposed event.  If this Collidable is used with a CollisionManager it will be unmonitored when disposed.\r\n        */\r\n        public Dispose(): void {\r\n            if (!this._disposed) {\r\n                this._disposed = true;\r\n                this.OnDisposed.Trigger(this);\r\n                this.OnDisposed.Dispose();\r\n                this.OnCollision.Dispose();\r\n            }\r\n            else {\r\n                throw new Error(\"Cannot dispose collidable more than once.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Defines a CollisionConfiguration object that is used to configure and optimize the collision manager.\r\n    */\r\n    export class CollisionConfiguration {\r\n        public static _DefaultMinQuadTreeNodeSize: Size2d = new Size2d(32);\r\n\r\n        private _minQuadTreeNodeSize: Size2d;\r\n        private _initialQuadTreeSize: Size2d;\r\n\r\n        constructor(initialQuadTreeSize: Size2d) {\r\n            this._initialQuadTreeSize = initialQuadTreeSize;\r\n            this._minQuadTreeNodeSize = CollisionConfiguration._DefaultMinQuadTreeNodeSize;\r\n            this._OnChange = new EventHandler();\r\n        }\r\n\r\n        public _OnChange: EventHandler;\r\n\r\n        /**\r\n        * Gets or sets the minimum quad tree node size.  For best performance this value should be equivalent to the smallest collidable object that will be monitored by the CollisionManager.  Changing this value re-creates the collision manager.  Values must represent a square.\r\n        */\r\n        public get MinQuadTreeNodeSize(): Size2d {\r\n            return this._minQuadTreeNodeSize.Clone();\r\n        }\r\n        public set MinQuadTreeNodeSize(newSize: Size2d) {\r\n            if (newSize.Width !== newSize.Height) {\r\n                throw new Error(\"MinQuadTreeNodeSize must be a square.  Width and height must be identical.\");\r\n            }\r\n\r\n            this._minQuadTreeNodeSize = newSize;\r\n            this._OnChange.Trigger();\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the initial quad tree size.  The quad tree used for collision detection will dynamically grow in size if items drift outside of its boundaries.  If this property is set it will re-instantiate a new quad tree.  Values must be divisible by the MinQuadTreeNodeSize and must represent a square.\r\n        */\r\n        public get InitialQuadTreeSize(): Size2d {\r\n            return this._initialQuadTreeSize;\r\n        }\r\n        public set InitialQuadTreeSize(newSize: Size2d) {\r\n            if (newSize.Width !== newSize.Height) {\r\n                throw new Error(\"InitialQuadTreeSize must be a square.  Width and height must be identical.\");\r\n            }\r\n            else if (newSize.Width % this._minQuadTreeNodeSize.Width !== 0) {\r\n                throw new Error(\"InitialQuadTreeSize must be divisible by the MinQuadTreeNodeSize.\");\r\n            }\r\n\r\n            this._initialQuadTreeSize = newSize;\r\n            this._OnChange.Trigger();\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Defines a data object that is used to describe a collision event.\r\n    */\r\n    export class CollisionData {\r\n        /**\r\n        * Who collided with you.\r\n        */\r\n        public With: Collidable;\r\n\r\n        /**\r\n        * Creates a new instance of the CollisionData object.\r\n        * @param w Initial value of the With component of CollisionData.\r\n        */\r\n        constructor(w: Collidable) {\r\n            this.With = w;\r\n        }\r\n    }\r\n\r\n    interface ICollidableMappings {\r\n        Collidable: Collidable;\r\n        Unmonitor: (collidable: Collidable) => any;\r\n    }\r\n\r\n    /**\r\n    * Defines a manager that will check for collisions between objects that it is monitoring.\r\n    */\r\n    export class CollisionManager implements IUpdateable, IDisposable, ITyped {\r\n        public _type: string = \"CollisionManager\";\r\n        private _collidables: ICollidableMappings[];\r\n        private _nonStaticCollidables: Collidable[];\r\n        public _quadTree: QuadTree;\r\n        private _onCollision: EventHandler2<Collidable, Collidable>;\r\n        private _enabled: boolean;\r\n        private _disposed: boolean;\r\n\r\n        /**\r\n        * Creates a new instance of CollisionManager.\r\n        */\r\n        constructor(configuration: CollisionConfiguration) {\r\n            this._collidables = [];\r\n            this._nonStaticCollidables = [];\r\n            this._quadTree = new QuadTree(configuration);\r\n            this._enabled = false;\r\n            this._disposed = false;\r\n            this._onCollision = new EventHandler2<Collidable, Collidable>();\r\n        }\r\n\r\n        /**\r\n        * Gets an event that is triggered when a collision happens among two of the monitored objects.  Functions can be bound or unbound to this event to be executed when the event triggers.\r\n        */\r\n        public get OnCollision(): EventHandler2<Collidable, Collidable> {\r\n            return this._onCollision;\r\n        }\r\n\r\n        /**\r\n        * Monitors the provided collidable and will trigger its Collided function and OnCollision event whenever a collision occurs with it and another Collidable.\r\n        * If the provided collidable gets disposed it will automatically become unmonitored.\r\n        * @param obj Collidable to monitor.\r\n        */\r\n        public Monitor(obj: Collidable): void;\r\n        /**\r\n        * Monitors the provided collidable and will trigger its Collided function and OnCollision event whenever a collision occurs with it and another Collidable.\r\n        * If the provided collidable gets disposed it will automatically become unmonitored.\r\n        * Note: staticPosition'd collidable's will not collide with each other.\r\n        * @param obj Collidable to monitor.\r\n        * @param staticPosition Whether the Collidable will be stationary.  This value defaults to false.\r\n        */\r\n        public Monitor(obj: Collidable, staticPosition: boolean): void;\r\n        public Monitor(obj: Collidable, staticPosition: boolean = false): void {\r\n            var mapping: ICollidableMappings = {\r\n                Collidable: obj,\r\n                Unmonitor: (collidable) => {\r\n                    this.Unmonitor(collidable);\r\n                }\r\n            };\r\n\r\n            this._enabled = true;\r\n\r\n            obj.OnDisposed.Bind(mapping.Unmonitor);\r\n\r\n            this._collidables.push(mapping);\r\n\r\n            if (!staticPosition) {\r\n                this._nonStaticCollidables.push(obj);\r\n            }\r\n\r\n            this._quadTree.Insert(obj);\r\n        }\r\n\r\n        /**\r\n        * Unmonitors the provided collidable.  The Collided function and OnCollision event will no longer be triggered when an actual collision may have occurred.\r\n        * Disposing a monitored collidable will automatically be unmonitored\r\n        * @param obj Collidable to unmonitor.\r\n        */\r\n        public Unmonitor(obj: Collidable): void {\r\n            var index: number;\r\n\r\n            for (var i = 0; i < this._collidables.length; i++) {\r\n                if (this._collidables[i].Collidable._id === obj._id) {\r\n                    this._collidables[i].Collidable.OnDisposed.Unbind(this._collidables[i].Unmonitor);\r\n                    this._collidables.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            index = this._nonStaticCollidables.indexOf(obj);\r\n\r\n            if (index >= 0) {\r\n                this._nonStaticCollidables.splice(index, 1);\r\n            }\r\n\r\n            this._quadTree.Remove(obj);\r\n        }\r\n\r\n        /**\r\n        * Checks for collisions within its monitored objects.  Games CollisionManager's automatically have their Update functions called at the beginning of each update loop.\r\n        * @param gameTime The current game time object.\r\n        */\r\n        public Update(gameTime: GameTime): void {\r\n            var collidable: Collidable,\r\n                hash: string,\r\n                candidates: Array<Collidable>,\r\n                cacheMap: { [ids: string]: boolean; } = {},\r\n                colliding: Array<Array<Collidable>> = new Array<Array<Collidable>>();\r\n\r\n            if (this._enabled) {\r\n                // Update the structure of the quad tree, this accounts for moving objects\r\n                this._quadTree.Update(gameTime);\r\n\r\n                // Determine colliding objects\r\n                for (var i = 0; i < this._nonStaticCollidables.length; i++) {\r\n                    collidable = this._nonStaticCollidables[i];\r\n                    candidates = this._quadTree.CollisionCandidates(collidable);\r\n\r\n                    for (var j = 0; j < candidates.length; j++) {\r\n                        // If we're colliding with someone else\r\n                        if (collidable._id !== candidates[j]._id && collidable.IsCollidingWith(candidates[j])) {\r\n                            colliding.push([collidable, candidates[j]]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Dispatch collision events\r\n                for (var i = 0; i < colliding.length; i++) {\r\n                    hash = this.HashIds(colliding[i][0], colliding[i][1]);\r\n\r\n                    if (!cacheMap[hash]) {\r\n                        cacheMap[hash] = true;\r\n\r\n                        colliding[i][0].Collided(new CollisionData(colliding[i][1]));\r\n                        colliding[i][1].Collided(new CollisionData(colliding[i][0]));\r\n\r\n                        this.OnCollision.Trigger(colliding[i][0], colliding[i][1]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n        * Destroys removes all monitored collidables and destroys the collision manager.\r\n        */\r\n        public Dispose(): void {\r\n            if (!this._disposed) {\r\n                this._disposed = true;\r\n\r\n                for (var i = 0; i < this._collidables.length; i++) {\r\n                    this.Unmonitor(this._collidables[i].Collidable);\r\n                }\r\n\r\n                this._collidables = [];\r\n                this._nonStaticCollidables = [];\r\n                this._onCollision.Dispose();\r\n                delete this._quadTree;\r\n            }\r\n            else {\r\n                throw new Error(\"CollisionManager cannot be disposed more than once\");\r\n            }\r\n        }\r\n\r\n        private HashIds(c1: Collidable, c2: Collidable): string {\r\n            return Math.min(c1._id, c2._id).toString() + Math.max(c2._id, c1._id).toString();\r\n        }\r\n\r\n    }\r\n\r\n    export interface ICollidableMap {\r\n        Node: QuadTreeNode;\r\n        Collidable: Collidable;\r\n        StaticPosition: boolean;\r\n    }\r\n\r\n    export class QuadTree implements IDisposable, IUpdateable {\r\n        private _disposed: boolean;\r\n        private _minNodeSize: Size2d;\r\n        private _root: QuadTreeNode;\r\n        private _collidableMap: { [id: number]: ICollidableMap };\r\n        private _updateableCollidableMap: { [id: number]: ICollidableMap };\r\n\r\n        constructor(configuration: CollisionConfiguration) {\r\n            this._disposed = false;\r\n            this._minNodeSize = configuration.MinQuadTreeNodeSize;\r\n            this._collidableMap = {};\r\n            this._updateableCollidableMap = {};\r\n\r\n            this._root = new QuadTreeNode(new Vector2d(configuration.InitialQuadTreeSize.HalfWidth, configuration.InitialQuadTreeSize.HalfHeight), configuration.InitialQuadTreeSize, configuration.MinQuadTreeNodeSize, null);\r\n        }\r\n\r\n        public Insert(obj: Collidable, staticPosition: boolean = false): void {\r\n            if (!this._root.Bounds.Contains(obj.Bounds)) {\r\n                this.Expand(obj);\r\n            }\r\n\r\n            this._collidableMap[obj._id] = {\r\n                Node: this._root.Insert(obj),\r\n                Collidable: obj,\r\n                StaticPosition: staticPosition\r\n            };\r\n\r\n            if (!staticPosition) {\r\n                this._updateableCollidableMap[obj._id] = this._collidableMap[obj._id];\r\n            }\r\n        }\r\n\r\n        public Remove(obj: Collidable): void {\r\n            var node = this._collidableMap[obj._id].Node;\r\n\r\n            delete this._collidableMap[obj._id];\r\n            delete this._updateableCollidableMap[obj._id];\r\n\r\n            node.Remove(obj);\r\n        }\r\n\r\n        public CollisionCandidates(obj: Collidable): Array<Collidable> {\r\n            var node: QuadTreeNode = this._collidableMap[obj._id].Node,\r\n                results: Array<Collidable> = node.GetSubTreeContents();\r\n\r\n            // Collect parent contents\r\n            while (node.Parent !== null) {\r\n                results = results.concat(node.Parent.Contents);\r\n\r\n                node = node.Parent;\r\n            }\r\n\r\n            return results;\r\n        }\r\n\r\n        public Query(queryArea: Bounds.BoundingRectangle): Array<Collidable> {\r\n            return this._root.Query(queryArea);\r\n        }\r\n\r\n        public Expand(cause: Collidable): void {\r\n            var rootBounds: Bounds.BoundingRectangle = (<Bounds.BoundingRectangle>this._root.Bounds),\r\n                topLeftDistance = rootBounds.TopLeft.Distance(cause.Bounds.Position).Length(),\r\n                topRightDistance = rootBounds.TopRight.Distance(cause.Bounds.Position).Length(),\r\n                botLeftDistance = rootBounds.BotLeft.Distance(cause.Bounds.Position).Length(),\r\n                botRightDistance = rootBounds.BotRight.Distance(cause.Bounds.Position).Length(),\r\n                closestCornerDistance = Math.min(topLeftDistance, topRightDistance, botLeftDistance, botRightDistance),\r\n                newSize = rootBounds.Size.Multiply(2),\r\n                newRoot: QuadTreeNode;\r\n\r\n            if (closestCornerDistance === topLeftDistance) { // Current root will be bottom right of expanded quad tree because we need to expand to the top left\r\n                newRoot = new QuadTreeNode(rootBounds.TopLeft, newSize, this._minNodeSize, null);\r\n                newRoot.Partition();\r\n                newRoot.BotRightChild = this._root;\r\n            }\r\n            else if (closestCornerDistance === topRightDistance) { // Current root will be bottom left of expanded quad tree because we need to expand to the top right\r\n                newRoot = new QuadTreeNode(rootBounds.TopRight, newSize, this._minNodeSize, null);\r\n                newRoot.Partition();\r\n                newRoot.BotLeftChild = this._root;\r\n            }\r\n            else if (closestCornerDistance === botLeftDistance) { // Current root will be top right of expanded quad tree because we need to expand to the bottom left\r\n                newRoot = new QuadTreeNode(rootBounds.BotLeft, newSize, this._minNodeSize, null);\r\n                newRoot.Partition();\r\n                newRoot.TopRightChild = this._root;\r\n            }\r\n            else if (closestCornerDistance === botRightDistance) { // Current root will be top left of expanded quad tree because we need to expand to the bottom right\r\n                newRoot = new QuadTreeNode(rootBounds.BotRight, newSize, this._minNodeSize, null);\r\n                newRoot.Partition();\r\n                newRoot.TopLeftChild = this._root;\r\n            }\r\n            else {\r\n                throw new Error(\"Unexpected collision.\");\r\n            }\r\n\r\n            this._root.Parent = newRoot;\r\n            this._root = newRoot;\r\n        }\r\n\r\n        public Update(gameTime: GameTime): void {\r\n            var node: QuadTreeNode, lookup: ICollidableMap, collidable: Collidable, newNode: QuadTreeNode;\r\n\r\n            for (var id in this._updateableCollidableMap) {\r\n                lookup = this._updateableCollidableMap[id];\r\n                node = lookup.Node;\r\n                collidable = lookup.Collidable;\r\n\r\n                node.Remove(collidable);\r\n\r\n                // If one of the collidables has drifted outside the root bounds, expand the quad tree\r\n                if (!this._root.Bounds.Contains(collidable.Bounds)) {\r\n                    this.Expand(collidable);\r\n                    newNode = this._root.Insert(collidable);\r\n                }\r\n                else {\r\n                    // Check if object has left the bounds of this node and is not root\r\n                    if (!node.Bounds.Contains(collidable.Bounds) && node.Parent != null) {\r\n                        // We now belong to a parent\r\n                        newNode = node.Parent.ReverseInsert(collidable);\r\n                    }\r\n                    else // We're within the same node, but could be in children, must insert\r\n                    {\r\n                        newNode = node.Insert(collidable);\r\n                    }\r\n                }\r\n\r\n                // This will update the _collidableMap as well since its referencing the same object.\r\n                this._updateableCollidableMap[id].Node = newNode;\r\n            }\r\n        }\r\n\r\n        public Dispose(): void {\r\n            if (!this._disposed) {\r\n                this._disposed = true;\r\n            }\r\n            else {\r\n                throw new Error(\"Cannot dispose collidable more than once.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    export class QuadTreeNode extends Collidable {\r\n        public Contents: Array<Collidable>;\r\n        public Parent: QuadTreeNode | null;\r\n\r\n        private _minNodeSize: Size2d;\r\n        private _children: Array<QuadTreeNode>;\r\n        private _partitioned: boolean;\r\n\r\n        constructor(position: Vector2d, size: Size2d, minNodeSize: Size2d, parent: QuadTreeNode | null) {\r\n            super(new Bounds.BoundingRectangle(position, size));\r\n            this._minNodeSize = minNodeSize;\r\n            this._children = new Array<QuadTreeNode>();\r\n            this.Contents = new Array<Collidable>();\r\n            this.Parent = parent;\r\n            this._partitioned = false;\r\n        }\r\n\r\n        public get Children(): Array<QuadTreeNode> {\r\n            return this._children;\r\n        }\r\n\r\n        public get TopLeftChild(): QuadTreeNode {\r\n            return this._children[0];\r\n        }\r\n        public set TopLeftChild(newChild: QuadTreeNode) {\r\n            this._children[0] = newChild;\r\n        }\r\n\r\n        public get TopRightChild(): QuadTreeNode {\r\n            return this._children[1];\r\n        }\r\n        public set TopRightChild(newChild: QuadTreeNode) {\r\n            this._children[1] = newChild;\r\n        }\r\n\r\n        public get BotLeftChild(): QuadTreeNode {\r\n            return this._children[2];\r\n        }\r\n        public set BotLeftChild(newChild: QuadTreeNode) {\r\n            this._children[2] = newChild;\r\n        }\r\n\r\n        public get BotRightChild(): QuadTreeNode {\r\n            return this._children[3];\r\n        }\r\n        public set BotRightChild(newChild: QuadTreeNode) {\r\n            this._children[3] = newChild;\r\n        }\r\n\r\n        public IsPartitioned(): boolean {\r\n            return this._partitioned;\r\n        }\r\n\r\n        public Partition(): void {\r\n            var partitionedSize = new Size2d(Math.round((<Bounds.BoundingRectangle>this.Bounds).Size.Width * .5)),\r\n                boundsPosition = this.Bounds.Position;\r\n\r\n            this._partitioned = true;\r\n\r\n            if (partitionedSize.Width < this._minNodeSize.Width) {\r\n                return;\r\n            }\r\n\r\n            this._children.push(new QuadTreeNode(boundsPosition.Subtract(partitionedSize.Multiply(.5)), partitionedSize, this._minNodeSize, this));\r\n            this._children.push(new QuadTreeNode(new Vector2d(boundsPosition.X + partitionedSize.Width / 2, boundsPosition.Y - partitionedSize.Height / 2), partitionedSize, this._minNodeSize, this));\r\n            this._children.push(new QuadTreeNode(new Vector2d(boundsPosition.X - partitionedSize.Width / 2, boundsPosition.Y + partitionedSize.Height / 2), partitionedSize, this._minNodeSize, this));\r\n            this._children.push(new QuadTreeNode(boundsPosition.Add(partitionedSize.Multiply(.5)), partitionedSize, this._minNodeSize, this));\r\n        }\r\n\r\n        public Insert(obj: Collidable): QuadTreeNode {\r\n            if (!this._partitioned) {\r\n                this.Partition();\r\n            }\r\n\r\n            for (var i = 0; i < this._children.length; i++) {\r\n                if (this._children[i].Bounds.Contains(obj.Bounds)) {\r\n                    return this._children[i].Insert(obj);\r\n                }\r\n            }\r\n\r\n            this.Contents.push(obj);\r\n\r\n            return this;\r\n        }\r\n\r\n        public ReverseInsert(obj: Collidable): QuadTreeNode {\r\n            // Check if object has left the bounds of this node then go up another level\r\n            if (!this.Bounds.Contains(obj.Bounds)) {\r\n                if (this.Parent != null) {\r\n                    return this.Parent.ReverseInsert(obj);\r\n                }\r\n            }\r\n\r\n            return this.Insert(obj);\r\n        }\r\n\r\n        public Query(queryArea: Bounds.BoundingRectangle): Array<Collidable> {\r\n            var results = new Array<Collidable>(),\r\n                child: QuadTreeNode;\r\n\r\n            // Check if some of the items in this quadrant are partially contained within the query area\r\n            for (var i = 0; i < this.Contents.length; i++) {\r\n                if (queryArea.Intersects(this.Contents[i].Bounds)) {\r\n                    results.push(this.Contents[i]);\r\n                }\r\n            }\r\n\r\n            for (var i = 0; i < this._children.length; i++) {\r\n                child = this._children[i];\r\n\r\n                // If child fully contains the query area then we need to\r\n                // drill down until we find all of the query items\r\n                if (child.Bounds.Contains(queryArea)) {\r\n                    results = results.concat(child.Query(queryArea));\r\n                    break;\r\n                }\r\n\r\n                // If the queryArea fully contains the node then everything\r\n                // underneath it belongs to the query\r\n                if (queryArea.Contains(child.Bounds)) {\r\n                    results = results.concat(child.GetSubTreeContents());\r\n                    continue;\r\n                }\r\n\r\n                // If a sub-node intersects partially with the query then we\r\n                // need to query its children to find valid nodes\r\n                if (child.Bounds.Intersects(queryArea)) {\r\n                    results = results.concat(child.Query(queryArea));\r\n                }\r\n            }\r\n\r\n            return results;\r\n        }\r\n\r\n        public Remove(obj: Collidable): void {\r\n            var index = this.Contents.indexOf(obj);\r\n\r\n            if (index >= 0) {\r\n                this.Contents.splice(index, 1);\r\n            }\r\n        }\r\n\r\n        public GetSubTreeContents(): Array<Collidable> {\r\n            var results = new Array<Collidable>();\r\n\r\n            for (var i = 0; i < this._children.length; i++) {\r\n                results = results.concat(this._children[i].GetSubTreeContents());\r\n            }\r\n\r\n            results = results.concat(this.Contents);\r\n\r\n            return results;\r\n        }\r\n    }\r\n}","import { ICloneable } from \"../../Interfaces/ICloneable\";\r\nimport { Vector2d } from \"../Vectors/Vector2d\";\r\nimport { ITyped } from \"../../Interfaces/ITyped\";\r\n\r\n/**\r\n* Defines a two dimensional size object which specifies a Width and Height.\r\n*/\r\nexport class Size2d implements ITyped, ICloneable {\r\n    public _type: string = \"Size2d\";\r\n\r\n    /**\r\n    * Gets or sets the horizontal component of this Size structure.\r\n    */\r\n    public Width: number;\r\n    /**\r\n    * Gets or sets the vertical component of this Size structure.\r\n    */\r\n    public Height: number;\r\n\r\n    /**\r\n    * Creates a new instance of Size2d.\r\n    * @param size Initial value of the Width and Height components of Size2d.\r\n    */\r\n    constructor(size: number);\r\n    /**\r\n    * Creates a new instance of Size2d.\r\n    * @param width Initial value of the Width component of Size2d.\r\n    * @param height Initial value of the Height component of Size2d.\r\n    */\r\n    constructor(width: number, height: number);\r\n    constructor(first: number, second?: number) {\r\n        this.Width = first || 0;\r\n        this.Height = typeof second !== \"undefined\" ? second : this.Width;\r\n    }\r\n\r\n    /**\r\n    * Returns a Size2d with all its components set to zero.\r\n    */\r\n    public static get Zero(): Size2d {\r\n        return new Size2d(0, 0);\r\n    }\r\n\r\n    /**\r\n    * Returns a Size2d with all its components set to one.\r\n    */\r\n    public static get One(): Size2d {\r\n        return new Size2d(1, 1);\r\n    }\r\n\r\n    /**\r\n    * Gets the radius that encompasses the two dimensional size of this Size2d.\r\n    */\r\n    public get Radius(): number {\r\n        return .5 * Math.sqrt(this.Width * this.Width + this.Height * this.Height);\r\n    }\r\n\r\n    /**\r\n    * Gets half of the Width component of this Size2d.\r\n    */\r\n    public get HalfWidth(): number {\r\n        return this.Width / 2;\r\n    }\r\n\r\n    /**\r\n    * Gets half of the Height component of this Size2d.\r\n    */\r\n    public get HalfHeight(): number {\r\n        return this.Height / 2;\r\n    }\r\n\r\n    /**\r\n    * Executes the action with the Width and Height of this Size2d and sets the Width and Height to the corresponding return values.\r\n    * @param action The function used to modify the Width and Height.\r\n    */\r\n    public Apply(action: (val: number) => number): void {\r\n        this.Width = action(this.Width);\r\n        this.Height = action(this.Height);\r\n    }\r\n\r\n    /**\r\n    * Executes the action with the Width and Height of this Size2d.\r\n    * @param action The function to pass the Width and Height components to.\r\n    */\r\n    public Trigger(action: (val: number) => void): void {\r\n        action(this.Width);\r\n        action(this.Height);\r\n    }\r\n\r\n    /**\r\n    * Returns a Size2d that is the result of adding the Width and Height of this Size2d to the Width and Height of a Size2d.\r\n    * @param val The Size2d to add.\r\n    */\r\n    public Add(val: Size2d): Size2d;\r\n    /**\r\n    * Returns a Size2d that is the result of adding the Width and Height of this Size2d to the X and Y of a Vector2d.\r\n    * @param val The Vector2d to add.\r\n    */\r\n    public Add(val: Vector2d): Size2d;\r\n    /**\r\n    * Returns a Size2d that is the result of adding the Width and Height of this Size2d to a number.\r\n    * @param val The number to add.\r\n    */\r\n    public Add(val: number): Size2d;\r\n    public Add(val: any): Size2d {\r\n        if (val._type === \"Size2d\") {\r\n            return new Size2d(this.Width + val.Width, this.Height + val.Height);\r\n        }\r\n        else if (val._type === \"Vector2d\") {\r\n            return new Size2d(this.Width + val.X, this.Height + val.Y);\r\n        }\r\n        else {\r\n            return new Size2d(this.Width + val, this.Height + val);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Returns a Size2d that is the result of multiplying the Width and Height of this Size2d by the Width and Height of a Size2d.\r\n    * @param val The Size2d to multiply.\r\n    */\r\n    public Multiply(val: Size2d): Size2d;\r\n    /**\r\n    * Returns a Size2d that is the result of multiplying the Width and Height of this Size2d by the X and Y of a Vector2d.\r\n    * @param val The Vector2d to multiply.\r\n    */\r\n    public Multiply(val: Vector2d): Size2d;\r\n    /**\r\n    * Returns a Size2d that is the result of multiplying the Width and Height of this Size2d by a number.\r\n    * @param val The number to multiply.\r\n    */\r\n    public Multiply(val: number): Size2d;\r\n    public Multiply(val: any): Size2d {\r\n        if (val._type === \"Size2d\") {\r\n            return new Size2d(this.Width * val.Width, this.Height * val.Height);\r\n        }\r\n        else if (val._type === \"Vector2d\") {\r\n            return new Size2d(this.Width * val.X, this.Height * val.Y);\r\n        }\r\n        else {\r\n            return new Size2d(this.Width * val, this.Height * val);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Returns a Size2d that is the result of subtracting the Width and Height of this Size2d by the Width and Height of a Size2d.\r\n    * @param val The Size2d to subtract.\r\n    */\r\n    public Subtract(val: Size2d): Size2d;\r\n    /**\r\n    * Returns a Size2d that is the result of subtracting the Width and Height of this Size2d by the X and Y of a Vector2d.\r\n    * @param val The Vector2d to subtract.\r\n    */\r\n    public Subtract(val: Vector2d): Size2d;\r\n    /**\r\n    * Returns a Size2d that is the result of subtracting the Width and Height of this Size2d by a number.\r\n    * @param val The number to subtract.\r\n    */\r\n    public Subtract(val: number): Size2d;\r\n    public Subtract(val: any): Size2d {\r\n        if (val._type === \"Size2d\") {\r\n            return new Size2d(this.Width - val.Width, this.Height - val.Height);\r\n        }\r\n        else if (val._type === \"Vector2d\") {\r\n            return new Size2d(this.Width - val.X, this.Height - val.Y);\r\n        }\r\n        else {\r\n            return new Size2d(this.Width - val, this.Height - val);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Returns a Size2d that is the result of subtracting the Width and Height of this Size2d from the Width and Height of a Size2d.\r\n    * @param val The Size2d to subtract from.\r\n    */\r\n    public SubtractFrom(val: Size2d): Size2d;\r\n    /**\r\n    * Returns a Size2d that is the result of subtracting the Width and Height of this Size2d from the X and Y of a Vector2d.\r\n    * @param val The Vector2d to subtract from.\r\n    */\r\n    public SubtractFrom(val: Vector2d): Size2d;\r\n    /**\r\n    * Returns a Size2d that is the result of subtracting the Width and Height of this Size2d from a number.\r\n    * @param val The number to subtract from.\r\n    */\r\n    public SubtractFrom(val: number): Size2d;\r\n    public SubtractFrom(val: any): Size2d {\r\n        if (val._type === \"Size2d\") {\r\n            return new Size2d(val.Width - this.Width, val.Height - this.Height);\r\n        }\r\n        else if (val._type === \"Vector2d\") {\r\n            return new Size2d(val.X - this.Width, val.Y - this.Height);\r\n        }\r\n        else {\r\n            return new Size2d(val - this.Width, val - this.Height);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Returns a Size2d that is the result of dividing the Width and Height of this Size2d by the Width and Height of a Size2d.\r\n    * @param val The Size2d to divide.\r\n    */\r\n    public Divide(val: Size2d): Size2d;\r\n    /**\r\n    * Returns a Size2d that is the result of dividing the Width and Height of this Size2d by the X and Y of a Vector2d.\r\n    * @param val The Vector2d to divide.\r\n    */\r\n    public Divide(val: Vector2d): Size2d;\r\n    /**\r\n    * Returns a Size2d that is the result of dividing the Width and Height of this Size2d by a number.\r\n    * @param val The number to divide.\r\n    */\r\n    public Divide(val: number): Size2d;\r\n    public Divide(val: any): Size2d {\r\n        if (val._type === \"Size2d\") {\r\n            return new Size2d(this.Width / val.Width, this.Height / val.Height);\r\n        }\r\n        else if (val._type === \"Vector2d\") {\r\n            return new Size2d(this.Width / val.X, this.Height / val.Y);\r\n        }\r\n        else {\r\n            return new Size2d(this.Width / val, this.Height / val);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Returns a Size2d that is the result of dividing the Width and Height of this Size2d from the Width and Height of a Size2d.\r\n    * @param val The Size2d to divide from.\r\n    */\r\n    public DivideFrom(val: Size2d): Size2d;\r\n    /**\r\n    * Returns a Size2d that is the result of dividing the Width and Height of this Size2d from the X and Y of a Vector2d.\r\n    * @param val The Vector2d to divide from.\r\n    */\r\n    public DivideFrom(val: Vector2d): Size2d;\r\n    /**\r\n    * Returns a Size2d that is the result of dividing the Width and Height of this Size2d from a number.\r\n    * @param val The number to divide from.\r\n    */\r\n    public DivideFrom(val: number): Size2d;\r\n    public DivideFrom(val: any): Size2d {\r\n        if (val._type === \"Size2d\") {\r\n            return new Size2d(val.Width / this.Width, val.Height / this.Height);\r\n        }\r\n        else if (val._type === \"Vector2d\") {\r\n            return new Size2d(val.X / this.Width, val.Y / this.Height);\r\n        }\r\n        else {\r\n            return new Size2d(val / this.Width, val / this.Height);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Returns a Size2d that is the negated version of this Size2d.\r\n    */\r\n    public Negate(): Size2d {\r\n        return new Size2d(this.Width * -1, this.Height * -1);\r\n    }\r\n\r\n    /**\r\n    * Determines whether this Size2d has the same Width and Height of another Size2d.\r\n    * @param size The Size2d to compare the current Size2d to.\r\n    */\r\n    public Equivalent(size: Size2d): boolean {\r\n        return this.Width === size.Width && this.Height === size.Height;\r\n    }\r\n\r\n    /**\r\n    * Returns a Size2d that has identical Width's and Height's as the current Size2d.\r\n    */\r\n    public Clone(): Size2d {\r\n        return new Size2d(this.Width, this.Height);\r\n    }\r\n\r\n    /**\r\n    * Overridden toString method to display Size2d in the (Width, Height) format.\r\n    */\r\n    public toString(): string {\r\n        return \"(\" + this.Width + \", \" + this.Height + \")\";\r\n    }\r\n}","import { IDisposable } from \"../Interfaces/IDisposable\";\r\nimport { ITyped } from \"../Interfaces/ITyped\";\r\n\r\n/**\r\n* Defines a type constrained event handler object that can maintain bound functions which take in a value T and trigger them on demand.\r\n*/\r\nexport class EventHandler1<T> implements IDisposable, ITyped {\r\n    public _type: string = \"EventHandler1\";\r\n\r\n    private _actions: Array<(val: T) => any>;\r\n\r\n    /**\r\n    * Creates a new instance of the EventHandler object.\r\n    */\r\n    constructor() {\r\n        this._actions = [];\r\n    }\r\n\r\n    /**\r\n    * Binds the provided action to the EventHandler1.  Trigger will execute all bound functions.\r\n    * @param action Function to execute on EventHandler Trigger.\r\n    */\r\n    public Bind(action: (val: T) => any): void {\r\n        this._actions.push(action);\r\n    }\r\n\r\n    /**\r\n    * Binds the provided action to the EventHandler1 for the specified number of triggers.  Once all triggers have been fired the action will unbind itself.  Trigger will execute all bound functions.\r\n    * @param action Function to execute on EventHandler Trigger.\r\n    * @param triggerCount Number of triggers to wait before unbinding the action.\r\n    */\r\n    public BindFor(action: (val: T) => any, triggerCount: number): void {\r\n        var that = this,\r\n            triggers: number = 0,\r\n            wire: (val: T) => any = function () {\r\n                if (++triggers >= triggerCount) {\r\n                    that.Unbind(wire);\r\n                }\r\n\r\n                // @ts-ignore\r\n                action.apply(this, arguments);\r\n            };\r\n\r\n        this._actions.push(wire);\r\n    }\r\n\r\n    /**\r\n    * Unbinds the provided action from the EventHandler1.\r\n    * @param action Function to unbind.  The action will no longer be executed when the EventHandler gets Triggered.\r\n    */\r\n    public Unbind(action: (val: T) => any): void {\r\n        for (var i = 0; i < this._actions.length; i++) {\r\n            if (this._actions[i] === action) {\r\n                this._actions.splice(i, 1);\r\n\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Determines if the EventHandler1 has active bindings.\r\n    */\r\n    public HasBindings(): boolean {\r\n        return this._actions.length > 0;\r\n    }\r\n\r\n    /**\r\n    * Executes all bound functions and passes the provided args to each.\r\n    * @param val The argument to pass to the bound functions.\r\n    */\r\n    public Trigger(val: T): void {\r\n        var actions;\r\n\r\n        if (this.HasBindings()) {\r\n            // Clone array so unbinds happening via triggers do not affect functionality\r\n            actions = this._actions.slice(0);\r\n\r\n            for (var i = 0; i < actions.length; i++) {\r\n                actions[i](val);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Disposes the event handler and unbinds all bound events.\r\n    */\r\n    public Dispose(): void {\r\n        // Clear the array\r\n        this._actions = [];\r\n    }\r\n}","import { IDisposable } from \"../Interfaces/IDisposable\";\r\nimport { ITyped } from \"../Interfaces/ITyped\";\r\n\r\n/**\r\n* Defines an event handler object that can maintain bound functions and trigger them on demand.\r\n*/\r\nexport class EventHandler implements IDisposable, ITyped {\r\n    public _type: string = \"EventHandler\";\r\n\r\n    private _actions: Array<Function>;\r\n\r\n    /**\r\n    * Creates a new instance of the EventHandler object.\r\n    */\r\n    constructor() {\r\n        this._actions = [];\r\n    }\r\n\r\n    /**\r\n    * Binds the provided action to the EventHandler.  Trigger will execute all bound functions.\r\n    * @param action Function to execute on EventHandler Trigger.\r\n    */\r\n    public Bind(action: Function): void {\r\n        this._actions.push(action);\r\n    }\r\n\r\n    /**\r\n    * Binds the provided action to the EventHandler for the specified number of triggers.  Once all triggers have been fired the EventHandler will unbind itself.  Trigger will execute all bound functions.\r\n    * @param action Function to execute on EventHandler Trigger.\r\n    * @param triggerCount Number of triggers to wait before unbinding the action.\r\n    */\r\n    public BindFor(action: Function, triggerCount: number): void {\r\n        var that = this,\r\n            triggers: number = 0,\r\n            wire: Function = function () {\r\n                if (++triggers >= triggerCount) {\r\n                    that.Unbind(wire);\r\n                }\r\n\r\n                // @ts-ignore\r\n                action.apply(this, arguments);\r\n            };\r\n\r\n        this._actions.push(wire);\r\n    }\r\n\r\n    /**\r\n    * Unbinds the provided action from the EventHandler.\r\n    * @param action Function to unbind.  The action will no longer be executed when the EventHandler gets Triggered.\r\n    */\r\n    public Unbind(action: Function): void {\r\n        for (var i = 0; i < this._actions.length; i++) {\r\n            if (this._actions[i] === action) {\r\n                this._actions.splice(i, 1);\r\n\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Determines if the EventHandler has active bindings.\r\n    */\r\n    public HasBindings(): boolean {\r\n        return this._actions.length > 0;\r\n    }\r\n\r\n    /**\r\n    * Executes all bound functions and passes the provided args to each.\r\n    */\r\n    public Trigger(): void {\r\n        var actions;\r\n\r\n        if (this.HasBindings()) {\r\n            // Clone array so unbinds happening via triggers do not affect functionality\r\n            actions = this._actions.slice(0);\r\n\r\n            for (var i = 0; i < actions.length; i++) {\r\n                actions[i]();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Disposes the event handler and unbinds all bound events.\r\n    */\r\n    public Dispose(): void {\r\n        // Clear the array\r\n        this._actions = [];\r\n    }\r\n}","import { ITyped } from \"../Interfaces/ITyped\";\r\nimport { IDisposable } from \"../Interfaces/IDisposable\";\r\n\r\n/**\r\n* Defines a type constrained event handler object that can maintain bound functions which take in a value T and U and trigger them on demand.\r\n*/\r\nexport class EventHandler2<T, U> implements IDisposable, ITyped {\r\n    public _type: string = \"EventHandler2\";\r\n\r\n    private _actions: Array<(val1: T, val2: U) => any>;\r\n\r\n    /**\r\n    * Creates a new instance of the EventHandler2 object.\r\n    */\r\n    constructor() {\r\n        this._actions = [];\r\n    }\r\n\r\n    /**\r\n    * Binds the provided action to the EventHandler2.  Trigger will execute all bound functions.\r\n    * @param action Function to execute on EventHandler2 Trigger.\r\n    */\r\n    public Bind(action: (val1: T, val2: U) => any): void {\r\n        this._actions.push(action);\r\n    }\r\n\r\n    /**\r\n    * Binds the provided action to the EventHandler2 for the specified number of triggers.  Once all triggers have been fired the action will unbind itself.  Trigger will execute all bound functions.\r\n    * @param action Function to execute on EventHandler2 Trigger.\r\n    * @param triggerCount Number of triggers to wait before unbinding the action.\r\n    */\r\n    public BindFor(action: (val1: T, val2: U) => any, triggerCount: number): void {\r\n        var that = this,\r\n            triggers: number = 0,\r\n            wire: (val1: T, val2: U) => any = function () {\r\n                if (++triggers >= triggerCount) {\r\n                    that.Unbind(wire);\r\n                }\r\n\r\n                // @ts-ignore\r\n                action.apply(this, arguments);\r\n            };\r\n\r\n        this._actions.push(wire);\r\n    }\r\n\r\n    /**\r\n    * Unbinds the provided action from the EventHandler2.\r\n    * @param action Function to unbind.  The action will no longer be executed when the EventHandler gets Triggered.\r\n    */\r\n    public Unbind(action: (val1: T, val2: U) => any): void {\r\n        for (var i = 0; i < this._actions.length; i++) {\r\n            if (this._actions[i] === action) {\r\n                this._actions.splice(i, 1);\r\n\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Determines if the EventHandler2 has active bindings.\r\n    */\r\n    public HasBindings(): boolean {\r\n        return this._actions.length > 0;\r\n    }\r\n\r\n    /**\r\n    * Executes all bound functions and passes the provided args to each.\r\n    * @param val1 The first argument to pass to the bound functions.\r\n    * @param val2 The second argument to pass to the bound functions.\r\n    */\r\n    public Trigger(val1: T, val2: U): void {\r\n        var actions;\r\n\r\n        if (this.HasBindings()) {\r\n            // Clone array so unbinds happening via triggers do not affect functionality\r\n            actions = this._actions.slice(0);\r\n\r\n            for (var i = 0; i < actions.length; i++) {\r\n                actions[i](val1, val2);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Disposes the event handler and unbinds all bound events.\r\n    */\r\n    public Dispose(): void {\r\n        // Clear the array\r\n        this._actions = [];\r\n    }\r\n}","import { Vector2d } from \"../Assets/Vectors/Vector2d\";\r\nimport { Size2d } from \"../Assets/Sizes/Size2d\";\r\nimport { Bounds } from \"../Bounds/Bounds\";\r\nimport { GameTime } from \"../GameTime\";\r\nimport { EventHandler } from \"../Utilities/EventHandler\";\r\nimport { IDisposable } from \"../Interfaces/IDisposable\";\r\nimport { ICloneable } from \"../Interfaces/ICloneable\";\r\nimport { ITyped } from \"../Interfaces/ITyped\";\r\nimport { IMoveable } from \"../Interfaces/IMoveable\";\r\nimport { EventHandler1 } from \"../Utilities/EventHandler1\";\r\nimport { TimeSpan } from \"../Assets/TimeSpan\";\r\nimport { EventHandler2 } from \"../Utilities/EventHandler2\";\r\nimport { Rendering } from \"../Rendering/Rendering\";\r\nimport { asyncLoop } from \"../Extensions/Helpers\";\r\n\r\nexport module Graphics {\r\n\r\n    export class Graphic2dState {\r\n        private _cachedState: { [property: string]: any; };\r\n\r\n        constructor() {\r\n            this._cachedState = {};\r\n        }\r\n\r\n        public get StrokeStyle(): string {\r\n            return this._cachedState[\"strokeStyle\"];\r\n        }\r\n        public set StrokeStyle(value: string) {\r\n            this._cachedState[\"strokeStyle\"] = value\r\n        }\r\n\r\n        public get FillStyle(): string {\r\n            return this._cachedState[\"fillStyle\"];\r\n        }\r\n        public set FillStyle(value: string) {\r\n            this._cachedState[\"fillStyle\"] = value;\r\n        }\r\n\r\n        public get GlobalAlpha(): number {\r\n            return this._cachedState[\"globalAlpha\"];\r\n        }\r\n        public set GlobalAlpha(value: number) {\r\n            this._cachedState[\"globalAlpha\"] = value;\r\n        }\r\n\r\n        public get LineWidth(): number {\r\n            return this._cachedState[\"lineWidth\"];\r\n        }\r\n        public set LineWidth(value: number) {\r\n            this._cachedState[\"lineWidth\"] = value;\r\n        }\r\n\r\n        public get LineCap(): string {\r\n            return this._cachedState[\"lineCap\"];\r\n        }\r\n        public set LineCap(value: string) {\r\n            this._cachedState[\"lineCap\"] = value;\r\n        }\r\n\r\n        public get LineJoin(): string {\r\n            return this._cachedState[\"lineJoin\"];\r\n        }\r\n        public set LineJoin(value: string) {\r\n            this._cachedState[\"lineJoin\"] = value;\r\n        }\r\n\r\n        public get MiterLimit(): number {\r\n            return this._cachedState[\"miterLimit\"];\r\n        }\r\n        public set MiterLimit(value: number) {\r\n            this._cachedState[\"miterLimit\"] = value;\r\n        }\r\n\r\n        public get ShadowOffsetX(): number {\r\n            return this._cachedState[\"shadowOffsetX\"];\r\n        }\r\n        public set ShadowOffsetX(value: number) {\r\n            this._cachedState[\"shadowOffsetX\"] = value;\r\n        }\r\n\r\n        public get ShadowOffsetY(): number {\r\n            return this._cachedState[\"shadowOffsetY\"];\r\n        }\r\n        public set ShadowOffsetY(value: number) {\r\n            this._cachedState[\"shadowOffsetY\"] = value;\r\n        }\r\n\r\n        public get ShadowBlur(): number {\r\n            return this._cachedState[\"shadowBlur\"];\r\n        }\r\n        public set ShadowBlur(value: number) {\r\n            this._cachedState[\"shadowBlur\"] = value;\r\n        }\r\n\r\n        public get ShadowColor(): string {\r\n            return this._cachedState[\"shadowColor\"];\r\n        }\r\n        public set ShadowColor(value: string) {\r\n            this._cachedState[\"shadowColor\"] = value;\r\n        }\r\n\r\n        public get GlobalCompositeOperation(): string {\r\n            return this._cachedState[\"globalCompositeOperation\"];\r\n        }\r\n        public set GlobalCompositeOperation(value: string) {\r\n            this._cachedState[\"globalCompositeOperation\"] = value;\r\n        }\r\n\r\n        public get Font(): string {\r\n            return this._cachedState[\"font\"];\r\n        }\r\n        public set Font(value: string) {\r\n            this._cachedState[\"font\"] = value;\r\n        }\r\n\r\n        public get TextAlign(): string {\r\n            return this._cachedState[\"textAlign\"];\r\n        }\r\n        public set TextAlign(value: string) {\r\n            this._cachedState[\"textAlign\"] = value;\r\n        }\r\n\r\n        public get TextBaseline(): string {\r\n            return this._cachedState[\"textBaseline\"];\r\n        }\r\n        public set TextBaseline(value: string) {\r\n            this._cachedState[\"textBaseline\"] = value;\r\n        }\r\n\r\n        public SetContextState(context: CanvasRenderingContext2D): void {\r\n            for (var key in this._cachedState) {\r\n                // @ts-ignore\r\n                context[key] = this._cachedState[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Abstract drawable graphic type that is used create the base for graphics.\r\n    */\r\n    export class Graphic2d implements ITyped, Rendering.IRenderable, IMoveable, IDisposable, ICloneable {\r\n        public _type: string = \"Graphic2d\";\r\n\r\n        /**\r\n        * Gets or sets the ZIndex of the Graphic2d.  The ZIndex is used to control draw order.  Higher ZIndexes appear above lower ZIndexed graphics.\r\n        */\r\n        public ZIndex: number;\r\n\r\n        /**\r\n        * Gets or sets the Visible property.  The Visible property determines whether the renderable will be drawn to the game screen.\r\n        */\r\n        public Visible: boolean;\r\n\r\n        /**\r\n        * Gets or sets the Position of the Graphic2d.  The Position determines where the graphic will be drawn on the screen.\r\n        */\r\n        public Position: Vector2d;\r\n        /**\r\n        * Gets or sets the Rotation of the Graphic2d..\r\n        */\r\n        public Rotation: number;\r\n\r\n        /**\r\n        * Gets the parent of the Graphic2d.  Value is null if no parent exists.\r\n        */\r\n        public Parent: Graphic2d | null;\r\n\r\n        public _State: Graphic2dState;\r\n\r\n        public static _zindexSort: (a: Graphic2d, b: Graphic2d) => number = (a: Graphic2d, b: Graphic2d) => { return a.ZIndex - b.ZIndex; };\r\n\r\n        private _children: Graphic2d[];\r\n        private _childrenRemovalBindings: Array<(graphic: Graphic2d) => void>;\r\n        private _onDisposed: EventHandler1<Graphic2d>;\r\n        private _disposed: boolean;\r\n\r\n        /**\r\n        * Creates a new instance of the Graphic2d object.  Should only ever be called by a derived class.\r\n        * @param position The initial position of the Graphic2d\r\n        */\r\n        constructor(position: Vector2d) {\r\n            this.Position = position;\r\n            this.Rotation = 0;\r\n            this.ZIndex = 0;\r\n            this.Visible = true;\r\n            this._State = new Graphic2dState();\r\n            this.Opacity = 1;\r\n            this._children = [];\r\n            this._childrenRemovalBindings = [];\r\n            this.Parent = null;\r\n            this._disposed = false;\r\n            this._onDisposed = new EventHandler1<Graphic2d>();\r\n        }\r\n\r\n        /**\r\n        * Gets the absolute position of the Graphic2d.  This is used to calculate absolute positions when graphic's have parents.\r\n        */\r\n        public get AbsolutePosition(): Vector2d {\r\n            var position = this.Position,\r\n                node: Graphic2d | null = this;\r\n\r\n            // Iterate up the parent tree until we're at the root parent\r\n            while (node = node.Parent) {\r\n                position = position.Add(node.Position);\r\n            }\r\n\r\n            return position;\r\n        }\r\n\r\n        /**\r\n        * Gets an event that is triggered when the Graphic2d has been disposed.  Functions can be bound or unbound to this event to be executed when the event triggers.\r\n        */\r\n        public get OnDisposed(): EventHandler1<Graphic2d> {\r\n            return this._onDisposed;\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the current opacity.  Value is between 0 and 1.\r\n        */\r\n        public get Opacity(): number {\r\n            return this._State.GlobalAlpha;\r\n        }\r\n        public set Opacity(alpha: number) {\r\n            this._State.GlobalAlpha = alpha;\r\n        }\r\n\r\n        /**\r\n        * Returns the list of children for the current Graphic2d.\r\n        */\r\n        public GetChildren(): Graphic2d[] {\r\n            return this._children.slice(0);\r\n        }\r\n\r\n        /**\r\n        * Adds a child to the Graphic2d.  Children are drawn with relative positions to the parent Graphic2d.  Children\r\n        * of a Graphic2d should not be added to the Scene, parent Graphic2d's are responsible for drawing their children.\r\n        * @param graphic Child to add.\r\n        */\r\n        public AddChild(graphic: Graphic2d): void {\r\n            var removalBinding: (graphic: Graphic2d) => void;\r\n\r\n            if (graphic.Parent !== null) {\r\n                throw new Error(\"Graphic already has parent, cannot add it as a child.\");\r\n            }\r\n\r\n            removalBinding = (graphic: Graphic2d) => {\r\n                this.RemoveChild(graphic);\r\n            };\r\n\r\n            graphic.Parent = this;\r\n            graphic.OnDisposed.Bind(removalBinding);\r\n\r\n            this._children.push(graphic);\r\n            this._childrenRemovalBindings.push(removalBinding);\r\n            this._children.sort(Graphic2d._zindexSort);\r\n        }\r\n\r\n        /**\r\n        * Removes a child from the Graphic2d.  Returns a Boolean value indicating whether or not the child was able to be removed.\r\n        * @param graphic Child to remove.\r\n        */\r\n        public RemoveChild(graphic: Graphic2d): boolean {\r\n            var index = this._children.indexOf(graphic);\r\n\r\n            if (index >= 0) {\r\n                this._children[index].Parent = null;\r\n                this._children[index].OnDisposed.Unbind(this._childrenRemovalBindings[index]);\r\n                this._children.splice(index, 1);\r\n                this._childrenRemovalBindings.splice(index, 1);\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        public _StartDraw(context: CanvasRenderingContext2D): void {\r\n            context.save();\r\n            this._State.SetContextState(context);\r\n\r\n            context.translate(this.Position.X, this.Position.Y);\r\n\r\n            if (this.Rotation !== 0) {\r\n                context.rotate(this.Rotation);\r\n            }\r\n        }\r\n\r\n        public _EndDraw(context: CanvasRenderingContext2D): void {\r\n            for (var i = 0; i < this._children.length; i++) {\r\n                if (this._children[i].Visible) {\r\n                    this._children[i].Draw(context);\r\n                }\r\n            }\r\n\r\n            context.restore();\r\n        }\r\n\r\n        /**\r\n        * Abstract: Should be overridden to draw the derived class onto the context.  If this graphic is part of a scene the Draw function will be called automatically.\r\n        * @param context The canvas context to draw the graphic onto.\r\n        */\r\n        public Draw(context: CanvasRenderingContext2D): void {\r\n            throw new Error(\"The Draw method is abstract on Graphic2d and should not be called.\");\r\n        }\r\n\r\n        /**\r\n        * Abstract: Should be overridden to return the bounding area that represents where the graphic will draw.\r\n        */\r\n        public GetDrawBounds(): Bounds.Bounds2d {\r\n            throw new Error(\"GetDrawBounds is abstract, it must be implemented.\");\r\n        }\r\n\r\n        /**\r\n        * Abstract: Should be overridden to scale the size of the Graphic2d.\r\n        * @param scale The value to multiply the graphic's size by.\r\n        */\r\n        public Scale(scale: number): void {\r\n            throw new Error(\"Scale is abstract, it must be implemented.\");\r\n        }\r\n\r\n        /**\r\n        * Abstract: Returns a nearly identical copy of this Graphic2d.  If this Graphic2d belongs to a parent, the cloned Graphic2d will not. If this Graphic2d has children, all children will be cloned as well.  Lastly, the cloned Graphic2d will not have the same event bindings as this one does.\r\n        */\r\n        public Clone(): Graphic2d {\r\n            throw new Error(\"Clone is abstract, it must be implemented.\");\r\n        }\r\n\r\n        // Used by derived Graphic2d's to centralize logic\r\n        public _Clone(graphic: Graphic2d): void {\r\n            for (var i = 0; i < this._children.length; i++) {\r\n                graphic.AddChild(this._children[i].Clone());\r\n            }\r\n\r\n            graphic.Opacity = this.Opacity;\r\n            graphic.Rotation = this.Rotation;\r\n            graphic.Visible = this.Visible;\r\n            graphic.ZIndex = this.ZIndex;\r\n        }\r\n\r\n        /**\r\n        * Triggers the OnDisposed event.  If this Graphic2d is used with a Scene2d it will be removed from the scene when disposed.\r\n        */\r\n        public Dispose(): void {\r\n            var childrenClone;\r\n\r\n            if (!this._disposed) {\r\n                this._disposed = true;\r\n\r\n                childrenClone = this._children.slice(0);\r\n\r\n                // Dispose all children to ensure that there's no dangling references.\r\n                for (var i = 0; i < childrenClone.length; i++) {\r\n                    childrenClone[i].Dispose();\r\n                }\r\n\r\n                delete this._children;\r\n                this.OnDisposed.Trigger(this);\r\n                this.OnDisposed.Dispose();\r\n            }\r\n            else {\r\n                throw new Error(\"Cannot dispose graphic more than once.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Defines a drawable 2d line element.\r\n    */\r\n    export class Line2d extends Graphic2d {\r\n        public _type: string = \"Line2d\";\r\n\r\n        private _from: Vector2d;\r\n        private _to: Vector2d;\r\n        // @ts-ignore\r\n        private _difference: Vector2d;\r\n        // @ts-ignore\r\n        private _boundsWidth: number;\r\n        // @ts-ignore\r\n        private _cachedPosition: Vector2d;\r\n        // @ts-ignore\r\n        private _strokeStyle: Color;\r\n        private _strokeChangeWire: (color: Color) => void;\r\n\r\n        /**\r\n        * Creates a new instance of the Line2d object with a line width of 1.\r\n        * @param fromX Starting horizontal coordinate.\r\n        * @param fromY Starting vertical coordinate.\r\n        * @param toX Ending horizontal coordinate.\r\n        * @param toY Ending vertical coordinate.\r\n        */\r\n        constructor(fromX: number, fromY: number, toX: number, toY: number);\r\n        /**\r\n        * Creates a new instance of the Line2d object with a specified line width.\r\n        * @param fromX Starting horizontal coordinate.\r\n        * @param fromY Starting vertical coordinate.\r\n        * @param toX Ending horizontal coordinate.\r\n        * @param toY Ending vertical coordinate.\r\n        * @param lineWidth Initial thickness of the line.\r\n        */\r\n        constructor(fromX: number, fromY: number, toX: number, toY: number, lineWidth: number);\r\n        /**\r\n        * Creates a new instance of the Line2d object with a specified line width and color.\r\n        * @param fromX Starting horizontal coordinate.\r\n        * @param fromY Starting vertical coordinate.\r\n        * @param toX Ending horizontal coordinate.\r\n        * @param toY Ending vertical coordinate.\r\n        * @param lineWidth Initial thickness of the line.\r\n        * @param color Initial color of the line.\r\n        */\r\n        constructor(fromX: number, fromY: number, toX: number, toY: number, lineWidth: number, color: Color);\r\n        /**\r\n        * Creates a new instance of the Line2d object with a specified line width and color.\r\n        * @param fromX Starting horizontal coordinate.\r\n        * @param fromY Starting vertical coordinate.\r\n        * @param toX Ending horizontal coordinate.\r\n        * @param toY Ending vertical coordinate.\r\n        * @param lineWidth Initial thickness of the line.\r\n        * @param color Initial color string of the line.\r\n        */\r\n        constructor(fromX: number, fromY: number, toX: number, toY: number, lineWidth: number, color: string);\r\n        constructor(fromX: number, fromY: number, toX: number, toY: number, lineWidth: number = 1, color?: any) {\r\n            super(Vector2d.Zero);// Set to zero here then updated in the rest of the constructor (use same logic)\r\n\r\n            this._from = new Vector2d(fromX, fromY);\r\n            this._to = new Vector2d(toX, toY);\r\n            this.LineWidth = lineWidth;\r\n            this.UpdatePosition();\r\n\r\n            this._strokeChangeWire = (color: Color) => {\r\n                this._State.StrokeStyle = color.toString();\r\n            };\r\n\r\n            if (typeof color !== \"undefined\") {\r\n                if (typeof color === \"string\") {\r\n                    color = new Color(color);\r\n                }\r\n                this.Color = this._strokeStyle = color;\r\n            }\r\n            else {\r\n                this.Color = this._strokeStyle = Color.Black;\r\n            }\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the From location of the Line2d.\r\n        */\r\n        public get From(): Vector2d {\r\n            return this._from;\r\n        }\r\n        public set From(newPosition: Vector2d) {\r\n            this._from = newPosition;\r\n            this.UpdatePosition();\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the To location of the Line2d.\r\n        */\r\n        public get To(): Vector2d {\r\n            return this._to;\r\n        }\r\n        public set To(newPosition: Vector2d) {\r\n            this._to = newPosition;\r\n            this.UpdatePosition();\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the line color.  Valid colors are strings like \"red\" or \"rgb(255,0,0)\".\r\n        */\r\n        public get Color(): Color {\r\n            return this._strokeStyle;\r\n        }\r\n        public set Color(color) {\r\n            if (typeof color === \"string\") {\r\n                color = new Color(<any>color);\r\n            }\r\n\r\n            // Unbind old\r\n            this._strokeStyle.OnChange.Unbind(this._strokeChangeWire);\r\n            this._strokeStyle = color;\r\n            // Bind new\r\n            this._strokeStyle.OnChange.Bind(this._strokeChangeWire);\r\n            // Update state\r\n            this._strokeChangeWire(color);\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the line width.\r\n        */\r\n        public get LineWidth(): number {\r\n            return this._State.LineWidth;\r\n        }\r\n        public set LineWidth(width: number) {\r\n            this._State.LineWidth = width;\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the line cap.  Values can be \"butt\", \"round\", \"square\".\r\n        */\r\n        public get LineCap(): string {\r\n            return this._State.LineCap;\r\n        }\r\n        public set LineCap(cap: string) {\r\n            this._State.LineCap = cap;\r\n        }\r\n\r\n        /**\r\n        * Draws the line onto the given context.  If this Line2d is part of a scene the Draw function will be called automatically.\r\n        * @param context The canvas context to draw the line onto.\r\n        */\r\n        public Draw(context: CanvasRenderingContext2D): void {\r\n            // Need to check to ensure that the colors still match up so if people are performing direct color manipulation\r\n            // such as color.R = 131.\r\n            if (this._strokeStyle.toString() !== this._State.StrokeStyle) {\r\n                this._State.StrokeStyle = this._strokeStyle.toString();\r\n            }\r\n\r\n            super._StartDraw(context);\r\n\r\n            // Check if the user has modified the position directly, if so we need to translate the from and to positions accordingly\r\n            if (!this._cachedPosition.Equivalent(this.Position)) {\r\n                this.RefreshCache();\r\n            }\r\n\r\n            // Context origin is at the center point of the line\r\n            context.beginPath();\r\n            context.moveTo(this._from.X - this.Position.X, this._from.Y - this.Position.Y);\r\n            context.lineTo(this._to.X - this.Position.X, this._to.Y - this.Position.Y);\r\n            context.stroke();\r\n\r\n            super._EndDraw(context);\r\n        }\r\n\r\n        /**\r\n        * The bounding area that represents where the Line2d will draw.\r\n        */\r\n        public GetDrawBounds(): Bounds.Bounds2d {\r\n            var bounds = new Bounds.BoundingRectangle(this.Position, new Size2d(this._boundsWidth, this.LineWidth));\r\n\r\n            bounds.Rotation = Math.atan2(this._difference.Y, this._difference.X) + this.Rotation;\r\n\r\n            return bounds;\r\n        }\r\n\r\n        /**\r\n        * Scale's the Line2d graphic.\r\n        * @param scale The value to multiply the graphic's size by.\r\n        */\r\n        public Scale(scale: number): void {\r\n            this.From = this.Position.Add(this.From.Subtract(this.Position).Multiply(scale));\r\n            this.To = this.Position.Add(this.To.Subtract(this.Position).Multiply(scale));\r\n        }\r\n\r\n        /**\r\n        * Returns a nearly identical copy of this Line2d.  If this Line2d belongs to a parent, the cloned Line2d will not. If this Line2d has children, all children will be cloned as well.  Lastly, the cloned Line2d will not have the same event bindings as this one does.\r\n        */\r\n        public Clone(): Line2d {\r\n            var graphic = new Line2d(this.From.X, this.From.Y, this.To.X, this.To.Y, this.LineWidth, this.Color.Clone());\r\n\r\n            graphic.LineCap = this.LineCap;\r\n\r\n            super._Clone(graphic);\r\n\r\n            return graphic;\r\n        }\r\n\r\n        public Dispose(): void {\r\n            super.Dispose();\r\n\r\n            this._strokeStyle.OnChange.Unbind(this._strokeChangeWire);\r\n        }\r\n\r\n        private UpdatePosition(): void {\r\n            this.Position = ((this._from.Add(this._to)).Divide(2));\r\n            this._difference = this._to.Subtract(this._from);\r\n            this._boundsWidth = this._from.Distance(this._to).Length();\r\n            this._cachedPosition = this.Position.Clone();\r\n        }\r\n\r\n        private RefreshCache(): void {\r\n            var difference = this.Position.Subtract(this._cachedPosition);\r\n            this._from.X += difference.X;\r\n            this._from.Y += difference.Y;\r\n            this._to.X += difference.X;\r\n            this._to.Y += difference.Y;\r\n            this._cachedPosition = this.Position.Clone();\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Defines an image resource that can be used within Sprite's, SpriteAnimation's and other drawable graphics.\r\n    */\r\n    export class ImageSource implements IDisposable, ICloneable {\r\n        /**\r\n        * Gets or sets the ClipLocation.  Represents where the image clip is within the base image.\r\n        */\r\n        // @ts-ignore\r\n        public ClipLocation: Vector2d;\r\n        /**\r\n        * Gets or sets the ClipSize.  Represents how large the image clip is within the base image.\r\n        */\r\n        public ClipSize: Size2d;\r\n        /**\r\n        * Gets the base image source.  Should not be modified once the ImageSource has been constructed\r\n        */\r\n        public Source: HTMLImageElement;\r\n\r\n        // @ts-ignore\r\n        private _size: Size2d;\r\n        private _loaded: boolean;\r\n        // @ts-ignore\r\n        private _imageLocation;\r\n        private _onLoaded: EventHandler1<ImageSource>;\r\n        private _loadWire: (e: Event) => void;\r\n\r\n        /**\r\n        * Creates a new instance of the ImageSource object with a pre-loaded image object.\r\n        * @param image Image object to use as the source.\r\n        */\r\n        constructor(image: HTMLImageElement);\r\n        /**\r\n        * Creates a new instance of the ImageSource object.\r\n        * @param imageLocation Image source url (this cannot change after construction). \r\n        */\r\n        constructor(imageLocation: string);\r\n        /**\r\n        * Creates a new instance of the ImageSource object with a specified width and height.  ClipSize defaults to the full size and the ClipLocation defaults to (0,0). If width and height are not equal to the actual width and height of the image source the image will be stretched\r\n        * @param imageLocation Image source url (this cannot change after construction).\r\n        * @param width The width of the base image (this cannot change after construction).\r\n        * @param height The height of the base image (this cannot change after construction).\r\n        */\r\n        constructor(imageLocation: string, width: number, height: number);\r\n        /**\r\n        * Creates a new instance of the ImageSource object with a specified width and height and a clip location.  If width and height are smaller than the actual width and height of the image source the image will be stretched\r\n        * @param image Image object to use as the source.\r\n        * @param clipX The horizontal location of the clip.\r\n        * @param clipY The vertical location of the clip.\r\n        * @param clipWidth The width of the clip.  Ultimately this width is the width that is drawn to the screen.\r\n        * @param clipHeight The height of the clip.  Ultimately this height is the height that is drawn to the screen.\r\n        */\r\n        constructor(image: HTMLImageElement, clipX: number, clipY: number, clipWidth: number, clipHeight: number);\r\n        /**\r\n        * Creates a new instance of the ImageSource object with a specified width and height and a clip location.  If width and height are smaller than the actual width and height of the image source the image will be stretched\r\n        * @param imageLocation Image source url (this cannot change after construction).\r\n        * @param width The width of the base image (this cannot change after construction).\r\n        * @param height The height of the base image (this cannot change after construction).\r\n        * @param clipX The horizontal location of the clip.\r\n        * @param clipY The vertical location of the clip.\r\n        * @param clipWidth The width of the clip.  Ultimately this width is the width that is drawn to the screen.\r\n        * @param clipHeight The height of the clip.  Ultimately this height is the height that is drawn to the screen.\r\n        */\r\n        constructor(imageLocation: string, width: number, height: number, clipX: number, clipY: number, clipWidth: number, clipHeight: number);\r\n        // @ts-ignore\r\n        constructor(image: any, width?: number, height?: number, clipX: number = 0, clipY: number = 0, clipWidth: number = width, clipHeight: number = height) {\r\n            var sizeDefined: boolean = typeof width !== \"undefined\", imageLocation: string;\r\n\r\n            this._onLoaded = new EventHandler1<ImageSource>();\r\n\r\n            if (typeof image === \"string\") {\r\n                imageLocation = image;\r\n                this._loaded = false;\r\n                this.Source = new Image();\r\n                this._loadWire = (e: Event) => {\r\n                    this._loaded = true;\r\n\r\n                    if (!sizeDefined) {\r\n                        this._size = new Size2d(this.Source.width, this.Source.height);\r\n                        this.ClipLocation = Vector2d.Zero;\r\n                        this.ClipSize = this._size.Clone();\r\n                    }\r\n\r\n                    this._onLoaded.Trigger(this);\r\n                };\r\n\r\n                this.Source.src = imageLocation;\r\n                this._imageLocation = imageLocation;\r\n\r\n                if (sizeDefined) {\r\n                    // @ts-ignore\r\n                    this._size = new Size2d(width, height);\r\n                    this.ClipLocation = new Vector2d(clipX, clipY);\r\n                    this.ClipSize = new Size2d(clipWidth, clipHeight);\r\n                }\r\n                else {\r\n                    // @ts-ignore\r\n                    this.ClipSize = null; // Waiting for the image source OnLoad to set it\r\n                }\r\n            } else {\r\n                clipWidth = clipX;\r\n                clipHeight = clipY;\r\n                // @ts-ignore\r\n                clipX = width;\r\n                // @ts-ignore\r\n                clipY = height;\r\n\r\n                this.Source = image;\r\n                this._imageLocation = image.src;\r\n\r\n                this._loaded = false;\r\n\r\n                if (this.Source.complete) {\r\n                    this._loadWire = (e: Event) => {\r\n                        this._loaded = true;\r\n                        this._onLoaded.Trigger(this);\r\n                    };\r\n\r\n                    this._size = new Size2d(image.width, image.height);\r\n                } else {\r\n                    this._loadWire = (e: Event) => {\r\n                        this._loaded = true;\r\n                        this._onLoaded.Trigger(this);\r\n                        this._size = new Size2d(image.width, image.height);\r\n                    };\r\n                }\r\n\r\n                this.ClipLocation = new Vector2d(clipX, clipY);\r\n                this.ClipSize = new Size2d(clipWidth, clipHeight);\r\n            }\r\n\r\n            if (!this.Source.complete) {\r\n                this.Source.addEventListener(\"load\", this._loadWire, false);\r\n            } else {\r\n                setTimeout(this._loadWire, 0);\r\n            }\r\n        }\r\n\r\n        /**\r\n        * Gets an event that is triggered when the base image is finished loading.  Functions can be bound or unbound to this event to be executed when the event triggers.\r\n        */\r\n        public get OnLoaded(): EventHandler1<ImageSource> {\r\n            return this._onLoaded;\r\n        }\r\n\r\n        /**\r\n        * Returns the base Size of the image source.\r\n        */\r\n        public get Size(): Size2d {\r\n            return this._size.Clone();\r\n        }\r\n\r\n        /**\r\n        * Determines if the ImageSource has been loaded.\r\n        */\r\n        public IsLoaded(): boolean {\r\n            return this._loaded;\r\n        }\r\n\r\n        /**\r\n        * Returns an ImageSource that is extracted from the current ImageSource based on the provided clip location and clip size.\r\n        * @param clipX The horizontal location of the clip.\r\n        * @param clipY The vertical location of the clip.\r\n        * @param clipWidth The width of the clip.\r\n        * @param clipHeight The height of the clip.\r\n        */\r\n        public Extract(clipX: number, clipY: number, clipWidth: number, clipHeight: number): ImageSource {\r\n            return new ImageSource(this._imageLocation, this._size.Width, this._size.Height, clipX, clipY, clipWidth, clipHeight);\r\n        }\r\n\r\n        /**\r\n        * Disposes the image source and unbinds all bound events.\r\n        */\r\n        public Dispose(): void {\r\n            this.Source.removeEventListener(\"load\", this._loadWire);\r\n            // @ts-ignore\r\n            this.Source = null;\r\n            this._onLoaded.Dispose();\r\n        }\r\n\r\n        /**\r\n        * Returns an identical copy of this image source.  Uses existing base image source.\r\n        */\r\n        public Clone(): ImageSource {\r\n            if (this.ClipSize) {\r\n                return new ImageSource(this.Source, this.ClipLocation.X, this.ClipLocation.Y, this.ClipSize.Width, this.ClipSize.Height);\r\n            } else {\r\n                return new ImageSource(this.Source);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n    * Defines a drawable sprite.  Sprites are used to draw images to the game screen.\r\n    */\r\n    export class Sprite2d extends Graphic2d {\r\n        public _type: string = \"Sprite2d\";\r\n\r\n        /**\r\n        * Gets or sets the Image that is drawn to the game screen.\r\n        */\r\n        public Image: ImageSource;\r\n        /**\r\n        * Gets or sets the size of the Sprite2d.  If the Size is not equal to the image's ClipSize the Sprite2d will appear stretched.\r\n        */\r\n        public Size: Size2d;\r\n\r\n        /**\r\n        * Creates a new instance of the Sprite2d object with an initial size matching the image's clip size.\r\n        * @param x Initial horizontal location of the Sprite2d.\r\n        * @param y Initial vertical location of the Sprite2d.\r\n        * @param image Initial ImageSource of the Sprite2d.\r\n        */\r\n        constructor(x: number, y: number, image: ImageSource);\r\n        /**\r\n        * Creates a new instance of the Sprite2d object.\r\n        * @param x Initial horizontal location of the Sprite2d.\r\n        * @param y Initial vertical location of the Sprite2d.\r\n        * @param image Initial ImageSource of the Sprite2d.\r\n        * @param width Initial width of the Sprite2d.  If the width does not equal the width of the image's clip width the Sprite2d will appear stretched.\r\n        * @param height Initial height of the Sprite2d.  If the height does not equal the height of the image's clip height the Sprite2d will appear stretched.\r\n        */\r\n        constructor(x: number, y: number, image: ImageSource, width: number, height: number);\r\n        constructor(x: number, y: number, image: ImageSource, width: number = image.ClipSize.Width, height: number = image.ClipSize.Height) {\r\n            super(new Vector2d(x, y));\r\n\r\n            this.Image = image;\r\n            this.Size = new Size2d(width, height);\r\n        }\r\n\r\n        /**\r\n        * Draws the sprite onto the given context.  If this sprite is part of a scene the Draw function will be called automatically.\r\n        * @param context The canvas context to draw the sprite onto.\r\n        */\r\n        public Draw(context: CanvasRenderingContext2D): void {\r\n            super._StartDraw(context);\r\n\r\n            context.drawImage(this.Image.Source, this.Image.ClipLocation.X, this.Image.ClipLocation.Y, this.Image.ClipSize.Width, this.Image.ClipSize.Height, - this.Size.HalfWidth, - this.Size.HalfHeight, this.Size.Width, this.Size.Height)\r\n\r\n            super._EndDraw(context);\r\n        }\r\n\r\n        /**\r\n        * The bounding area that represents where the Sprite2d will draw.\r\n        */\r\n        public GetDrawBounds(): Bounds.Bounds2d {\r\n            var bounds = new Bounds.BoundingRectangle(this.Position, this.Size);\r\n\r\n            bounds.Rotation = this.Rotation;\r\n\r\n            return bounds;\r\n        }\r\n\r\n        /**\r\n        * Scale's the Sprite2d graphic.\r\n        * @param scale The value to multiply the graphic's size by.\r\n        */\r\n        public Scale(scale: number): void {\r\n            this.Size.Width *= scale;\r\n            this.Size.Height *= scale;\r\n        }\r\n\r\n        /**\r\n        * Returns a nearly identical copy of this Sprite2d.  If this Sprite2d belongs to a parent, the cloned Sprite2d will not. If this Sprite2d has children, all children will be cloned as well.  Lastly, the cloned Sprite2d will not have the same event bindings as this one does.\r\n        */\r\n        public Clone(): Sprite2d {\r\n            var graphic = new Sprite2d(this.Position.X, this.Position.Y, this.Image.Clone(), this.Size.Width, this.Size.Height);\r\n\r\n            super._Clone(graphic);\r\n\r\n            return graphic;\r\n        }\r\n    }\r\n    /**\r\n    * Color class used to pass around colors in a typed manner.\r\n    */\r\n    export class Color implements ITyped, ICloneable, IDisposable {\r\n        public _type: string = \"Color\";\r\n\r\n        //Regex to match rgba in hex form ffffffff, 00000000, ff33dd4499\r\n        private static RgbaHexRegExp: RegExp = /^([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n\r\n        //Regex to match function color form for argb(d, n, n, n), rgb(n, n, n), and rgba(n, n, n, d) \r\n        private static RgbRegExp: RegExp = /^(argb|rgb|rgba)\\s*\\(\\s*([\\d+(\\.\\d+)]{0,3})\\s*,\\s*([\\d]{0,3})\\s*,\\s*([\\d]{0,3})\\s*(?:,\\s*([\\d+(\\.\\d+)]{0,3})\\s*)?\\s*\\)$/i;\r\n\r\n        //regex to match rgb in hex form ffffff, 000000, ff33dd\r\n        private static RgbaRegExp: RegExp = /^([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n\r\n        //Object to hold all HTML5 named colors\r\n        //ref: http://www.tutorialspoint.com/html5/html5_color_names.htm\r\n        private static _namedColors = {\r\n            \"transparent\": new Color(255, 255, 255, 0),\r\n            \"aliceblue\": new Color(\"#f0f8ff\"),\r\n            \"antiquewhite\": new Color(\"#faebd7\"),\r\n            \"aqua\": new Color(\"#00ffff\"),\r\n            \"aquamarine\": new Color(\"#7fffd4\"),\r\n            \"azure\": new Color(\"#f0ffff\"),\r\n            \"beige\": new Color(\"#f5f5dc\"),\r\n            \"bisque\": new Color(\"#ffe4c4\"),\r\n            \"black\": new Color(\"#000000\"),\r\n            \"blanchedalmond\": new Color(\"#ffebcd\"),\r\n            \"blue\": new Color(\"#0000ff\"),\r\n            \"blueviolet\": new Color(\"#8a2be2\"),\r\n            \"brown\": new Color(\"#a52a2a\"),\r\n            \"burlywood\": new Color(\"#deb887\"),\r\n            \"cadetblue\": new Color(\"#5f9ea0\"),\r\n            \"chartreuse\": new Color(\"#7fff00\"),\r\n            \"chocolate\": new Color(\"#d2691e\"),\r\n            \"coral\": new Color(\"#ff7f50\"),\r\n            \"cornflowerblue\": new Color(\"#6495ed\"),\r\n            \"cornsilk\": new Color(\"#fff8dc\"),\r\n            \"crimson\": new Color(\"#dc143c\"),\r\n            \"cyan\": new Color(\"#00ffff\"),\r\n            \"darkblue\": new Color(\"#00008b\"),\r\n            \"darkcyan\": new Color(\"#008b8b\"),\r\n            \"darkgoldenrod\": new Color(\"#b8860b\"),\r\n            \"darkgray\": new Color(\"#a9a9a9\"),\r\n            \"darkgreen\": new Color(\"#006400\"),\r\n            \"darkkhaki\": new Color(\"#bdb76b\"),\r\n            \"darkmagenta\": new Color(\"#8b008b\"),\r\n            \"darkolivegreen\": new Color(\"#556b2f\"),\r\n            \"darkorange\": new Color(\"#ff8c00\"),\r\n            \"darkorchid\": new Color(\"#9932cc\"),\r\n            \"darkred\": new Color(\"#8b0000\"),\r\n            \"darksalmon\": new Color(\"#e9967a\"),\r\n            \"darkseagreen\": new Color(\"#8fbc8f\"),\r\n            \"darkslateblue\": new Color(\"#483d8b\"),\r\n            \"darkslategray\": new Color(\"#2f4f4f\"),\r\n            \"darkturquoise\": new Color(\"#00ced1\"),\r\n            \"darkviolet\": new Color(\"#9400d3\"),\r\n            \"deeppink\": new Color(\"#ff1493\"),\r\n            \"deepskyblue\": new Color(\"#00bfff\"),\r\n            \"dimgray\": new Color(\"#696969\"),\r\n            \"dodgerblue\": new Color(\"#1e90ff\"),\r\n            \"firebrick\": new Color(\"#b22222\"),\r\n            \"floralwhite\": new Color(\"#fffaf0\"),\r\n            \"forestgreen\": new Color(\"#228b22\"),\r\n            \"fuchsia\": new Color(\"#ff00ff\"),\r\n            \"gainsboro\": new Color(\"#dcdcdc\"),\r\n            \"ghostwhite\": new Color(\"#f8f8ff\"),\r\n            \"gold\": new Color(\"#ffd700\"),\r\n            \"goldenrod\": new Color(\"#daa520\"),\r\n            \"gray\": new Color(\"#808080\"),\r\n            \"green\": new Color(\"#008000\"),\r\n            \"greenyellow\": new Color(\"#adff2f\"),\r\n            \"honeydew\": new Color(\"#f0fff0\"),\r\n            \"hotpink\": new Color(\"#ff69b4\"),\r\n            \"indianred\": new Color(\"#cd5c5c\"),\r\n            \"indigo\": new Color(\"#4b0082\"),\r\n            \"ivory\": new Color(\"#fffff0\"),\r\n            \"khaki\": new Color(\"#f0e68c\"),\r\n            \"lavender\": new Color(\"#e6e6fa\"),\r\n            \"lavenderblush\": new Color(\"#fff0f5\"),\r\n            \"lawngreen\": new Color(\"#7cfc00\"),\r\n            \"lemonchiffon\": new Color(\"#fffacd\"),\r\n            \"lightblue\": new Color(\"#add8e6\"),\r\n            \"lightcoral\": new Color(\"#f08080\"),\r\n            \"lightcyan\": new Color(\"#e0ffff\"),\r\n            \"lightgoldenrodyellow\": new Color(\"#fafad2\"),\r\n            \"lightgray\": new Color(\"#d3d3d3\"),\r\n            \"lightgrey\": new Color(\"#d3d3d3\"),\r\n            \"lightgreen\": new Color(\"#90ee90\"),\r\n            \"lightpink\": new Color(\"#ffb6c1\"),\r\n            \"lightsalmon\": new Color(\"#ffa07a\"),\r\n            \"lightseagreen\": new Color(\"#20b2aa\"),\r\n            \"lightskyblue\": new Color(\"#87cefa\"),\r\n            \"lightslategray\": new Color(\"#778899\"),\r\n            \"lightsteelblue\": new Color(\"#b0c4de\"),\r\n            \"lightyellow\": new Color(\"#ffffe0\"),\r\n            \"lime\": new Color(\"#00ff00\"),\r\n            \"limegreen\": new Color(\"#32cd32\"),\r\n            \"linen\": new Color(\"#faf0e6\"),\r\n            \"magenta\": new Color(\"#ff00ff\"),\r\n            \"maroon\": new Color(\"#800000\"),\r\n            \"mediumaquamarine\": new Color(\"#66cdaa\"),\r\n            \"mediumblue\": new Color(\"#0000cd\"),\r\n            \"mediumorchid\": new Color(\"#ba55d3\"),\r\n            \"mediumpurple\": new Color(\"#9370d8\"),\r\n            \"mediumseagreen\": new Color(\"#3cb371\"),\r\n            \"mediumslateblue\": new Color(\"#7b68ee\"),\r\n            \"mediumspringgreen\": new Color(\"#00fa9a\"),\r\n            \"mediumturquoise\": new Color(\"#48d1cc\"),\r\n            \"mediumvioletred\": new Color(\"#c71585\"),\r\n            \"midnightblue\": new Color(\"#191970\"),\r\n            \"mintcream\": new Color(\"#f5fffa\"),\r\n            \"mistyrose\": new Color(\"#ffe4e1\"),\r\n            \"moccasin\": new Color(\"#ffe4b5\"),\r\n            \"navajowhite\": new Color(\"#ffdead\"),\r\n            \"navy\": new Color(\"#000080\"),\r\n            \"oldlace\": new Color(\"#fdf5e6\"),\r\n            \"olive\": new Color(\"#808000\"),\r\n            \"olivedrab\": new Color(\"#6b8e23\"),\r\n            \"orange\": new Color(\"#ffa500\"),\r\n            \"orangered\": new Color(\"#ff4500\"),\r\n            \"orchid\": new Color(\"#da70d6\"),\r\n            \"palegoldenrod\": new Color(\"#eee8aa\"),\r\n            \"palegreen\": new Color(\"#98fb98\"),\r\n            \"paleturquoise\": new Color(\"#afeeee\"),\r\n            \"palevioletred\": new Color(\"#d87093\"),\r\n            \"papayawhip\": new Color(\"#ffefd5\"),\r\n            \"peachpuff\": new Color(\"#ffdab9\"),\r\n            \"peru\": new Color(\"#cd853f\"),\r\n            \"pink\": new Color(\"#ffc0cb\"),\r\n            \"plum\": new Color(\"#dda0dd\"),\r\n            \"powderblue\": new Color(\"#b0e0e6\"),\r\n            \"purple\": new Color(\"#800080\"),\r\n            \"red\": new Color(\"#ff0000\"),\r\n            \"rosybrown\": new Color(\"#bc8f8f\"),\r\n            \"royalblue\": new Color(\"#4169e1\"),\r\n            \"saddlebrown\": new Color(\"#8b4513\"),\r\n            \"salmon\": new Color(\"#fa8072\"),\r\n            \"sandybrown\": new Color(\"#f4a460\"),\r\n            \"seagreen\": new Color(\"#2e8b57\"),\r\n            \"seashell\": new Color(\"#fff5ee\"),\r\n            \"sienna\": new Color(\"#a0522d\"),\r\n            \"silver\": new Color(\"#c0c0c0\"),\r\n            \"skyblue\": new Color(\"#87ceeb\"),\r\n            \"slateblue\": new Color(\"#6a5acd\"),\r\n            \"slategray\": new Color(\"#708090\"),\r\n            \"snow\": new Color(\"#fffafa\"),\r\n            \"springgreen\": new Color(\"#00ff7f\"),\r\n            \"steelblue\": new Color(\"#4682b4\"),\r\n            \"tan\": new Color(\"#d2b48c\"),\r\n            \"teal\": new Color(\"#008080\"),\r\n            \"thistle\": new Color(\"#d8bfd8\"),\r\n            \"tomato\": new Color(\"#ff6347\"),\r\n            \"turquoise\": new Color(\"#40e0d0\"),\r\n            \"violet\": new Color(\"#ee82ee\"),\r\n            \"wheat\": new Color(\"#f5deb3\"),\r\n            \"white\": new Color(\"#ffffff\"),\r\n            \"whitesmoke\": new Color(\"#f5f5f5\"),\r\n            \"yellow\": new Color(\"#ffff00\"),\r\n            \"yellowgreen\": new Color(\"#9acd32\")\r\n        };\r\n\r\n        // @ts-ignore\r\n        private _cached: string = undefined;\r\n        // @ts-ignore\r\n        private _r: number;\r\n        // @ts-ignore\r\n        private _g: number;\r\n        // @ts-ignore\r\n        private _b: number;\r\n        // @ts-ignore\r\n        private _a: number;\r\n        private _onChange: EventHandler1<Color>;\r\n\r\n        /**\r\n        * Creates a new instance of Color with color channels set to black.\r\n        */\r\n        constructor();\r\n        /**\r\n        * Creates a new instance of Color with the specified string.\r\n        * @param color Hex, named or function style string declaration.\r\n        */\r\n        constructor(color: string);\r\n        /**\r\n        * Creates a new instance of Color with the specified rgb channels.\r\n        * @param r The red channel. Must be between 0 and 255 inclusive.\r\n        * @param g The green channel. Must be between 0 and 255 inclusive.\r\n        * @param b The blue channel. Must be between 0 and 255 inclusive.\r\n        */\r\n        constructor(r: number, g: number, b: number);\r\n        /**\r\n        * Creates a new instance of Color with the specified rgba channels.\r\n        * @param r The red channel. Must be between 0 and 255 inclusive.\r\n        * @param g The green channel. Must be between 0 and 255 inclusive.\r\n        * @param b The blue channel. Must be between 0 and 255 inclusive.\r\n        * @param a The alpha channel. Must be between 0 and 1 inclusive.\r\n        */\r\n        constructor(r: number, g: number, b: number, a: number);\r\n        constructor(r?: any, g?: any, b?: any, a?: any) {\r\n            this._onChange = new EventHandler1<Color>();\r\n\r\n            if (typeof (r) === 'string' && r.length > 0) {\r\n                this.InitializeColorFromString(r);\r\n            } else {\r\n                //check if the alpha channel is defined\r\n                this.A = a === undefined ? 1 : a;\r\n                this.R = r;\r\n                this.G = g;\r\n                this.B = b;\r\n            }\r\n        }\r\n\r\n        /**\r\n        * Gets an EventHandler that is triggered when the R, G, B, or A values of this Color change.\r\n        */\r\n        public get OnChange(): EventHandler1<Color> {\r\n            return this._onChange;\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the current red channel. Value must be an integer between 0 and 255 inclusive.\r\n        */\r\n        public get R(): number {\r\n            return this._r;\r\n        }\r\n        public set R(r: number) {\r\n            // @ts-ignore\r\n            this._cached = undefined;\r\n            this._r = Math.round(Math.min(Math.max(r, 0), 255));\r\n            this._onChange.Trigger(this);\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the current green channel. Value must be an integer between 0 and 255 inclusive.\r\n        */\r\n        public get G(): number {\r\n            return this._g;\r\n        }\r\n        public set G(g: number) {\r\n            // @ts-ignore\r\n            this._cached = undefined;\r\n            this._g = Math.round(Math.min(Math.max(g, 0), 255));\r\n            this._onChange.Trigger(this);\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the current blue channel. Value must be an integer between 0 and 255 inclusive.\r\n        */\r\n        public get B(): number {\r\n            return this._b;\r\n        }\r\n        public set B(b: number) {\r\n            // @ts-ignore\r\n            this._cached = undefined;\r\n            this._b = Math.round(Math.min(Math.max(b, 0), 255));\r\n            this._onChange.Trigger(this);\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the current alpha channel. Value must be between 0 and 1 inclusive.\r\n        */\r\n        public get A(): number {\r\n            return this._a;\r\n        }\r\n        public set A(a: number) {\r\n            // @ts-ignore\r\n            this._cached = undefined;\r\n            this._a = Math.min(Math.max(a, 0), 1);\r\n            this._onChange.Trigger(this);\r\n        }\r\n\r\n        /**\r\n        * Creates a new Color object with the specified RGB values.\r\n        * @param r The red channel. Must be between 0 and 255 inclusive.\r\n        * @param g The green channel. Must be between 0 and 255 inclusive.\r\n        * @param b The blue channel. Must be between 0 and 255 inclusive.\r\n        */\r\n        public static FromRGB(r: number, g: number, b: number): Color {\r\n            return new Color(r, g, b);\r\n        }\r\n\r\n        /**\r\n        * Creates a new Color object with the specified RGBA values.\r\n        * @param r The red channel. Must be between 0 and 255 inclusive.\r\n        * @param g The green channel. Must be between 0 and 255 inclusive.\r\n        * @param b The blue channel. Must be between 0 and 255 inclusive.\r\n        * @param a The alpha channel. Must be between 0 and 1 inclusive.\r\n        */\r\n        public static FromRGBA(r: number, g: number, b: number, a: number): Color {\r\n            return new Color(r, g, b, a);\r\n        }\r\n\r\n        /**\r\n        * Creates a new Color object with the specified ARGB values.\r\n        * @param a The alpha channel. Must be between 0 and 1 inclusive.\r\n        * @param r The red channel. Must be between 0 and 255 inclusive.\r\n        * @param g The green channel. Must be between 0 and 255 inclusive.\r\n        * @param b The blue channel. Must be between 0 and 255 inclusive.\r\n        */\r\n        public static FromARGB(a: number, r: number, g: number, b: number): Color {\r\n            return new Color(r, g, b, a);\r\n        }\r\n\r\n        /**\r\n        * Creates a new Color object from the specified hex assignment.\r\n        * @param hex The hex based color code.\r\n        */\r\n        public static FromHex(hex: string): Color {\r\n            return new Color(hex);\r\n        }\r\n\r\n        /**\r\n        * Creates a new Color object form the HTML5 named colors.\r\n        * @param name The name of the HTML5 color to use.\r\n        */\r\n        public static FromName(name: string): Color {\r\n            return new Color(name);\r\n        }\r\n\r\n        //Converts a short hex string e.g. fff or cccc to the long version \r\n        //e.g. ffffffff the alpha channel.\r\n        private static ConvertShortHexToLong(hex: string): string {\r\n            if (hex.length === 3) {\r\n                //append the alpha channel default which is fully opaque\r\n                hex = hex + 'f';\r\n            }\r\n\r\n            if (hex.length === 4) {\r\n                //short version that includes alpha channel\r\n                hex = hex.replace(Color.RgbaHexRegExp, function (m, a?, r?, g?, b?) {\r\n                    return r + r + g + g + b + b + a + a;\r\n                });\r\n            }\r\n\r\n            return hex;\r\n        }\r\n\r\n        //Initializes a color object based on the string passed.\r\n        //Possible values are hex and named values\r\n        //rgba/argb/rgb values are handled elsewhere\r\n        private InitializeColorFromString(color: string): void {\r\n            //rgb, hex, rgba, argb\r\n            var namedColor: any = this.NamedColorToHex(color);\r\n            // @ts-ignore\r\n            var result: Color = null;\r\n\r\n            if (typeof (namedColor) === 'string') {\r\n                result = this.CreateColorObjectFromString(namedColor);\r\n            } else {\r\n                result = namedColor;\r\n            }\r\n\r\n            this.A = result.A;\r\n            this.B = result.B;\r\n            this.R = result.R;\r\n            this.G = result.G;\r\n        }\r\n\r\n        //Creates a color object from the string provided\r\n        private CreateColorObjectFromString(hex: string): Color {\r\n            //we're not interested in the pound sign\r\n            if (hex.charAt(0) === '#') {\r\n                hex = hex.substr(1);\r\n            }\r\n\r\n            //convert short hexes to long hexes\r\n            hex = Color.ConvertShortHexToLong(hex);\r\n\r\n            //ensure we have an alpha channel\r\n            if (hex.length === 6) {\r\n                hex = hex + 'ff';\r\n            }\r\n\r\n            //if it's exactly 8 characters long then it's\r\n            //a hex and we build the Color object from this\r\n            if (hex.length === 8) {\r\n                return this.ParseAlphaHex(hex);\r\n            }\r\n\r\n            //it's no longer a hex and must be an rgb style function\r\n            return this.ParseRGB(hex);\r\n        }\r\n\r\n        //Parses a color function and returns a Color object\r\n        private ParseRGB(rgb: string): Color {\r\n            var result = Color.RgbRegExp.exec(rgb);\r\n            if (result) {\r\n                var name = result[1];\r\n\r\n                switch (name) {\r\n                    case 'rgb': //rgb(n, n, n)\r\n                        return new Color(parseInt(result[2]), parseInt(result[3]), parseInt(result[4]));\r\n                    case 'argb': //argb(d, n, n, n)\r\n                        return new Color(parseInt(result[3]), parseInt(result[4]), parseInt(result[5]), parseFloat(result[2]));\r\n                    case 'rgba': //rgba(n, n, n, d)\r\n                        return new Color(parseInt(result[2]), parseInt(result[3]), parseInt(result[4]), parseFloat(result[5]));\r\n                }\r\n            }\r\n\r\n            //since the hex, named colors and color functions were\r\n            //not available in the string passed then it's not a color\r\n            //return Magenta so it's obvious something is wrong\r\n            return Color.Magenta;\r\n        }\r\n\r\n        //Parses out all color channels including alpha\r\n        //and returns a Color object based on the values\r\n        private ParseAlphaHex(hex: string): Color {\r\n            var a: number,\r\n                r: number,\r\n                g: number,\r\n                b: number;\r\n\r\n            r = parseInt(hex.charAt(0) + hex.charAt(1), 16);\r\n            g = parseInt(hex.charAt(2) + hex.charAt(3), 16);\r\n            b = parseInt(hex.charAt(4) + hex.charAt(5), 16);\r\n            a = parseInt(hex.charAt(6) + hex.charAt(7), 16) / 255;\r\n\r\n            return new Color(r, g, b, a);\r\n        }\r\n\r\n        //Parses out all color channels and returns a Color object based on the values\r\n        private ParseHex(hex: string): Color {\r\n            var r: number,\r\n                g: number,\r\n                b: number;\r\n\r\n            r = parseInt(hex.charAt(0) + hex.charAt(1), 16);\r\n            g = parseInt(hex.charAt(2) + hex.charAt(3), 16);\r\n            b = parseInt(hex.charAt(4) + hex.charAt(5), 16);\r\n\r\n            return new Color(r, g, b);\r\n        }\r\n\r\n        //Checks the named color object and looks for a similarly named color\r\n        //if one is found returns the named Color object\r\n        private NamedColorToHex(color: string): string {\r\n            if (color.substring(0, 1) === '#') {\r\n                return color;\r\n            }\r\n            // @ts-ignore\r\n            if (typeof Color._namedColors[color.toLowerCase()] !== 'undefined') {\r\n                // @ts-ignore\r\n                return Color._namedColors[color.toLowerCase()];\r\n            }\r\n\r\n            return color;\r\n        }\r\n\r\n        /**\r\n        * Returns a transparent Color object.\r\n        */\r\n        public static get Transparent(): Color {\r\n            return Color._namedColors.transparent.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color AliceBlue.\r\n        */\r\n        public static get AliceBlue(): Color {\r\n            return Color._namedColors.aliceblue.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color AntiqueWhite.\r\n        */\r\n        public static get AntiqueWhite(): Color {\r\n            return Color._namedColors.antiquewhite.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Aqua.\r\n        */\r\n        public static get Aqua(): Color {\r\n            return Color._namedColors.aqua.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Aquamarine.\r\n        */\r\n        public static get Aquamarine(): Color {\r\n            return Color._namedColors.aquamarine.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Azure.\r\n        */\r\n        public static get Azure(): Color {\r\n            return Color._namedColors.azure.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Beige.\r\n        */\r\n        public static get Beige(): Color {\r\n            return Color._namedColors.beige.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Bisque.\r\n        */\r\n        public static get Bisque(): Color {\r\n            return Color._namedColors.bisque.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Black.\r\n        */\r\n        public static get Black(): Color {\r\n            return Color._namedColors.black.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color BlanchedAlmond.\r\n        */\r\n        public static get BlanchedAlmond(): Color {\r\n            return Color._namedColors.blanchedalmond.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Blue.\r\n        */\r\n        public static get Blue(): Color {\r\n            return Color._namedColors.blue.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color BlueViolet.\r\n        */\r\n        public static get BlueViolet(): Color {\r\n            return Color._namedColors.blueviolet.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Brown.\r\n        */\r\n        public static get Brown(): Color {\r\n            return Color._namedColors.brown.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color BurlyWood.\r\n        */\r\n        public static get BurlyWood(): Color {\r\n            return Color._namedColors.burlywood.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color CadetBlue.\r\n        */\r\n        public static get CadetBlue(): Color {\r\n            return Color._namedColors.cadetblue.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Chartreuse.\r\n        */\r\n        public static get Chartreuse(): Color {\r\n            return Color._namedColors.chartreuse.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Chocolate.\r\n        */\r\n        public static get Chocolate(): Color {\r\n            return Color._namedColors.chocolate.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Coral.\r\n        */\r\n        public static get Coral(): Color {\r\n            return Color._namedColors.coral.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color CornflowerBlue.\r\n        */\r\n        public static get CornflowerBlue(): Color {\r\n            return Color._namedColors.cornflowerblue.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Cornsilk.\r\n        */\r\n        public static get Cornsilk(): Color {\r\n            return Color._namedColors.cornsilk.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Crimson.\r\n        */\r\n        public static get Crimson(): Color {\r\n            return Color._namedColors.crimson.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Cyan.\r\n        */\r\n        public static get Cyan(): Color {\r\n            return Color._namedColors.cyan.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color DarkBlue.\r\n        */\r\n        public static get DarkBlue(): Color {\r\n            return Color._namedColors.darkblue.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color DarkCyan.\r\n        */\r\n        public static get DarkCyan(): Color {\r\n            return Color._namedColors.darkcyan.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color DarkGoldenRod.\r\n        */\r\n        public static get DarkGoldenRod(): Color {\r\n            return Color._namedColors.darkgoldenrod.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color DarkGray.\r\n        */\r\n        public static get DarkGray(): Color {\r\n            return Color._namedColors.darkgray.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color DarkGreen.\r\n        */\r\n        public static get DarkGreen(): Color {\r\n            return Color._namedColors.darkgreen.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color DarkKhaki.\r\n        */\r\n        public static get DarkKhaki(): Color {\r\n            return Color._namedColors.darkkhaki.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color DarkMagenta.\r\n        */\r\n        public static get DarkMagenta(): Color {\r\n            return Color._namedColors.darkmagenta.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color DarkOliveGreen.\r\n        */\r\n        public static get DarkOliveGreen(): Color {\r\n            return Color._namedColors.darkolivegreen.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color DarkOrange.\r\n        */\r\n        public static get DarkOrange(): Color {\r\n            return Color._namedColors.darkorange.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color DarkOrchid.\r\n        */\r\n        public static get DarkOrchid(): Color {\r\n            return Color._namedColors.darkorchid.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color DarkRed.\r\n        */\r\n        public static get DarkRed(): Color {\r\n            return Color._namedColors.darkred.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color DarkSalmon.\r\n        */\r\n        public static get DarkSalmon(): Color {\r\n            return Color._namedColors.darksalmon.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color DarkSeaGreen.\r\n        */\r\n        public static get DarkSeaGreen(): Color {\r\n            return Color._namedColors.darkseagreen.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color DarkSlateBlue.\r\n        */\r\n        public static get DarkSlateBlue(): Color {\r\n            return Color._namedColors.darkslateblue.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color DarkSlateGray.\r\n        */\r\n        public static get DarkSlateGray(): Color {\r\n            return Color._namedColors.darkslategray.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color DarkTurquoise.\r\n        */\r\n        public static get DarkTurquoise(): Color {\r\n            return Color._namedColors.darkturquoise.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color DarkViolet.\r\n        */\r\n        public static get DarkViolet(): Color {\r\n            return Color._namedColors.darkviolet.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color DeepPink.\r\n        */\r\n        public static get DeepPink(): Color {\r\n            return Color._namedColors.deeppink.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color DeepSkyBlue.\r\n        */\r\n        public static get DeepSkyBlue(): Color {\r\n            return Color._namedColors.deepskyblue.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color DimGray.\r\n        */\r\n        public static get DimGray(): Color {\r\n            return Color._namedColors.dimgray.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color DodgerBlue.\r\n        */\r\n        public static get DodgerBlue(): Color {\r\n            return Color._namedColors.dodgerblue.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color FireBrick.\r\n        */\r\n        public static get FireBrick(): Color {\r\n            return Color._namedColors.firebrick.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color FloralWhite.\r\n        */\r\n        public static get FloralWhite(): Color {\r\n            return Color._namedColors.floralwhite.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color ForestGreen.\r\n        */\r\n        public static get ForestGreen(): Color {\r\n            return Color._namedColors.forestgreen.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Fuchsia.\r\n        */\r\n        public static get Fuchsia(): Color {\r\n            return Color._namedColors.fuchsia.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Gainsboro.\r\n        */\r\n        public static get Gainsboro(): Color {\r\n            return Color._namedColors.gainsboro.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color GhostWhite.\r\n        */\r\n        public static get GhostWhite(): Color {\r\n            return Color._namedColors.ghostwhite.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Gold.\r\n        */\r\n        public static get Gold(): Color {\r\n            return Color._namedColors.gold.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color GoldenRod.\r\n        */\r\n        public static get GoldenRod(): Color {\r\n            return Color._namedColors.goldenrod.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Gray.\r\n        */\r\n        public static get Gray(): Color {\r\n            return Color._namedColors.gray.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Green.\r\n        */\r\n        public static get Green(): Color {\r\n            return Color._namedColors.green.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color GreenYellow.\r\n        */\r\n        public static get GreenYellow(): Color {\r\n            return Color._namedColors.greenyellow.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color HoneyDew.\r\n        */\r\n        public static get HoneyDew(): Color {\r\n            return Color._namedColors.honeydew.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color HotPink.\r\n        */\r\n        public static get HotPink(): Color {\r\n            return Color._namedColors.hotpink.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color IndianRed.\r\n        */\r\n        public static get IndianRed(): Color {\r\n            return Color._namedColors.indianred.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Indigo.\r\n        */\r\n        public static get Indigo(): Color {\r\n            return Color._namedColors.indigo.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Ivory.\r\n        */\r\n        public static get Ivory(): Color {\r\n            return Color._namedColors.ivory.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Khaki.\r\n        */\r\n        public static get Khaki(): Color {\r\n            return Color._namedColors.khaki.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Lavender.\r\n        */\r\n        public static get Lavender(): Color {\r\n            return Color._namedColors.lavender.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color LavenderBlush.\r\n        */\r\n        public static get LavenderBlush(): Color {\r\n            return Color._namedColors.lavenderblush.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color LawnGreen.\r\n        */\r\n        public static get LawnGreen(): Color {\r\n            return Color._namedColors.lawngreen.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color LemonChiffon.\r\n        */\r\n        public static get LemonChiffon(): Color {\r\n            return Color._namedColors.lemonchiffon.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color LightBlue.\r\n        */\r\n        public static get LightBlue(): Color {\r\n            return Color._namedColors.lightblue.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color LightCoral.\r\n        */\r\n        public static get LightCoral(): Color {\r\n            return Color._namedColors.lightcoral.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color LightCyan.\r\n        */\r\n        public static get LightCyan(): Color {\r\n            return Color._namedColors.lightcyan.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color LightGoldenRodYellow.\r\n        */\r\n        public static get LightGoldenRodYellow(): Color {\r\n            return Color._namedColors.lightgoldenrodyellow.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color LightGray.\r\n        */\r\n        public static get LightGray(): Color {\r\n            return Color._namedColors.lightgray.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color LightGrey.\r\n        */\r\n        public static get LightGrey(): Color {\r\n            return Color._namedColors.lightgrey.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color LightGreen.\r\n        */\r\n        public static get LightGreen(): Color {\r\n            return Color._namedColors.lightgreen.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color LightPink.\r\n        */\r\n        public static get LightPink(): Color {\r\n            return Color._namedColors.lightpink.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color LightSalmon.\r\n        */\r\n        public static get LightSalmon(): Color {\r\n            return Color._namedColors.lightsalmon.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color LightSeaGreen.\r\n        */\r\n        public static get LightSeaGreen(): Color {\r\n            return Color._namedColors.lightseagreen.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color LightSkyBlue.\r\n        */\r\n        public static get LightSkyBlue(): Color {\r\n            return Color._namedColors.lightskyblue.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color LightSlateGray.\r\n        */\r\n        public static get LightSlateGray(): Color {\r\n            return Color._namedColors.lightslategray.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color LightSteelBlue.\r\n        */\r\n        public static get LightSteelBlue(): Color {\r\n            return Color._namedColors.lightsteelblue.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color LightYellow.\r\n        */\r\n        public static get LightYellow(): Color {\r\n            return Color._namedColors.lightyellow.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Lime.\r\n        */\r\n        public static get Lime(): Color {\r\n            return Color._namedColors.lime.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color LimeGreen.\r\n        */\r\n        public static get LimeGreen(): Color {\r\n            return Color._namedColors.limegreen.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Linen.\r\n        */\r\n        public static get Linen(): Color {\r\n            return Color._namedColors.linen.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Magenta.\r\n        */\r\n        public static get Magenta(): Color {\r\n            return Color._namedColors.magenta.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Maroon.\r\n        */\r\n        public static get Maroon(): Color {\r\n            return Color._namedColors.maroon.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color MediumAquaMarine.\r\n        */\r\n        public static get MediumAquaMarine(): Color {\r\n            return Color._namedColors.mediumaquamarine.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color MediumBlue.\r\n        */\r\n        public static get MediumBlue(): Color {\r\n            return Color._namedColors.mediumblue.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color MediumOrchid.\r\n        */\r\n        public static get MediumOrchid(): Color {\r\n            return Color._namedColors.mediumorchid.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color MediumPurple.\r\n        */\r\n        public static get MediumPurple(): Color {\r\n            return Color._namedColors.mediumpurple.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color MediumSeaGreen.\r\n        */\r\n        public static get MediumSeaGreen(): Color {\r\n            return Color._namedColors.mediumseagreen.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color MediumSlateBlue.\r\n        */\r\n        public static get MediumSlateBlue(): Color {\r\n            return Color._namedColors.mediumslateblue.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color MediumSpringGreen.\r\n        */\r\n        public static get MediumSpringGreen(): Color {\r\n            return Color._namedColors.mediumspringgreen.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color MediumTurquoise.\r\n        */\r\n        public static get MediumTurquoise(): Color {\r\n            return Color._namedColors.mediumturquoise.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color MediumVioletRed.\r\n        */\r\n        public static get MediumVioletRed(): Color {\r\n            return Color._namedColors.mediumvioletred.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color MidnightBlue.\r\n        */\r\n        public static get MidnightBlue(): Color {\r\n            return Color._namedColors.midnightblue.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color MintCream.\r\n        */\r\n        public static get MintCream(): Color {\r\n            return Color._namedColors.mintcream.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color MistyRose.\r\n        */\r\n        public static get MistyRose(): Color {\r\n            return Color._namedColors.mistyrose.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Moccasin.\r\n        */\r\n        public static get Moccasin(): Color {\r\n            return Color._namedColors.moccasin.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color NavajoWhite.\r\n        */\r\n        public static get NavajoWhite(): Color {\r\n            return Color._namedColors.navajowhite.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Navy.\r\n        */\r\n        public static get Navy(): Color {\r\n            return Color._namedColors.navy.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color OldLace.\r\n        */\r\n        public static get OldLace(): Color {\r\n            return Color._namedColors.oldlace.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Olive.\r\n        */\r\n        public static get Olive(): Color {\r\n            return Color._namedColors.olive.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color OliveDrab.\r\n        */\r\n        public static get OliveDrab(): Color {\r\n            return Color._namedColors.olivedrab.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Orange.\r\n        */\r\n        public static get Orange(): Color {\r\n            return Color._namedColors.orange.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color OrangeRed.\r\n        */\r\n        public static get OrangeRed(): Color {\r\n            return Color._namedColors.orangered.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Orchid.\r\n        */\r\n        public static get Orchid(): Color {\r\n            return Color._namedColors.orchid.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color PaleGoldenRod.\r\n        */\r\n        public static get PaleGoldenRod(): Color {\r\n            return Color._namedColors.palegoldenrod.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color PaleGreen.\r\n        */\r\n        public static get PaleGreen(): Color {\r\n            return Color._namedColors.palegreen.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color PaleTurquoise.\r\n        */\r\n        public static get PaleTurquoise(): Color {\r\n            return Color._namedColors.paleturquoise.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color PaleVioletRed.\r\n        */\r\n        public static get PaleVioletRed(): Color {\r\n            return Color._namedColors.palevioletred.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color PapayaWhip.\r\n        */\r\n        public static get PapayaWhip(): Color {\r\n            return Color._namedColors.papayawhip.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color PeachPuff.\r\n        */\r\n        public static get PeachPuff(): Color {\r\n            return Color._namedColors.peachpuff.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Peru.\r\n        */\r\n        public static get Peru(): Color {\r\n            return Color._namedColors.peru.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Pink.\r\n        */\r\n        public static get Pink(): Color {\r\n            return Color._namedColors.pink.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Plum.\r\n        */\r\n        public static get Plum(): Color {\r\n            return Color._namedColors.plum.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color PowderBlue.\r\n        */\r\n        public static get PowderBlue(): Color {\r\n            return Color._namedColors.powderblue.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Purple.\r\n        */\r\n        public static get Purple(): Color {\r\n            return Color._namedColors.purple.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Red.\r\n        */\r\n        public static get Red(): Color {\r\n            return Color._namedColors.red.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color RosyBrown.\r\n        */\r\n        public static get RosyBrown(): Color {\r\n            return Color._namedColors.rosybrown.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color RoyalBlue.\r\n        */\r\n        public static get RoyalBlue(): Color {\r\n            return Color._namedColors.royalblue.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color SaddleBrown.\r\n        */\r\n        public static get SaddleBrown(): Color {\r\n            return Color._namedColors.saddlebrown.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Salmon.\r\n        */\r\n        public static get Salmon(): Color {\r\n            return Color._namedColors.salmon.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color SandyBrown.\r\n        */\r\n        public static get SandyBrown(): Color {\r\n            return Color._namedColors.sandybrown.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color SeaGreen.\r\n        */\r\n        public static get SeaGreen(): Color {\r\n            return Color._namedColors.seagreen.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color SeaShell.\r\n        */\r\n        public static get SeaShell(): Color {\r\n            return Color._namedColors.seashell.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Sienna.\r\n        */\r\n        public static get Sienna(): Color {\r\n            return Color._namedColors.sienna.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Silver.\r\n        */\r\n        public static get Silver(): Color {\r\n            return Color._namedColors.silver.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color SkyBlue.\r\n        */\r\n        public static get SkyBlue(): Color {\r\n            return Color._namedColors.skyblue.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color SlateBlue.\r\n        */\r\n        public static get SlateBlue(): Color {\r\n            return Color._namedColors.slateblue.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color SlateGray.\r\n        */\r\n        public static get SlateGray(): Color {\r\n            return Color._namedColors.slategray.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Snow.\r\n        */\r\n        public static get Snow(): Color {\r\n            return Color._namedColors.snow.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color SpringGreen.\r\n        */\r\n        public static get SpringGreen(): Color {\r\n            return Color._namedColors.springgreen.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color SteelBlue.\r\n        */\r\n        public static get SteelBlue(): Color {\r\n            return Color._namedColors.steelblue.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Tan.\r\n        */\r\n        public static get Tan(): Color {\r\n            return Color._namedColors.tan.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Teal.\r\n        */\r\n        public static get Teal(): Color {\r\n            return Color._namedColors.teal.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Thistle.\r\n        */\r\n        public static get Thistle(): Color {\r\n            return Color._namedColors.thistle.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Tomato.\r\n        */\r\n        public static get Tomato(): Color {\r\n            return Color._namedColors.tomato.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Turquoise.\r\n        */\r\n        public static get Turquoise(): Color {\r\n            return Color._namedColors.turquoise.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Violet.\r\n        */\r\n        public static get Violet(): Color {\r\n            return Color._namedColors.violet.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Wheat.\r\n        */\r\n        public static get Wheat(): Color {\r\n            return Color._namedColors.wheat.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color White.\r\n        */\r\n        public static get White(): Color {\r\n            return Color._namedColors.white.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color WhiteSmoke.\r\n        */\r\n        public static get WhiteSmoke(): Color {\r\n            return Color._namedColors.whitesmoke.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color Yellow.\r\n        */\r\n        public static get Yellow(): Color {\r\n            return Color._namedColors.yellow.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a Color object set to the color named color YellowGreen.\r\n        */\r\n        public static get YellowGreen(): Color {\r\n            return Color._namedColors.yellowgreen.Clone();\r\n        }\r\n\r\n        /**\r\n        * Returns a copy of the color with the current color channels.\r\n        */\r\n        public Clone(): any {\r\n            return new Color(this.R, this.G, this.B, this.A);\r\n        }\r\n\r\n        /**\r\n        * Disposes the Color object and unbinds any active event bindings.\r\n        */\r\n        public Dispose(): void {\r\n            this._onChange.Dispose();\r\n        }\r\n\r\n        /**\r\n        * toString override that returns the Color in the \"rgba(r,g,b,a)\" format.\r\n        */\r\n        public toString(): string {\r\n            if (this._cached === undefined) {\r\n                this._cached = 'rgba(' + this.R + ',' + this.G + ',' + this.B + ',' + this.A + ')';\r\n            }\r\n            return this._cached;\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Defines an abstract class TileMap that takes an array of resources to be mapped to tiles.\r\n    */\r\n    export class TileMap extends Graphics.Graphic2d {\r\n        public _Resources: Graphics.ImageSource[];\r\n\r\n        /**\r\n        * Creates a new instance of the TileMap object.\r\n        * @param x Initial horizontal location of the tile map.\r\n        * @param y Initial vertical location of the tile map.\r\n        * @param resources A one dimensional array of image resources that make up the tile map (this cannot change after construction).\r\n        */\r\n        constructor(x: number, y: number, resources: Graphics.ImageSource[]) {\r\n            super(new Vector2d(x, y));\r\n\r\n            this._Resources = resources;\r\n        }\r\n\r\n        /**\r\n        * Scale is not implemented.\r\n        */\r\n        public Scale(scale: number): void {\r\n            throw new Error(\"Scale is not implemented for TileMaps.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n* Defines a structure that is proficient at creating diverse tile maps based off of a resource image.  Best drawn via a SceneryHandler.\r\n*/\r\n    export class SquareTileMap extends TileMap {\r\n        /**\r\n        * Gets or sets the tile load delay component.  This can be used to slowly load a square tile map to prevent the browser from freezing by adding a delay between tile loads to allow time for the DOM to update.  Defaults to TimeSpan.Zero.\r\n        */\r\n        public TileLoadDelay: TimeSpan;\r\n        /**\r\n        * Gets or sets the row load delay component.  This can be used to slowly load a square tile map to prevent the browser from freezing by adding a delay between row loads to allow time for the DOM to update.  Defaults to TimeSpan.Zero.\r\n        */\r\n        public RowLoadDelay: TimeSpan;\r\n\r\n        private _grid: Graphics.Grid;\r\n        // @ts-ignore\r\n        private _staticMap: boolean;\r\n        // @ts-ignore\r\n        private _mapCache: HTMLCanvasElement;\r\n        // @ts-ignore\r\n        private _mapCacheContext: CanvasRenderingContext2D;\r\n        private _mappings: number[][];\r\n        private _onTileLoad: EventHandler2<ITileDetails, number>;\r\n        private _onLoaded: EventHandler;\r\n        private _loaded: boolean;\r\n        private _tilesBuilt: number;\r\n        private _totalTiles: number;\r\n\r\n        /**\r\n        * Creates a new instance of the SquareTileMap object.\r\n        * @param x Initial horizontal location of the tile map.\r\n        * @param y Initial vertical location of the tile map.\r\n        * @param tileWidth The width of the tile map tiles (this cannot change after construction).\r\n        * @param tileHeight The height of the tile map tiles (this cannot change after construction).\r\n        * @param resources A one dimensional array of image resources that make up the tile map (this cannot change after construction).\r\n        * @param mappings A two dimensional array numbers that map directly to the resources array to define the square tile map (this cannot change after construction).\r\n        */\r\n        constructor(x: number, y: number, tileWidth: number, tileHeight: number, resources: Graphics.ImageSource[], mappings: number[][]);\r\n        /**\r\n        * Creates a new instance of the SquareTileMap object.\r\n        * @param x Initial horizontal location of the tile map.\r\n        * @param y Initial vertical location of the tile map.\r\n        * @param tileWidth The width of the tile map tiles (this cannot change after construction).\r\n        * @param tileHeight The height of the tile map tiles (this cannot change after construction).\r\n        * @param resources A one dimensional array of image resources that make up the tile map (this cannot change after construction).\r\n        * @param mappings A two dimensional array numbers that map directly to the resources array to define the square tile map (this cannot change after construction).\r\n        * @param staticMap Whether or not image tiles will change throughout the SquareTileMap's lifetime, defaults to true and cannot change after construction.\r\n        */\r\n        constructor(x: number, y: number, tileWidth: number, tileHeight: number, resources: Graphics.ImageSource[], mappings: number[][], staticMap: boolean);\r\n        /**\r\n        * Creates a new instance of the SquareTileMap object.\r\n        * @param x Initial horizontal location of the tile map.\r\n        * @param y Initial vertical location of the tile map.\r\n        * @param tileWidth The width of the tile map tiles (this cannot change after construction).\r\n        * @param tileHeight The height of the tile map tiles (this cannot change after construction).\r\n        * @param resources A one dimensional array of image resources that make up the tile map (this cannot change after construction).\r\n        * @param mappings A two dimensional array numbers that map directly to the resources array to define the square tile map (this cannot change after construction).\r\n        * @param staticMap Whether or not image tiles will change throughout the SquareTileMap's lifetime, defaults to true and cannot change after construction.\r\n        * @param drawGridLines Whether or not to draw the tile maps grid lines. Useful when trying to pinpoint specific tiles (this cannot change after construction).\r\n        */\r\n        constructor(x: number, y: number, tileWidth: number, tileHeight: number, resources: Graphics.ImageSource[], mappings: number[][], staticMap: boolean, drawGridLines: boolean);\r\n        constructor(x: number, y: number, tileWidth: number, tileHeight: number, resources: Graphics.ImageSource[], mappings: number[][], staticMap: boolean = true, drawGridLines: boolean = false) {\r\n            super(x, y, resources);\r\n\r\n            this._mappings = mappings;\r\n            this._grid = new Graphics.Grid(0, 0, mappings.length, mappings[0].length, tileWidth, tileHeight, drawGridLines);\r\n            this._staticMap = staticMap;\r\n            this._onTileLoad = new EventHandler2<ITileDetails, number>();\r\n            this._onLoaded = new EventHandler();\r\n            this._loaded = false;\r\n            this._tilesBuilt = 0;\r\n            this._totalTiles = this._grid.Rows * this._grid.Columns;\r\n            this.TileLoadDelay = TimeSpan.Zero;\r\n            this.RowLoadDelay = TimeSpan.Zero;\r\n\r\n            if (this._staticMap) {\r\n                this.BuildCache();\r\n            }\r\n\r\n            // Execute this on the next stack, to allow time for binding to the tile maps load events\r\n            setTimeout(() => {\r\n                this.FillGridWith(mappings, () => {\r\n                    this._loaded = true;\r\n                    this._onLoaded.Trigger();\r\n                });\r\n            }, 0);\r\n        }\r\n\r\n        /**\r\n        * Gets an event that is triggered when a tile has been loaded, first argument is the tile details for the loaded tile, second is the percent complete.  Once this SquareTileMap has been created and all tiles loaded this event will no longer be triggered. Functions can be bound or unbound to this event to be executed when the event triggers.\r\n        */\r\n        public get OnTileLoad(): EventHandler2<ITileDetails, number> {\r\n            return this._onTileLoad;\r\n        }\r\n\r\n        /**\r\n        * Gets an event that is triggered when the square tile map has been loaded.  Once this SquareTileMap has been created and all tiles loaded this event will no longer be triggered. Functions can be bound or unbound to this event to be executed when the event triggers.\r\n        */\r\n        public get OnLoaded(): EventHandler {\r\n            return this._onLoaded;\r\n        }\r\n\r\n        /**\r\n        * Helper function used to take a SpriteSheet image and create a one dimensional resource tile array.\r\n        * @param imageSource The sprite sheet to extract the tile resources from.\r\n        * @param tileWidth The width of the sprite sheet tiles.\r\n        * @param tileHeight The height of the sprite sheet tiles.\r\n        */\r\n        public static ExtractTiles(imageSource: Graphics.ImageSource, tileWidth: number, tileHeight: number): Graphics.ImageSource[] {\r\n            var resources: Graphics.ImageSource[] = [],\r\n                framesPerRow: number = Math.floor(imageSource.ClipSize.Width / tileWidth),\r\n                rows: number = Math.floor(imageSource.ClipSize.Height / tileHeight);\r\n\r\n            for (var i = 0; i < rows; i++) {\r\n                for (var j = 0; j < framesPerRow; j++) {\r\n                    resources.push(imageSource.Extract(j * tileWidth, i * tileHeight, tileWidth, tileHeight));\r\n                }\r\n            }\r\n\r\n            return resources;\r\n        }\r\n\r\n        /**\r\n        * Determines if the current SquareTileMap is loaded.\r\n        */\r\n        public IsLoaded(): boolean {\r\n            return this._loaded;\r\n        }\r\n\r\n        /**\r\n        * Draws the SquareTileMap onto the given context.  If the SquareTileMap is part of a Scene2d or SceneryHandler the Draw function will be called automatically.\r\n        * @param context The canvas context to draw the SquareTileMap onto.\r\n        */\r\n        public Draw(context: CanvasRenderingContext2D): void {\r\n            super._StartDraw(context);\r\n\r\n            if (!this._staticMap) {\r\n                this._grid.Draw(context);\r\n            }\r\n            else {\r\n                context.drawImage(this._mapCache, -this._mapCache.width / 2, -this._mapCache.height / 2);\r\n            }\r\n\r\n            super._EndDraw(context);\r\n        }\r\n\r\n        /**\r\n        * The bounding area that represents where the SquareTileMap will draw.\r\n        */\r\n        public GetDrawBounds(): Bounds.Bounds2d {\r\n            var bounds = this._grid.GetDrawBounds();\r\n\r\n            bounds.Position = this.Position;\r\n\r\n            return bounds;\r\n        }\r\n\r\n        /**\r\n        * Removes all children and unbinds all events associated with the SquareTileMap.\r\n        */\r\n        public Dispose(): void {\r\n            this._grid.Dispose();\r\n\r\n            this._onLoaded.Dispose();\r\n            this._onTileLoad.Dispose();\r\n            super.Dispose();\r\n        }\r\n\r\n        /**\r\n        * Returns a nearly identical copy of this SquareTileMap.  If this SquareTileMap belongs to a parent, the cloned SquareTileMap will not. If this SquareTileMap has children, all children will be cloned as well.  Lastly, the cloned SquareTileMap will not have the same event bindings as this one does.\r\n        */\r\n        public Clone(): SquareTileMap {\r\n            var graphic = new SquareTileMap(this.Position.X, this.Position.Y, this._grid.TileSize.Width, this._grid.TileSize.Height, this._Resources, this._mappings);\r\n\r\n            graphic.Opacity = this.Opacity;\r\n            graphic.Rotation = this.Rotation;\r\n            graphic.Visible = this.Visible;\r\n            graphic.ZIndex = this.ZIndex;\r\n            graphic.RowLoadDelay = this.RowLoadDelay.Clone();\r\n            graphic.TileLoadDelay = this.TileLoadDelay.Clone();\r\n\r\n            return graphic;\r\n        }\r\n\r\n        private BuildCache(): void {\r\n            var size: Size2d = this._grid.Size,\r\n                originalPosition = this._grid.Position;\r\n\r\n            // @ts-ignore\r\n            this._mapCache = <HTMLCanvasElement>document.createElement(\"canvas\");\r\n            this._mapCache.width = size.Width;\r\n            this._mapCache.height = size.Height;\r\n            // @ts-ignore\r\n            this._mapCacheContext = this._mapCache.getContext(\"2d\");\r\n            this._mapCacheContext.translate(size.HalfWidth, size.HalfHeight);\r\n        }\r\n\r\n        private CacheTile(tile: SquareTile): void {\r\n            // Draw the tile onto the map cache\r\n            tile.Draw(this._mapCacheContext);\r\n        }\r\n\r\n        private FillGridWith(mappings: number[][], onComplete: () => any): void {\r\n            asyncLoop((next: () => void, rowsComplete: number) => {\r\n                this.AsyncBuildGridRow(rowsComplete, mappings, () => {\r\n                    next();\r\n                });\r\n            }, mappings.length, () => {\r\n                onComplete();\r\n            });\r\n        }\r\n\r\n        private AsyncBuildGridTile(row: number, column: number, resourceIndex: number, onComplete: (tile: SquareTile) => any): void {\r\n            var action = () => {\r\n                var tile: SquareTile,\r\n                    tileGraphic: Graphics.ImageSource = this._Resources[resourceIndex];\r\n\r\n                tile = new SquareTile(tileGraphic, this._grid.TileSize.Width, this._grid.TileSize.Height);\r\n\r\n                this._grid.Fill(row, column, tile);\r\n\r\n                this.OnTileLoad.Trigger({\r\n                    Tile: tile,\r\n                    Row: row,\r\n                    Column: column,\r\n                    ResourceIndex: resourceIndex,\r\n                    Parent: this\r\n                }, this._tilesBuilt / this._totalTiles);\r\n\r\n                if (this._staticMap) {\r\n                    this.CacheTile(tile);\r\n                }\r\n\r\n                onComplete(tile);\r\n            };\r\n\r\n            if (this.TileLoadDelay.Milliseconds > 0) {\r\n                setTimeout(action, this.TileLoadDelay.Milliseconds);\r\n            }\r\n            else {\r\n                action();\r\n            }\r\n        }\r\n\r\n        // Only pretend async in order to free up the DOM\r\n        private AsyncBuildGridRow(rowIndex: number, mappings: number[][], onComplete: () => any): void {\r\n            setTimeout(() => {\r\n                asyncLoop((next: () => void, tilesLoaded: number) => {\r\n                    this._tilesBuilt++;\r\n\r\n                    if (mappings[rowIndex][tilesLoaded] >= 0) {\r\n                        this.AsyncBuildGridTile(rowIndex, tilesLoaded, mappings[rowIndex][tilesLoaded], (tile: SquareTile) => {\r\n                            next();\r\n                        });\r\n                    }\r\n                    else {\r\n                        next();\r\n                    }\r\n                }, mappings[rowIndex].length, () => {\r\n                    onComplete();\r\n                });\r\n            }, this.RowLoadDelay.Milliseconds);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Defines a SquareTile that is used by the SquareTileMap.  Represents one tile within the tile map.\r\n    */\r\n    export class SquareTile extends Sprite2d {\r\n        /**\r\n        * Creates a new instance of the SquareTile object.\r\n        * @param image The image that is within the tile.\r\n        * @param width The width of the tile.\r\n        * @param height The height of the tile.\r\n        */\r\n        constructor(image: Graphics.ImageSource, width: number, height: number) {\r\n            super(0, 0, image, width, height); // Set position to 0 because the tile gets updated when it gets added to the tile map\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Defines an object that is used to fully describe a loaded tile.\r\n    */\r\n    export interface ITileDetails {\r\n        /**\r\n        * The Tile that will be on the map.\r\n        */\r\n        Tile: Graphics.Sprite2d;\r\n\r\n        /**\r\n        * The resource index that was used to build the tile.\r\n        */\r\n        ResourceIndex: number;\r\n\r\n        /**\r\n        * The row that the tile occupies.\r\n        */\r\n        Row: number;\r\n\r\n        /**\r\n        * The column that the tile occupies.\r\n        */\r\n        Column: number;\r\n\r\n        /**\r\n        * The TileMap that contains the Tile.  This can be used to determine the absolute position of the Tile by adding the Parent and Tile's position.\r\n        */\r\n        Parent: TileMap;\r\n    }\r\n\r\n    /**\r\n    * Defines an animation that can be drawn to the screen.\r\n    */\r\n    export class SpriteAnimation implements IDisposable {\r\n        private _imageSource: ImageSource;\r\n        // @ts-ignore\r\n        private _fps: number;\r\n        private _frameSize: Size2d;\r\n        private _frameCount: number;\r\n        private _startOffset: Vector2d;\r\n        private _playing: boolean;\r\n        private _repeating: boolean;\r\n        private _currentFrame: number;\r\n        private _framesPerRow: number;\r\n        // The last frame time (in ms)\r\n        private _lastStepAt: number;\r\n        // Step to the next frame ever X ms\r\n        // @ts-ignore\r\n        private _stepEvery: number;\r\n        private _onComplete: EventHandler;\r\n\r\n        /**\r\n        * Creates a new instance of the SpriteAnimation object.\r\n        * @param imageSource The Sprite sheet that contains the image frames used to display the animation.\r\n        * @param fps How fast to play the animation (frames per second).  This value should not be less than the games update interval.\r\n        * @param frameSize How large each animation frame is within the imageSource sprite sheet.\r\n        * @param frameCount How many frames to play for the animation.\r\n        */\r\n        constructor(imageSource: ImageSource, fps: number, frameSize: Size2d, frameCount: number);\r\n        /**\r\n        * Creates a new instance of the SpriteAnimation object.\r\n        * @param imageSource The Sprite sheet that contains the image frames used to display the animation.\r\n        * @param fps How fast to play the animation (frames per second).  This value should not be less than the games update interval.\r\n        * @param frameSize How large each animation frame is within the imageSource sprite sheet.\r\n        * @param frameCount How many frames to play for the animation.\r\n        * @param startOffset The positional offset within the imageSource on where the set of animation frames begin.\r\n        */\r\n        constructor(imageSource: ImageSource, fps: number, frameSize: Size2d, frameCount: number, startOffset: Vector2d);\r\n        constructor(imageSource: ImageSource, fps: number, frameSize: Size2d, frameCount: number, startOffset: Vector2d = Vector2d.Zero) {\r\n            this._imageSource = imageSource;\r\n            this._frameSize = frameSize;\r\n            this._frameCount = frameCount;\r\n            this._startOffset = startOffset;\r\n            this._playing = false;\r\n            this._repeating = false;\r\n            this._currentFrame = 0;\r\n            this._lastStepAt = 0;\r\n\r\n            this._onComplete = new EventHandler();\r\n\r\n            this.Fps = fps;\r\n\r\n            if (imageSource.ClipSize !== null || imageSource.IsLoaded()) {\r\n                this._framesPerRow = Math.min(Math.floor((imageSource.Size.Width - startOffset.X) / frameSize.Width), frameCount);\r\n                this.UpdateImageSource();\r\n            }\r\n            else {\r\n                imageSource.OnLoaded.BindFor((image: Graphics.ImageSource) => {\r\n                    this._framesPerRow = Math.min(Math.floor((imageSource.Size.Width - startOffset.X) / frameSize.Width), frameCount);\r\n                    this.UpdateImageSource();\r\n                }, 1);\r\n\r\n                this._framesPerRow = 1;\r\n            }\r\n        }\r\n\r\n        /**\r\n        * Gets an event that is triggered when the animation has completed, will not trigger if the animation is repeating.  Functions can be bound or unbound to this event to be executed when the event triggers.\r\n        */\r\n        public get OnComplete(): EventHandler {\r\n            return this._onComplete;\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the current frames per second.\r\n        */\r\n        public get Fps(): number {\r\n            return this._fps;\r\n        }\r\n        public set Fps(newFps: number) {\r\n            this._fps = newFps;\r\n            this._stepEvery = 1000 / this._fps;\r\n        }\r\n\r\n        /**\r\n        * Determines if the animation is currently playing.\r\n        */\r\n        public IsPlaying(): boolean {\r\n            return this._playing;\r\n        }\r\n\r\n        /**\r\n        * Determines if the animation can play.  This is essentially checking if the underlying image source is loaded.\r\n        */\r\n        public CanPlay(): boolean {\r\n            return this._imageSource.IsLoaded();\r\n        }\r\n\r\n        /**\r\n        * Plays the animation.\r\n        */\r\n        public Play(): void;\r\n        /**\r\n        * Plays the animation.\r\n        * @param repeat Whether to play the animation on repeat.\r\n        */\r\n        public Play(repeat: boolean): void;\r\n        public Play(repeat: boolean = false): void {\r\n            if (!this._imageSource.ClipSize) {\r\n                throw new Error(\"Image source not loaded yet.\");\r\n            }\r\n\r\n            this._lastStepAt = new Date().getTime();\r\n            this._repeating = repeat;\r\n            this._playing = true;\r\n            this.UpdateImageSource();\r\n        }\r\n\r\n        /**\r\n        * Pauses the animation.\r\n        */\r\n        public Pause(): void {\r\n            this._playing = false;\r\n        }\r\n\r\n        /**\r\n        * Steps the animation 1 frame forward.  If not repeating and the animation surpasses the maximum frame count, the animation will stop and the OnComplete event will trigger.\r\n        */\r\n        public Step(): void;\r\n        /**\r\n        * Steps the animation 1 frame forward.  If not repeating and the animation surpasses the maximum frame count, the animation will stop and the OnComplete event will trigger.\r\n        * @param count How many frames to move forward\r\n        */\r\n        public Step(count: number): void;\r\n        public Step(count: number = 1): void {\r\n            this._currentFrame += count;\r\n\r\n            if (this._currentFrame >= this._frameCount) {\r\n                if (this._repeating) {\r\n                    this._currentFrame %= this._frameCount;\r\n                }\r\n                else {\r\n                    this._currentFrame = this._frameCount - 1;\r\n                    this.OnComplete.Trigger();\r\n                    this.Stop(false);\r\n                }\r\n            }\r\n\r\n            if (count !== 0) {\r\n                this.UpdateImageSource();\r\n            }\r\n        }\r\n\r\n        /**\r\n        * Stops the animation and resets the current animation frame to 0.\r\n        */\r\n        public Stop(): void;\r\n        /**\r\n        * Stops the animation.\r\n        * @param resetFrame Whether to reset the current animation frame to 0.\r\n        */\r\n        public Stop(resetFrame: boolean): void;\r\n        public Stop(resetFrame: boolean = true): void {\r\n            this._playing = false;\r\n            if (resetFrame) {\r\n                this.Reset();\r\n            }\r\n        }\r\n\r\n        /**\r\n        * Resets the current animation frame to 0.\r\n        */\r\n        public Reset(): void {\r\n            this._currentFrame = 0;\r\n            this.UpdateImageSource();\r\n        }\r\n\r\n        /**\r\n        * Updates the animations current frame.  Needs to be updated in order to play the animation.\r\n        * @param gameTime The current game time object.\r\n        */\r\n        public Update(gameTime: GameTime): void {\r\n            var timeSinceStep = gameTime.Now.getTime() - this._lastStepAt,\r\n                stepCount = 0;\r\n\r\n            if (this._playing) {\r\n                stepCount = Math.floor(timeSinceStep / this._stepEvery);\r\n                if (stepCount > 0) {\r\n                    this._lastStepAt = gameTime.Now.getTime();\r\n                    this.Step(stepCount);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n        * Unbinds all events.  Does not dispose the underlying image source.\r\n        */\r\n        public Dispose(): void {\r\n            this._onComplete.Dispose();\r\n        }\r\n\r\n        private UpdateImageSource(): void {\r\n            var row = this.GetFrameRow(),\r\n                column = this.GetFrameColumn();\r\n\r\n            this._imageSource.ClipLocation.X = this._startOffset.X + column * this._frameSize.Width;\r\n            this._imageSource.ClipLocation.Y = this._startOffset.Y + row * this._frameSize.Height;\r\n            this._imageSource.ClipSize = this._frameSize;\r\n        }\r\n\r\n        private GetFrameRow(): number {\r\n            return Math.floor(this._currentFrame / this._framesPerRow);\r\n        }\r\n\r\n        private GetFrameColumn(): number {\r\n            return Math.ceil(this._currentFrame % this._framesPerRow);\r\n        }\r\n    }\r\n\r\n    /**\r\n* Abstract drawable shape type that is used create customizable drawable graphics.\r\n*/\r\n    export class Shape extends Graphic2d {\r\n        public _type: string = \"Shape\";\r\n        private _fillStyle: Color;\r\n        private _strokeStyle: Color;\r\n        private _shadowColor: Color;\r\n        private _fillChangeWire: (color: Color) => void;\r\n        private _strokeChangeWire: (color: Color) => void;\r\n        private _shadowChangeWire: (color: Color) => void;\r\n\r\n        /**\r\n        * Should only ever be called by derived classes.\r\n        * @param position Initial Position of the current shape object.\r\n        */\r\n        constructor(position: Vector2d);\r\n        /**\r\n        * Should only ever be called by derived classes.\r\n        * @param position Initial Position of the current shape object.\r\n        * @param color Initial Color of the current shape object.\r\n        */\r\n        constructor(position: Vector2d, color: Color);\r\n        /**\r\n        * Should only ever be called by derived classes.\r\n        * @param position Initial Position of the current shape object.\r\n        * @param color Initial string Color of the current shape object.\r\n        */\r\n        constructor(position: Vector2d, color: string);\r\n        constructor(position: Vector2d, color?: any) {\r\n            super(position);\r\n\r\n            this._fillChangeWire = (color: Color) => {\r\n                this._State.FillStyle = color.toString();\r\n            };\r\n\r\n            this._strokeChangeWire = (color: Color) => {\r\n                this._State.StrokeStyle = color.toString();\r\n            };\r\n\r\n            this._shadowChangeWire = (color: Color) => {\r\n                this._State.ShadowColor = color.toString();\r\n            };\r\n\r\n            this.ShadowColor = this._shadowColor = Color.Black;\r\n            this.BorderColor = this._strokeStyle = Color.Black;\r\n\r\n            if (typeof color !== \"undefined\") {\r\n                if (typeof color === \"string\") {\r\n                    color = new Color(color);\r\n                }\r\n\r\n                this.Color = this._fillStyle = color;\r\n            }\r\n            else {\r\n                this.Color = this._fillStyle = Color.Black;\r\n            }\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the current shape color.  Valid colors are strings like \"red\" or \"rgb(255,0,0)\".\r\n        */\r\n        public get Color(): Color {\r\n            return this._fillStyle;\r\n        }\r\n        public set Color(color) {\r\n            if (typeof color === \"string\") {\r\n                color = new Color(<any>color);\r\n            }\r\n\r\n            // Unbind old\r\n            this._fillStyle.OnChange.Unbind(this._fillChangeWire);\r\n            this._fillStyle = color;\r\n            // Bind new\r\n            this._fillStyle.OnChange.Bind(this._fillChangeWire);\r\n            // Update state\r\n            this._fillChangeWire(color);\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the current border thickness.\r\n        */\r\n        public get BorderThickness(): number {\r\n            return this._State.LineWidth;\r\n        }\r\n        public set BorderThickness(thickness: number) {\r\n            this._State.LineWidth = thickness;\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the current border color.  Valid colors are strings like \"red\" or \"rgb(255,0,0)\".\r\n        */\r\n        public get BorderColor(): Color {\r\n            return this._strokeStyle;\r\n        }\r\n        public set BorderColor(color) {\r\n            if (typeof color === \"string\") {\r\n                color = new Color(<any>color);\r\n            }\r\n\r\n            // Unbind old\r\n            this._strokeStyle.OnChange.Unbind(this._strokeChangeWire);\r\n            this._strokeStyle = color;\r\n            // Bind new\r\n            this._strokeStyle.OnChange.Bind(this._strokeChangeWire);\r\n            // Update state\r\n            this._strokeChangeWire(color);\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the current shadow color.  Valid colors are strings like \"red\" or \"rgb(255,0,0)\".\r\n        */\r\n        public get ShadowColor(): Color {\r\n            return this._shadowColor;\r\n        }\r\n        public set ShadowColor(color) {\r\n            if (typeof color === \"string\") {\r\n                color = new Color(<any>color);\r\n            }\r\n\r\n            // Unbind old\r\n            this._shadowColor.OnChange.Unbind(this._shadowChangeWire);\r\n            this._shadowColor = color;\r\n            // Bind new\r\n            this._shadowColor.OnChange.Bind(this._shadowChangeWire);\r\n            // Update state\r\n            this._shadowChangeWire(color);\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the current horizontal shadow position.\r\n        */\r\n        public get ShadowX(): number {\r\n            return this._State.ShadowOffsetX;\r\n        }\r\n        public set ShadowX(x: number) {\r\n            this._State.ShadowOffsetX = x;\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the current vertical shadow position.\r\n        */\r\n        public get ShadowY(): number {\r\n            return this._State.ShadowOffsetY;\r\n        }\r\n        public set ShadowY(y: number) {\r\n            this._State.ShadowOffsetY = y;\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the current shadow blur.\r\n        */\r\n        public get ShadowBlur(): number {\r\n            return this._State.ShadowBlur;\r\n        }\r\n        public set ShadowBlur(blur: number) {\r\n            this._State.ShadowBlur = blur;\r\n        }\r\n\r\n        /**\r\n        * Sets the current borders thickness and color.\r\n        * @param thickness The new border thickness in pixels.\r\n        * @param color The new border color.  Can be valid color strings, like \"red\" or \"rgb(255,0,0)\".\r\n        */\r\n        public Border(thickness: number, color: string): void\r\n        /**\r\n        * Sets the current borders thickness and color.\r\n        * @param thickness The new border thickness in pixels.\r\n        * @param color The new border color.\r\n        */\r\n        public Border(thickness: number, color: Color): void;\r\n        public Border(thickness: number, color: any): void {\r\n            this.BorderThickness = thickness;\r\n            this.BorderColor = color;\r\n        }\r\n\r\n        /**\r\n        * Sets the current shadow x and y positions.\r\n        * @param x The shadows new horizontal position.\r\n        * @param y The shadows new vertical position.\r\n        */\r\n        public Shadow(x: number, y: number): void;\r\n        /**\r\n        * Sets the current shadow x and y positions and shadows color.\r\n        * @param x The shadows new horizontal position.\r\n        * @param y The shadows new vertical position.\r\n        * @param color The new shadow color.  Can be valid color strings, like \"red\" or \"rgb(255,0,0)\".\r\n        */\r\n        public Shadow(x: number, y: number, color: string): void;\r\n        /**\r\n        * Sets the current shadow x and y positions and shadows color.\r\n        * @param x The shadows new horizontal position.\r\n        * @param y The shadows new vertical position.\r\n        * @param color The new shadow color.\r\n        */\r\n        public Shadow(x: number, y: number, color: Color): void;\r\n        /**\r\n        * Sets the current shadow x and y positions and shadows color.\r\n        * @param x The shadows new horizontal position.\r\n        * @param y The shadows new vertical position.\r\n        * @param color The new shadow color.  Can be valid color strings, like \"red\" or \"rgb(255,0,0)\".\r\n        * @param blur The new shadow blur.\r\n        */\r\n        public Shadow(x: number, y: number, color: string, blur: number): void;\r\n        /**\r\n        * Sets the current shadow x and y positions and shadows color.\r\n        * @param x The shadows new horizontal position.\r\n        * @param y The shadows new vertical position.\r\n        * @param color The new shadow color.\r\n        * @param blur The new shadow blur.\r\n        */\r\n        public Shadow(x: number, y: number, color: Color, blur: number): void;\r\n        public Shadow(x: number, y: number, color?: any, blur?: number): void {\r\n            this.ShadowX = x;\r\n            this.ShadowY = y;\r\n            this.ShadowColor = color;\r\n            // @ts-ignore\r\n            this.ShadowBlur = blur;\r\n        }\r\n\r\n        public _StartDraw(context: CanvasRenderingContext2D): void {\r\n            super._StartDraw(context);\r\n            context.beginPath();\r\n        }\r\n\r\n        public _EndDraw(context: CanvasRenderingContext2D): void {\r\n            context.fill();\r\n\r\n            if (this._State.LineWidth > 0) {\r\n                context.stroke();\r\n            }\r\n            else {\r\n                context.closePath();\r\n            }\r\n\r\n            super._EndDraw(context);\r\n        }\r\n\r\n        // This should be overridden if you want to build a proper shape\r\n        public _BuildPath(context: CanvasRenderingContext2D): void {\r\n        }\r\n\r\n        /**\r\n        * Draws the shape onto the given context.  If this shape is part of a scene the Draw function will be called automatically.\r\n        * @param context The canvas context to draw the shape onto.\r\n        */\r\n        public Draw(context: CanvasRenderingContext2D): void { // You can override this Draw if you want to implement your own logic for applying styles and drawing (do not recommend overriding)\r\n            this._StartDraw(context);\r\n            this._BuildPath(context);\r\n            this._EndDraw(context);\r\n        }\r\n\r\n        public Dispose(): void {\r\n            super.Dispose();\r\n\r\n            this._fillStyle.OnChange.Unbind(this._fillChangeWire);\r\n            this._strokeStyle.OnChange.Unbind(this._strokeChangeWire);\r\n            this._shadowColor.OnChange.Unbind(this._shadowChangeWire);\r\n        }\r\n\r\n        public _Clone(graphic: Shape): void {\r\n            graphic.Border(this.BorderThickness, this.BorderColor.Clone());\r\n            graphic.Shadow(this.ShadowX, this.ShadowY, this.ShadowColor.Clone(), this.ShadowBlur);\r\n\r\n            super._Clone(graphic);\r\n        }\r\n    }\r\n\r\n    /**\r\n* Defines a drawable rectangle.\r\n*/\r\n    export class Rectangle extends Shape {\r\n        public _type: string = \"Rectangle\";\r\n\r\n        /**\r\n        * Gets or sets the Size of the Rectangle.\r\n        */\r\n        public Size: Size2d;\r\n\r\n        /**\r\n        * Creates a new instance of the Rectangle object.\r\n        * @param x Initial horizontal location of the Rectangle.\r\n        * @param y Initial vertical location of the Rectangle.\r\n        * @param width Initial width of the Rectangle.\r\n        * @param height Initial height of the Rectangle.\r\n        */\r\n        constructor(x: number, y: number, width: number, height: number);\r\n        /**\r\n        * Creates a new instance of the Rectangle object with a specified color.\r\n        * @param x Initial horizontal location of the Rectangle.\r\n        * @param y Initial vertical location of the Rectangle.\r\n        * @param width Initial width of the Rectangle.\r\n        * @param height Initial height of the Rectangle.\r\n        * @param color Initial color of the Rectangle.\r\n        */\r\n        constructor(x: number, y: number, width: number, height: number, color: Color);\r\n        /**\r\n        * Creates a new instance of the Rectangle object with a specified color.\r\n        * @param x Initial horizontal location of the Rectangle.\r\n        * @param y Initial vertical location of the Rectangle.\r\n        * @param width Initial width of the Rectangle.\r\n        * @param height Initial height of the Rectangle.\r\n        * @param color Initial string color of the Rectangle.\r\n        */\r\n        constructor(x: number, y: number, width: number, height: number, color: string);\r\n        constructor(x: number, y: number, width: number, height: number, color?: any) {\r\n            super(new Vector2d(x, y), color);\r\n\r\n            this.Size = new Size2d(width, height);\r\n        }\r\n\r\n        /**\r\n        * The bounding area that represents where the Rectangle will draw.\r\n        */\r\n        public GetDrawBounds(): Bounds.Bounds2d {\r\n            var bounds = new Bounds.BoundingRectangle(this.Position, this.Size);\r\n\r\n            bounds.Rotation = this.Rotation;\r\n\r\n            return bounds;\r\n        }\r\n\r\n        /**\r\n        * Scale's the rectangle graphic.\r\n        * @param scale The value to multiply the graphic's size by.\r\n        */\r\n        public Scale(scale: number): void {\r\n            this.Size.Width *= scale;\r\n            this.Size.Height *= scale;\r\n        }\r\n\r\n        /**\r\n        * Returns a nearly identical copy of this Rectangle.  If this Rectangle belongs to a parent, the cloned Rectangle will not. If this Rectangle has children, all children will be cloned as well.  Lastly, the cloned Rectangle will not have the same event bindings as this one does.\r\n        */\r\n        public Clone(): Rectangle {\r\n            var graphic = new Rectangle(this.Position.X, this.Position.Y, this.Size.Width, this.Size.Height, this.Color.Clone());\r\n\r\n            super._Clone(graphic);\r\n\r\n            return graphic;\r\n        }\r\n\r\n        public _BuildPath(context: CanvasRenderingContext2D): void {\r\n            context.rect(-this.Size.HalfWidth, -this.Size.HalfHeight, this.Size.Width, this.Size.Height);\r\n        }\r\n    }\r\n\r\n    /**\r\n* Defines a drawable circle.\r\n*/\r\n    export class Circle extends Shape {\r\n        public _type: string = \"Circle\";\r\n\r\n        /**\r\n        * Gets or sets the Radius of the Circle.\r\n        */\r\n        public Radius: number;\r\n\r\n        /**\r\n        * Creates a new instance of the Circle object.\r\n        * @param x Initial horizontal location of the Circle.\r\n        * @param y Initial vertical location of the Circle.\r\n        * @param radius Initial Radius of the Circle.\r\n        */\r\n        constructor(x: number, y: number, radius: number);\r\n        /**\r\n        * Creates a new instance of the Circle object with a specified color.\r\n        * @param x Initial horizontal location of the Circle.\r\n        * @param y Initial vertical location of the Circle.\r\n        * @param radius Initial Radius of the Circle.\r\n        * @param color Initial color of the Circle.\r\n        */\r\n        constructor(x: number, y: number, radius: number, color: Color);\r\n        /**\r\n        * Creates a new instance of the Circle object with a specified color.\r\n        * @param x Initial horizontal location of the Circle.\r\n        * @param y Initial vertical location of the Circle.\r\n        * @param radius Initial Radius of the Circle.\r\n        * @param color Initial color string of the Circle.\r\n        */\r\n        constructor(x: number, y: number, radius: number, color: string);\r\n        constructor(x: number, y: number, radius: number, color?: any) {\r\n            super(new Vector2d(x, y), color);\r\n\r\n            this.Radius = radius;\r\n        }\r\n\r\n        /**\r\n        * The bounding area that represents where the Circle will draw.\r\n        */\r\n        public GetDrawBounds(): Bounds.Bounds2d {\r\n            var bounds = new Bounds.BoundingCircle(this.Position, this.Radius);\r\n\r\n            bounds.Rotation = this.Rotation;\r\n\r\n            return bounds;\r\n        }\r\n\r\n        /**\r\n        * Scale's the circle graphic.\r\n        * @param scale The value to multiply the graphic's size by.\r\n        */\r\n        public Scale(scale: number): void {\r\n            this.Radius *= scale;\r\n        }\r\n\r\n        /**\r\n        * Returns a nearly identical copy of this Circle.  If this Circle belongs to a parent, the cloned Circle will not. If this Circle has children, all children will be cloned as well.  Lastly, the cloned Circle will not have the same event bindings as this one does.\r\n        */\r\n        public Clone(): Circle {\r\n            var graphic = new Circle(this.Position.X, this.Position.Y, this.Radius, this.Color.Clone());\r\n\r\n            super._Clone(graphic);\r\n\r\n            return graphic;\r\n        }\r\n\r\n        public _BuildPath(context: CanvasRenderingContext2D): void {\r\n            context.arc(0, 0, this.Radius, 0, (<any>Math).twoPI);\r\n        }\r\n    }\r\n\r\n    /**\r\n* Defines a drawable text element.\r\n*/\r\n    export class Text2d extends Shape {\r\n        public _type: string = \"Text2d\";\r\n\r\n        private _fontSettings: FontSettings;\r\n        private _text: string;\r\n        private _recalculateBoundsSize: boolean;\r\n\r\n        // For GetDrawBounds\r\n        private _drawBounds: Bounds.BoundingRectangle;\r\n\r\n        /**\r\n        * Creates a new instance of the Text2d object.\r\n        * @param x Initial horizontal location of the Text2d.\r\n        * @param y Initial vertical location of the Text2d.\r\n        * @param text Initial text of the Text2d.\r\n        */\r\n        constructor(x: number, y: number, text: string);\r\n        /**\r\n        * Creates a new instance of the Text2d object with a specified color.\r\n        * @param x Initial horizontal location of the Text2d.\r\n        * @param y Initial vertical location of the Text2d.\r\n        * @param text Initial text of the Text2d.\r\n        * @param color Initial color of the Text2d. Default is Black.\r\n        */\r\n        constructor(x: number, y: number, text: string, color: Color);\r\n        /**\r\n        * Creates a new instance of the Text2d object with a specified color.\r\n        * @param x Initial horizontal location of the Text2d.\r\n        * @param y Initial vertical location of the Text2d.\r\n        * @param text Initial text of the Text2d.\r\n        * @param color Initial string color of the Text2d. Default is Black.\r\n        */\r\n        constructor(x: number, y: number, text: string, color: string);\r\n        constructor(x: number, y: number, text: string, color: any = Color.Black) {\r\n            super(new Vector2d(x, y), color);\r\n\r\n            this._text = text;\r\n\r\n            this._drawBounds = new Bounds.BoundingRectangle(this.Position, Size2d.One);\r\n            this._recalculateBoundsSize = true;\r\n\r\n            this._fontSettings = new FontSettings();\r\n            this.Align = \"center\";\r\n            this.Baseline = \"middle\";\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the text alignment of the Text2d.  Values can be \"start\", \"end\", \"left\", \"center\", or \"right\".\r\n        */\r\n        public get Align(): string {\r\n            return this._State.TextAlign;\r\n        }\r\n        public set Align(alignment: string) {\r\n            this._State.TextAlign = alignment;\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the text baseline of the Text2d.  Values can be \"top\", \"hanging\", \"middle\", \"alphabetic\", \"ideographic\", and \"bottom\".\r\n        */\r\n        public get Baseline(): string {\r\n            return this._State.TextBaseline;\r\n        }\r\n        public set Baseline(baseline: string) {\r\n            this._State.TextBaseline = baseline;\r\n        }\r\n\r\n        /**\r\n        * Gets the Text2d's FontSetting's.\r\n        */\r\n        public get FontSettings(): FontSettings {\r\n            this._recalculateBoundsSize = true;\r\n\r\n            return this._fontSettings;\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the current Text2d's text.\r\n        */\r\n        public get Text(): string {\r\n            return this._text;\r\n        }\r\n        public set Text(text: string) {\r\n            this._recalculateBoundsSize = true;\r\n            this._text = text;\r\n        }\r\n\r\n        public _StartDraw(context: CanvasRenderingContext2D): void {\r\n            context.save();\r\n            this._State.SetContextState(context);\r\n\r\n            context.translate(this.Position.X, this.Position.Y);\r\n\r\n            if (this.Rotation !== 0) {\r\n                context.rotate(this.Rotation);\r\n            }\r\n        }\r\n\r\n        public _EndDraw(context: CanvasRenderingContext2D): void {\r\n            var children = this.GetChildren();\r\n\r\n            for (var i = 0; i < children.length; i++) {\r\n                if (children[i].Visible) {\r\n                    children[i].Draw(context);\r\n                }\r\n            }\r\n\r\n            context.restore();\r\n        }\r\n\r\n        /**\r\n        * Draws the text onto the given context.  If this Text2d is part of a scene the Draw function will be called automatically.\r\n        * @param context The canvas context to draw the text onto.\r\n        */\r\n        public Draw(context: CanvasRenderingContext2D): void {\r\n            var textSize;\r\n\r\n            this._State.Font = this._fontSettings._BuildFont();\r\n\r\n            this._StartDraw(context);\r\n\r\n            context.fillText(this._text, 0, 0);\r\n            if (this._State.LineWidth > 0) {\r\n                context.strokeText(this._text, 0, 0);\r\n            }\r\n\r\n            // Only recalculate bounds if the text or font has changed since the last draw.\r\n            if (this._recalculateBoundsSize) {\r\n                this._recalculateBoundsSize = false;\r\n                textSize = context.measureText(this._text);\r\n                this._drawBounds.Size.Width = textSize.width;\r\n                this._drawBounds.Size.Height = parseInt(this._fontSettings.FontSize) * 1.5;\r\n            }\r\n\r\n            this._EndDraw(context);\r\n        }\r\n\r\n        /**\r\n        * The bounding area that represents where the Text2d will draw.\r\n        */\r\n        public GetDrawBounds(): Bounds.Bounds2d {\r\n            this._drawBounds.Rotation = this.Rotation;\r\n            this._drawBounds.Position = this.Position;\r\n\r\n            return this._drawBounds;\r\n        }\r\n\r\n        /**\r\n        * Scale's the fonts FontSize.\r\n        * @param scale The value to multiply the graphic's size by.\r\n        */\r\n        public Scale(scale: number): void {\r\n            var size = parseInt(this.FontSettings.FontSize);\r\n\r\n            this.FontSettings.FontSize = this.FontSettings.FontSize.replace(size.toString(), (size * scale).toString());\r\n        }\r\n\r\n        /**\r\n        * Returns a nearly identical copy of this Text2d.  If this Text2d belongs to a parent, the cloned Text2d will not. If this Text2d has children, all children will be cloned as well.  Lastly, the cloned Text2d will not have the same event bindings as this one does.\r\n        */\r\n        public Clone(): Text2d {\r\n            var graphic = new Text2d(this.Position.X, this.Position.Y, this.Text, this.Color.Clone());\r\n\r\n            graphic.Align = this.Align;\r\n            graphic.Baseline = this.Baseline;\r\n            graphic.FontSettings.FontFamily = this.FontSettings.FontFamily;\r\n            graphic.FontSettings.FontSize = this.FontSettings.FontSize;\r\n            graphic.FontSettings.FontStyle = this.FontSettings.FontStyle;\r\n            graphic.FontSettings.FontVariant = this.FontSettings.FontVariant;\r\n            graphic.FontSettings.FontWeight = this.FontSettings.FontWeight;\r\n\r\n            super._Clone(graphic);\r\n\r\n            return graphic;\r\n        }\r\n    }\r\n\r\n    /**\r\n* Defines valid FontVariant's that can be used to change the appearance of Text2d's.\r\n*/\r\n    export enum FontVariant {\r\n        Normal,\r\n        SmallCaps\r\n    };\r\n\r\n    /**\r\n* Defines valid FontStyles that can be used to modify the font's style for Text2d's.\r\n*/\r\n    export enum FontStyle {\r\n        Normal,\r\n        Italic,\r\n        Oblique\r\n    }\r\n\r\n    /**\r\n* Defines a set of font settings that are used to modify the appearance of text that is drawn via Text2d's.\r\n*/\r\n    export class FontSettings {\r\n        // @ts-ignore\r\n        private _cachedState: { [property: string]: any; };\r\n        // @ts-ignore\r\n        private _cachedFont: string;\r\n        private _refreshCache: boolean;\r\n\r\n        /**\r\n        * Creates a new instance of the FontSettings object with the following default values.\r\n        * FontSize: 10px\r\n        * FontFamily: Times New Roman\r\n        */\r\n        constructor() {\r\n            this._cachedState = {\r\n                fontSize: \"10px\",\r\n                fontFamily: FontFamily.TimesNewRoman,\r\n                fontVariant: FontVariant.Normal,\r\n                fontWeight: \"\",\r\n                fontStyle: FontStyle.Normal\r\n            };\r\n\r\n            this._refreshCache = true;\r\n            this._BuildFont();\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the current font size.  Values can be things such as 20px.\r\n        */\r\n        public get FontSize(): string {\r\n            return this._cachedState[\"fontSize\"];\r\n        }\r\n        public set FontSize(size: string) {\r\n            this._refreshCache = true;\r\n            this._cachedState[\"fontSize\"] = size;\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the font family.\r\n        */\r\n        public get FontFamily(): FontFamily {\r\n            return this._cachedState[\"fontFamily\"];\r\n        }\r\n        public set FontFamily(family: FontFamily) {\r\n            this._refreshCache = true;\r\n            this._cachedState[\"fontFamily\"] = family;\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the font variant.\r\n        */\r\n        public get FontVariant(): FontVariant {\r\n            return this._cachedState[\"fontVariant\"];\r\n        }\r\n        public set FontVariant(variant: FontVariant) {\r\n            this._refreshCache = true;\r\n            this._cachedState[\"fontVariant\"] = variant;\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the current font weight.\r\n        */\r\n        public get FontWeight(): string {\r\n            return this._cachedState[\"fontWeight\"];\r\n        }\r\n        public set FontWeight(weight: string) {\r\n            this._refreshCache = true;\r\n            this._cachedState[\"fontWeight\"] = weight;\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the current font style.\r\n        */\r\n        public get FontStyle(): FontStyle {\r\n            return this._cachedState[\"fontStyle\"];\r\n        }\r\n        public set FontStyle(style: FontStyle) {\r\n            this._refreshCache = true;\r\n            this._cachedState[\"fontStyle\"] = style;\r\n        }\r\n\r\n        public _BuildFont(): string {\r\n            var font;\r\n\r\n            if (this._refreshCache) {\r\n                font = this._cachedState[\"fontWeight\"] + \" \" + FontStyle[this._cachedState[\"fontStyle\"]].replace(\"Normal\", \"\") + \" \" + FontVariant[this._cachedState[\"fontVariant\"]].replace(\"Normal\", \"\") + \" \" + this._cachedState[\"fontSize\"];\r\n\r\n                if (this._cachedState[\"fontFamily\"] !== undefined) {\r\n                    font += \" \" + FontFamily[this._cachedState[\"fontFamily\"]];\r\n                }\r\n\r\n                this._cachedFont = font.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\r\n                this._refreshCache = false;\r\n            }\r\n\r\n            return this._cachedFont;\r\n        }\r\n    }\r\n\r\n    /**\r\n* Defines valid FontFamilies that can be used to display Text2d's differently.\r\n*/\r\n    export enum FontFamily {\r\n        Antiqua,\r\n        Arial,\r\n        Avqest,\r\n        Blackletter,\r\n        Calibri,\r\n        ComicSans,\r\n        Courier,\r\n        Decorative,\r\n        Fraktur,\r\n        Frosty,\r\n        Garamond,\r\n        Georgia,\r\n        Helvetica,\r\n        Impact,\r\n        Minion,\r\n        Modern,\r\n        Monospace,\r\n        Palatino,\r\n        Roman,\r\n        Script,\r\n        Swiss,\r\n        TimesNewRoman,\r\n        Verdana\r\n    };\r\n\r\n    /**\r\n    * Defines a drawable grid that can be used to store other graphics in a grid like structure.\r\n    */\r\n    export class Grid extends Graphic2d {\r\n        public _type: string = \"Grid\";\r\n\r\n        private _size: Size2d;\r\n        private _tileSize: Size2d;\r\n        private _grid: Graphic2d[][];\r\n        private _gridLines: Line2d[];\r\n        private _rows: number;\r\n        private _columns: number;\r\n        // @ts-ignore\r\n        private _gridLineColor: Color;\r\n        // @ts-ignore\r\n        private _drawGridLines: boolean;\r\n\r\n        /**\r\n        * Creates a new instance of the Grid object.\r\n        * @param x Initial horizontal location of the grid.\r\n        * @param y Initial vertical location of the grid.\r\n        * @param rows Number of rows the grid will have (this cannot change after construction).\r\n        * @param columns Number of columns the grid will have (this cannot change after construction).\r\n        * @param tileWidth The width of the grid tiles (this cannot change after construction).\r\n        * @param tileHeight The height of the grid tiles (this cannot change after construction).\r\n        */\r\n        constructor(x: number, y: number, rows: number, columns: number, tileWidth: number, tileHeight: number);\r\n        /**\r\n        * Creates a new instance of the Grid object.\r\n        * @param x Initial horizontal location of the grid.\r\n        * @param y Initial vertical location of the grid.\r\n        * @param rows Number of rows the grid will have (this cannot change after construction).\r\n        * @param columns Number of columns the grid will have (this cannot change after construction).\r\n        * @param tileWidth The width of the grid tiles (this cannot change after construction).\r\n        * @param tileHeight The height of the grid tiles (this cannot change after construction).\r\n        * @param drawGridLines Initial value for DrawGridLines.\r\n        */\r\n        constructor(x: number, y: number, rows: number, columns: number, tileWidth: number, tileHeight: number, drawGridLines: boolean);\r\n        /**\r\n        * Creates a new instance of the Grid object.\r\n        * @param x Initial horizontal location of the grid.\r\n        * @param y Initial vertical location of the grid.\r\n        * @param rows Number of rows the grid will have (this cannot change after construction).\r\n        * @param columns Number of columns the grid will have (this cannot change after construction).\r\n        * @param tileWidth The width of the grid tiles (this cannot change after construction).\r\n        * @param tileHeight The height of the grid tiles (this cannot change after construction).\r\n        * @param drawGridLines Initial value for DrawGridLines.\r\n        * @param gridLineColor Initial grid line color (only useful if drawGridLines is true); \r\n        */\r\n        constructor(x: number, y: number, rows: number, columns: number, tileWidth: number, tileHeight: number, drawGridLines: boolean, gridLineColor: Color);\r\n        /**\r\n        * Creates a new instance of the Grid object.\r\n        * @param x Initial horizontal location of the grid.\r\n        * @param y Initial vertical location of the grid.\r\n        * @param rows Number of rows the grid will have (this cannot change after construction).\r\n        * @param columns Number of columns the grid will have (this cannot change after construction).\r\n        * @param tileWidth The width of the grid tiles (this cannot change after construction).\r\n        * @param tileHeight The height of the grid tiles (this cannot change after construction).\r\n        * @param drawGridLines Initial value for DrawGridLines.\r\n        * @param gridLineColor Initial grid line color (only useful if drawGridLines is true); \r\n        */\r\n        constructor(x: number, y: number, rows: number, columns: number, tileWidth: number, tileHeight: number, drawGridLines: boolean, gridLineColor: string);\r\n        constructor(x: number, y: number, rows: number, columns: number, tileWidth: number, tileHeight: number, drawGridLines: boolean = false, gridLineColor: any = new Color(\"gray\")) {\r\n            super(new Vector2d(x, y));\r\n\r\n            this._size = new Size2d(tileWidth * columns, tileHeight * rows);\r\n            this._tileSize = new Size2d(tileWidth, tileHeight);\r\n            this._grid = [];\r\n            this._rows = rows;\r\n            this._columns = columns;\r\n            this._gridLines = [];\r\n            this.GridLineColor = gridLineColor;\r\n            this.DrawGridLines = drawGridLines;\r\n\r\n            // Initialize our grid\r\n            for (var i = 0; i < this._rows; i++) {\r\n                this._grid[i] = [];\r\n\r\n                for (var j = 0; j < this._columns; j++) {\r\n                    // @ts-ignore\r\n                    this._grid[i].push(null);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the DrawGridLines property.  Indicates whether the grids column and row lines will be drawn.\r\n        */\r\n        public get DrawGridLines(): boolean {\r\n            return this._drawGridLines;\r\n        }\r\n        public set DrawGridLines(shouldDraw: boolean) {\r\n            if (shouldDraw && this._gridLines.length === 0) {\r\n                this.BuildGridLines();\r\n            }\r\n\r\n            this._drawGridLines = shouldDraw;\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the current grid line color.  Grid lines are only drawn of DrawGridLines is set to true.  Valid colors are strings like \"red\" or \"rgb(255,0,0)\".\r\n        */\r\n        public get GridLineColor(): Color {\r\n            return this._gridLineColor;\r\n        }\r\n        public set GridLineColor(color) {\r\n            if (typeof color === \"string\") {\r\n                color = new Color(<any>color);\r\n            }\r\n            this._gridLineColor = color;\r\n\r\n            for (var i = 0; i < this._gridLines.length; i++) {\r\n                this._gridLines[i].Color = color;\r\n            }\r\n        }\r\n\r\n        /**\r\n        * Gets the size of the grid.\r\n        */\r\n        public get Size(): Size2d {\r\n            return this._size.Clone();\r\n        }\r\n\r\n        /**\r\n        * Gets the size of the tiles.\r\n        */\r\n        public get TileSize(): Size2d {\r\n            return this._tileSize.Clone();\r\n        }\r\n\r\n        /**\r\n        * Gets the number of rows.\r\n        */\r\n        public get Rows(): number {\r\n            return this._rows;\r\n        }\r\n\r\n        /**\r\n        * Gets the number of columns.\r\n        */\r\n        public get Columns(): number {\r\n            return this._columns;\r\n        }\r\n\r\n        /**\r\n        * Fills a tile with the provided graphic.\r\n        * @param row The row.\r\n        * @param column The column.\r\n        * @param graphic The graphic to fill the tile with.\r\n        */\r\n        public Fill(row: number, column: number, graphic: Graphic2d): void {\r\n            if (!graphic || !this.ValidRow(row) || !this.ValidColumn(column)) {\r\n                return;\r\n            }\r\n\r\n            graphic.Position = this.GetInsideGridPosition(row, column);\r\n\r\n            this._grid[row][column] = graphic;\r\n            this.AddChild(graphic);\r\n        }\r\n\r\n        /**\r\n        * Fills a row with the provided graphics\r\n        * @param row The row to fill.\r\n        * @param graphicList The list of graphics to fill the row with.  The row will be filled with as many elements that are contained within the graphicList.\r\n        */\r\n        public FillRow(row: number, graphicList: Graphic2d[]): void;\r\n        /**\r\n        * Fills a row with the provided graphics starting at the provided column\r\n        * @param row The row to fill.\r\n        * @param graphicList The list of graphics to fill the row with.  The row will be filled with as many elements that are contained within the graphicList.\r\n        * @param columnOffset The column to start filling at.\r\n        */\r\n        public FillRow(row: number, graphicList: Graphic2d[], columnOffset: number): void;\r\n        public FillRow(row: number, graphicList: Graphic2d[], columnOffset: number = 0): void {\r\n            var graphic: Graphic2d;\r\n\r\n            for (var i = 0; i < graphicList.length; i++) {\r\n                graphic = graphicList[i];\r\n                graphic.Position = this.GetInsideGridPosition(row, i + columnOffset);\r\n\r\n                this._grid[row][i + columnOffset] = graphic;\r\n                this.AddChild(graphic);\r\n            }\r\n        }\r\n\r\n        /**\r\n        * Fills a column with the provided graphics\r\n        * @param column The column to fill.\r\n        * @param graphicList The list of graphics to fill the column with.  The column will be filled with as many elements that are contained within the graphicList.\r\n        */\r\n        public FillColumn(column: number, graphicList: Graphic2d[]): void;\r\n        /**\r\n        * Fills a column with the provided graphics starting at the provided row.\r\n        * @param column The column to fill.\r\n        * @param graphicList The list of graphics to fill the column with.  The column will be filled with as many elements that are contained within the graphicList.\r\n        * @param rowOffset The row to start filling at.\r\n        */\r\n        public FillColumn(column: number, graphicList: Graphic2d[], rowOffset: number): void;\r\n        public FillColumn(column: number, graphicList: Graphic2d[], rowOffset: number = 0): void {\r\n            var graphic: Graphic2d;\r\n\r\n            for (var i = 0; i < graphicList.length; i++) {\r\n                graphic = graphicList[i];\r\n                graphic.Position = this.GetInsideGridPosition(i + rowOffset, column);\r\n\r\n                this._grid[i + rowOffset][column] = graphic;\r\n                this.AddChild(graphic);\r\n            }\r\n        }\r\n\r\n        /**\r\n        * Fills a tile with the provided graphic.\r\n        * @param row The row to start filling at.\r\n        * @param column The column to start filling at.\r\n        * @param graphicList The list of graphics to fill the space with.  The space will be filled with as many elements that are contained within the multi-dimensional graphicList.\r\n        */\r\n        public FillSpace(row: number, column: number, graphicList: Graphic2d[][]): void {\r\n            var graphic: Graphic2d;\r\n\r\n            for (var i = 0; i < graphicList.length; i++) {\r\n                for (var j = 0; j < graphicList[i].length; j++) {\r\n                    graphic = graphicList[i][j];\r\n                    if (graphic) {\r\n                        graphic.Position = this.GetInsideGridPosition(i + row, j + column);\r\n\r\n                        this._grid[i + row][j + column] = graphic;\r\n                        this.AddChild(graphic);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n        * Gets a graphic within the grid.\r\n        * @param row The row.\r\n        * @param column The column.\r\n        */\r\n        public Get(row: number, column: number): Graphic2d {\r\n            // @ts-ignore\r\n            if (!this.ValidRow(row) || !this.ValidColumn(column)) {\r\n                // @ts-ignore\r\n                return null;\r\n            }\r\n\r\n            return this._grid[row][column];\r\n        }\r\n\r\n        /**\r\n        * Retrieves graphics within the provided row.\r\n        * @param row The row to retrieve.\r\n        */\r\n        public GetRow(row: number): Graphic2d[];\r\n        /**\r\n        * Retrieves graphics within the row starting at the provided column offset.\r\n        * @param row The row to retrieve.\r\n        * @param columnOffset The column to start retrieving the row at.\r\n        */\r\n        public GetRow(row: number, columnOffset: number): Graphic2d[];\r\n        public GetRow(row: number, columnOffset: number = 0): Graphic2d[] {\r\n            var rowList: Graphic2d[] = [];\r\n\r\n            for (var i = columnOffset; i < this._columns; i++) {\r\n                rowList.push(this._grid[row][i]);\r\n            }\r\n\r\n            return rowList;\r\n        }\r\n\r\n        /**\r\n        * Retrieves graphics within the provided column.\r\n        * @param column The column to retrieve.\r\n        */\r\n        public GetColumn(column: number): Graphic2d[];\r\n        /**\r\n        * Retrieves graphics within the column starting at the provided row offset.\r\n        * @param column The column to retrieve.\r\n        * @param rowOffset The row to start retrieving the column at.\r\n        */\r\n        public GetColumn(column: number, rowOffset: number): Graphic2d[];\r\n        public GetColumn(column: number, rowOffset: number = 0): Graphic2d[] {\r\n            var columnList: Graphic2d[] = [];\r\n\r\n            for (var i = rowOffset; i < this._rows; i++) {\r\n                columnList.push(this._grid[i][column]);\r\n            }\r\n\r\n            return columnList;\r\n        }\r\n\r\n        /**\r\n        * Retrieves graphics within row column cross section.\r\n        * @param rowStart The row to start pulling graphics from.\r\n        * @param columnStart The column to start pulling graphics from.\r\n        * @param rowEnd The row to stop pulling graphics from.\r\n        * @param columnEnd The column to stop pulling graphics from.\r\n        */\r\n        public GetSpace(rowStart: number, columnStart: number, rowEnd: number, columnEnd: number): Graphic2d[] {\r\n            var space: Graphic2d[] = [],\r\n                rowIncrementor = (rowEnd >= rowStart) ? 1 : -1,\r\n                columnIncrementor = (columnEnd >= columnStart) ? 1 : -1;\r\n\r\n            for (var i = rowStart; i !== rowEnd + rowIncrementor; i += rowIncrementor) {\r\n                if (i >= this._rows) {\r\n                    break;\r\n                }\r\n\r\n                for (var j = columnStart; j !== columnEnd + columnIncrementor; j += columnIncrementor) {\r\n                    if (j >= this._columns) {\r\n                        break;\r\n                    }\r\n\r\n                    space.push(this._grid[i][j]);\r\n                }\r\n            }\r\n\r\n            return space;\r\n        }\r\n\r\n        /**\r\n        * Clear a grid tile.\r\n        * @param row The row.\r\n        * @param column The column.\r\n        */\r\n        public Clear(row: number, column: number): Graphic2d {\r\n            // @ts-ignore\r\n            if (!this.ValidRow(row) || !this.ValidColumn(column)) {\r\n                // @ts-ignore\r\n                return null;\r\n            }\r\n\r\n            var val = this._grid[row][column];\r\n\r\n            // @ts-ignore\r\n            this._grid[row][column] = null;\r\n            this.RemoveChild(val);\r\n\r\n            return val;\r\n        }\r\n\r\n        /**\r\n        * Clears graphics within the provided row.\r\n        * @param row The row to clear.\r\n        */\r\n        public ClearRow(row: number): Graphic2d[];\r\n        /**\r\n        * Clears graphics within the row starting at the provided column offset.\r\n        * @param row The row to clear.\r\n        * @param columnOffset The column to start clearing the row at.\r\n        */\r\n        public ClearRow(row: number, columnOffset: number): Graphic2d[];\r\n        public ClearRow(row: number, columnOffset: number = 0): Graphic2d[] {\r\n            var vals: Graphic2d[] = [];\r\n\r\n            for (var i = 0; i < this._columns; i++) {\r\n                vals.push(this._grid[row][i]);\r\n                this.RemoveChild(this._grid[row][i]);\r\n                // @ts-ignore\r\n                this._grid[row][i] = null;\r\n            }\r\n\r\n            return vals;\r\n        }\r\n\r\n        /**\r\n        * Clears graphics within the provided column.\r\n        * @param column The column to clear.\r\n        */\r\n        public ClearColumn(column: number): Graphic2d[];\r\n        /**\r\n        * Clears graphics within the column starting at the provided column offset.\r\n        * @param column The column to clear.\r\n        * @param rowOffset The row to start clearing the column at.\r\n        */\r\n        public ClearColumn(column: number, rowOffset: number): Graphic2d[];\r\n        public ClearColumn(column: number, rowOffset: number = 0): Graphic2d[] {\r\n            var vals: Graphic2d[] = [];\r\n\r\n            for (var i = 0; i < this._rows; i++) {\r\n                vals.push(this._grid[i][column]);\r\n                this.RemoveChild(this._grid[i][column]);\r\n                // @ts-ignore\r\n                this._grid[i][column] = null;\r\n            }\r\n\r\n            return vals;\r\n        }\r\n\r\n        /**\r\n        * Clears graphics within row column cross section.\r\n        * @param rowStart The row to start clearing graphics from.\r\n        * @param columnStart The column to start clearing graphics from.\r\n        * @param rowEnd The row to stop clearing graphics from.\r\n        * @param columnEnd The column to stop clearing graphics from.\r\n        */\r\n        public ClearSpace(rowStart: number, columnStart: number, rowEnd: number, columnEnd: number): Graphic2d[] {\r\n            var space: Graphic2d[] = [],\r\n                rowIncrementor = (rowEnd >= rowStart) ? 1 : -1,\r\n                columnIncrementor = (columnEnd >= columnStart) ? 1 : -1;\r\n\r\n            for (var i = rowStart; i !== rowEnd + rowIncrementor; i += rowIncrementor) {\r\n                if (i > this._rows) {\r\n                    break;\r\n                }\r\n\r\n                for (var j = columnStart; j !== columnEnd + columnIncrementor; j += columnIncrementor) {\r\n                    if (j > this._columns) {\r\n                        break;\r\n                    }\r\n\r\n                    space.push(this._grid[i][j]);\r\n                    this.RemoveChild(this._grid[i][j]);\r\n                    // @ts-ignore\r\n                    this._grid[i][j] = null;\r\n                }\r\n            }\r\n\r\n            return space;\r\n        }\r\n\r\n        /**\r\n        * Draws the grid onto the given context.  If this grid is part of a scene the Draw function will be called automatically.\r\n        * @param context The canvas context to draw the grid onto.\r\n        */\r\n        public Draw(context: CanvasRenderingContext2D): void {\r\n            super._StartDraw(context);\r\n\r\n            context.save();\r\n            super._EndDraw(context);\r\n\r\n            if (this.DrawGridLines) {\r\n                for (var i = 0; i < this._gridLines.length; i++) {\r\n                    this._gridLines[i].Draw(context);\r\n                }\r\n            }\r\n            context.restore();\r\n        }\r\n\r\n        /**\r\n        * The bounding area that represents where the grid will draw.\r\n        */\r\n        public GetDrawBounds(): Bounds.Bounds2d {\r\n            var bounds = new Bounds.BoundingRectangle(this.Position, this._size);\r\n\r\n            bounds.Rotation = this.Rotation;\r\n\r\n            return bounds;\r\n        }\r\n\r\n        /**\r\n        * Scale is not implemented.\r\n        * @param scale The value to multiply the graphic's size by.\r\n        */\r\n        public Scale(scale: number): void {\r\n            throw new Error(\"Scale is not implemented for the Grid class.\");\r\n        }\r\n\r\n        /**\r\n        * Converts the provided vertical coordinate to a row number that is based on the current grid.\r\n        * @param y The vertical coordinate to convert to a row.\r\n        */\r\n        public ConvertToRow(y: number): number {\r\n            return Math.floor((y - (this.Position.Y - this._size.HalfHeight)) / this._tileSize.Height);\r\n        }\r\n\r\n        /**\r\n        * Converts the provided horizontal coordinate to a column number that is based on the current grid.\r\n        * @param x The horizontal component to convert to a column.\r\n        */\r\n        public ConvertToColumn(x: number): number {\r\n            return Math.floor((x - (this.Position.X - this._size.HalfWidth)) / this._tileSize.Width);\r\n        }\r\n\r\n        /**\r\n        * Returns a nearly identical copy of this Grid.  If this Grid belongs to a parent, the cloned Grid will not. If this Grid has children, all children will be cloned as well.  Lastly, the cloned Grid will not have the same event bindings as this one does.\r\n        */\r\n        public Clone(): Grid {\r\n            var graphic = new Grid(this.Position.X, this.Position.Y, this._rows, this._columns, this._tileSize.Width, this._tileSize.Height, this._drawGridLines, this._gridLineColor.Clone());\r\n\r\n            for (var i = 0; i < this._grid.length; i++) {\r\n                for (var j = 0; j < this._grid[i].length; j++) {\r\n                    if (this._grid[i][j]) {\r\n                        graphic.Fill(i, j, this._grid[i][j].Clone());\r\n                    }\r\n                }\r\n            }\r\n\r\n            graphic.Opacity = this.Opacity;\r\n            graphic.Rotation = this.Rotation;\r\n            graphic.Visible = this.Visible;\r\n            graphic.ZIndex = this.ZIndex;\r\n\r\n            return graphic;\r\n        }\r\n\r\n        private BuildGridLines(): void {\r\n            var halfSize: Size2d = this._size.Multiply(.5),\r\n                topLeft: Vector2d = new Vector2d(-halfSize.Width, -halfSize.Height),\r\n                bottomRight: Vector2d = new Vector2d(halfSize.Width, halfSize.Height);\r\n\r\n            for (var i = 0; i < this._rows; i++) {\r\n                this._gridLines.push(new Line2d(topLeft.X, topLeft.Y + i * this._tileSize.Height, bottomRight.X, topLeft.Y + i * this._tileSize.Height, 1, this._gridLineColor));\r\n\r\n                if (i === 0) {\r\n                    for (var j = 0; j < this._columns; j++) {\r\n                        this._gridLines.push(new Line2d(topLeft.X + j * this._tileSize.Width, topLeft.Y, topLeft.X + j * this._tileSize.Width, bottomRight.Y, 1, this._gridLineColor));\r\n                    }\r\n                }\r\n            }\r\n\r\n            this._gridLines.push(new Line2d(topLeft.X, bottomRight.Y, bottomRight.X, bottomRight.Y, 1));\r\n            this._gridLines.push(new Line2d(bottomRight.X, topLeft.Y, bottomRight.X, bottomRight.Y, 1));\r\n        }\r\n\r\n        private GetInsideGridPosition(row: number, column: number): Vector2d {\r\n            return new Vector2d(column * this._tileSize.Width - this._size.HalfWidth + this._tileSize.HalfWidth, row * this._tileSize.Height - this._size.HalfHeight + this._tileSize.HalfHeight);\r\n        }\r\n\r\n        private ValidRow(row: number): boolean {\r\n            return row >= 0 && row < this._rows;\r\n        }\r\n\r\n        private ValidColumn(column: number): boolean {\r\n            return column >= 0 && column < this._columns;\r\n        }\r\n    }\r\n}","import { ICloneable } from \"../Interfaces/ICloneable\";\r\nimport { ITyped } from \"../Interfaces/ITyped\";\r\n\r\n/**\r\n* Defines a time interval.\r\n*/\r\nexport class TimeSpan implements ITyped, ICloneable {\r\n    public _type: string = \"TimeSpan\";\r\n\r\n    private static _secondsMultiplier: number = 1000;\r\n    private static _minutesMultiplier: number = TimeSpan._secondsMultiplier * 60;\r\n\r\n    private _milliseconds: number;\r\n    private _seconds: number;\r\n    private _minutes: number;\r\n\r\n    /**\r\n    * Creates a new instance of TimeSpan based on the provided milliseconds.\r\n    * @param milliseconds Number of milliseconds.\r\n    */\r\n    constructor(milliseconds: number);\r\n    /**\r\n    * Creates a new instance of TimeSpan based on the provided milliseconds, seconds and minutes.\r\n    * @param milliseconds Number of milliseconds.\r\n    * @param seconds Number of seconds.\r\n    */\r\n    constructor(milliseconds: number, seconds: number);\r\n    /**\r\n    * Creates a new instance of TimeSpan based on the provided milliseconds, seconds and minutes.\r\n    * @param milliseconds Number of milliseconds.\r\n    * @param seconds Number of seconds.\r\n    * @param minutes Number of minutes.\r\n    */\r\n    constructor(milliseconds: number, seconds: number, minutes: number);\r\n    constructor(milliseconds: number, seconds: number = 0, minutes: number = 0) {\r\n        this._milliseconds = 0;\r\n        this._seconds = 0;\r\n        this._minutes = 0;\r\n\r\n        this.Milliseconds = milliseconds + seconds * TimeSpan._secondsMultiplier + minutes * TimeSpan._minutesMultiplier;\r\n    }\r\n\r\n    /**\r\n    * Gets or sets the number of milliseconds the TimeSpan represents.\r\n    */\r\n    public get Milliseconds(): number {\r\n        return this._milliseconds;\r\n    }\r\n    public set Milliseconds(val: number) {\r\n        this._milliseconds = val;\r\n        this._seconds = val / TimeSpan._secondsMultiplier;\r\n        this._minutes = val / TimeSpan._minutesMultiplier;\r\n    }\r\n\r\n    /**\r\n    * Gets or sets the number of seconds the TimeSpan represents.\r\n    */\r\n    public get Seconds(): number {\r\n        return this._seconds;\r\n    }\r\n    public set Seconds(val: number) {\r\n        this._seconds = val;\r\n        this._milliseconds = val * TimeSpan._secondsMultiplier;\r\n        this._minutes = this._milliseconds / TimeSpan._minutesMultiplier;\r\n    }\r\n\r\n    /**\r\n    * Gets or sets the number of minutes the TimeSpan represents.\r\n    */\r\n    public get Minutes(): number {\r\n        return this._minutes;\r\n    }\r\n    public set Minutes(val: number) {\r\n        this._minutes = val;\r\n        this._seconds = val * 60;\r\n        this._milliseconds = this._seconds * TimeSpan._secondsMultiplier;\r\n    }\r\n\r\n    /**\r\n    * Returns a TimeSpan that represents the addition of the current TimeSpan's milliseconds to the provided TimeSpan's milliseconds.\r\n    * @param val The TimeSpan to add.\r\n    */\r\n    public Add(val: TimeSpan): TimeSpan;\r\n    /**\r\n    * Returns a TimeSpan that represents the addition of the current TimeSpan's milliseconds to the provided milliseconds.\r\n    * @param val The number of milliseconds to add.\r\n    */\r\n    public Add(val: number): TimeSpan;\r\n    public Add(val: any): TimeSpan {\r\n        if (val._type === \"TimeSpan\") {\r\n            return new TimeSpan(this.Milliseconds + val.Milliseconds);\r\n        }\r\n        else {\r\n            return new TimeSpan(this.Milliseconds + val);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Returns a TimeSpan that represents the multiplication of the current TimeSpan's milliseconds by the provided TimeSpan's milliseconds.\r\n    * @param val The TimeSpan to multiply.\r\n    */\r\n    public Multiply(val: TimeSpan): TimeSpan;\r\n    /**\r\n    * Returns a TimeSpan that represents the multiplication of the current TimeSpan's milliseconds by the provided milliseconds.\r\n    * @param val The number of milliseconds to multiply.\r\n    */\r\n    public Multiply(val: number): TimeSpan;\r\n    public Multiply(val: any): TimeSpan {\r\n        if (val._type === \"TimeSpan\") {\r\n            return new TimeSpan(this.Milliseconds * val.Milliseconds);\r\n        }\r\n        else {\r\n            return new TimeSpan(this.Milliseconds * val);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Returns a TimeSpan that represents the subtraction of the current TimeSpan's milliseconds by the provided TimeSpan's milliseconds.\r\n    * @param val The TimeSpan to subtract by.\r\n    */\r\n    public Subtract(val: TimeSpan): TimeSpan;\r\n    /**\r\n    * Returns a TimeSpan that represents the subtraction of the current TimeSpan's milliseconds by the provided milliseconds.\r\n    * @param val The number of milliseconds to subtract by.\r\n    */\r\n    public Subtract(val: number): TimeSpan;\r\n    public Subtract(val: any): TimeSpan {\r\n        if (val._type === \"TimeSpan\") {\r\n            return new TimeSpan(this.Milliseconds - val.Milliseconds);\r\n        }\r\n        else {\r\n            return new TimeSpan(this.Milliseconds - val);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Returns a TimeSpan that represents the subtraction of the current TimeSpan's milliseconds from the provided TimeSpan's milliseconds.\r\n    * @param val The TimeSpan to subtract from.\r\n    */\r\n    public SubtractFrom(val: TimeSpan): TimeSpan;\r\n    /**\r\n    * Returns a TimeSpan that represents the subtraction of the current TimeSpan's milliseconds from the provided milliseconds.\r\n    * @param val The number of milliseconds to subtract from.\r\n    */\r\n    public SubtractFrom(val: number): TimeSpan;\r\n    public SubtractFrom(val: any): TimeSpan {\r\n        if (val._type === \"TimeSpan\") {\r\n            return new TimeSpan(val.Milliseconds - this.Milliseconds);\r\n        }\r\n        else {\r\n            return new TimeSpan(val - this.Milliseconds);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Returns a TimeSpan that represents the division of the current TimeSpan's milliseconds by the provided TimeSpan's milliseconds.\r\n    * @param val The TimeSpan to divide by.\r\n    */\r\n    public Divide(val: TimeSpan): TimeSpan;\r\n    /**\r\n    * Returns a TimeSpan that represents the division of the current TimeSpan's milliseconds by the provided milliseconds.\r\n    * @param val The number of milliseconds to divide by.\r\n    */\r\n    public Divide(val: number): TimeSpan;\r\n    public Divide(val: any): TimeSpan {\r\n        if (val._type === \"TimeSpan\") {\r\n            return new TimeSpan(this.Milliseconds / val.Milliseconds);\r\n        }\r\n        else {\r\n            return new TimeSpan(this.Milliseconds / val);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Returns a TimeSpan that represents the division of the current TimeSpan's milliseconds from the provided TimeSpan's milliseconds.\r\n    * @param val The TimeSpan to divide from.\r\n    */\r\n    public DivideFrom(val: TimeSpan): TimeSpan;\r\n    /**\r\n    * Returns a TimeSpan that represents the division of the current TimeSpan's milliseconds from the provided milliseconds.\r\n    * @param val The number of milliseconds to divide from.\r\n    */\r\n    public DivideFrom(val: number): TimeSpan;\r\n    public DivideFrom(val: any): TimeSpan {\r\n        if (val._type === \"TimeSpan\") {\r\n            return new TimeSpan(val.Milliseconds / this.Milliseconds);\r\n        }\r\n        else {\r\n            return new TimeSpan(val / this.Milliseconds);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Determines whether this TimeSpan represents the same amount of time as the provided TimeSpan.\r\n    * @param timeSpan The TimeSpan to compare the current TimeSpan to.\r\n    */\r\n    public Equivalent(timeSpan: TimeSpan): boolean {\r\n        return this.Milliseconds === timeSpan.Milliseconds;\r\n    }\r\n\r\n    /**\r\n    * Returns a TimeSpan that represents the same time interval.\r\n    */\r\n    public Clone(): TimeSpan {\r\n        return new TimeSpan(this.Milliseconds);\r\n    }\r\n\r\n    /**\r\n    * Overridden toString method to display TimeSpan in the ms:s:m format.\r\n    */\r\n    public toString(): string {\r\n        return this.Milliseconds + \":\" + this.Seconds + \":\" + this.Minutes;\r\n    }\r\n\r\n    /**\r\n    * Returns a TimeSpan that represents the specified number of milliseconds.\r\n    * @param val Number of milliseconds.\r\n    */\r\n    public static FromMilliseconds(val: number): TimeSpan {\r\n        return new TimeSpan(val);\r\n    }\r\n\r\n    /**\r\n    * Returns a TimeSpan that represents the specified number of seconds.\r\n    * @param val Number of seconds.\r\n    */\r\n    public static FromSeconds(val: number): TimeSpan {\r\n        return new TimeSpan(0, val);\r\n    }\r\n\r\n    /**\r\n    * Returns a TimeSpan that represents the specified number of minutes.\r\n    * @param val Number of minutes.\r\n    */\r\n    public static FromMinutes(val: number): TimeSpan {\r\n        return new TimeSpan(0, 0, val);\r\n    }\r\n\r\n    /**\r\n    * Returns a TimeSpan that represents the time between the two dates.\r\n    * @param from The from date.\r\n    * @param to The to date.\r\n    */\r\n    public static DateSpan(from: Date, to: Date): TimeSpan {\r\n        return new TimeSpan(to.getTime() - from.getTime());\r\n    }\r\n\r\n\r\n    /**\r\n    * Gets a TimeSpan that represents a 0 millisecond time interval.\r\n    */\r\n    public static get Zero(): TimeSpan {\r\n        return new TimeSpan(0);\r\n    }\r\n}","export function asyncLoop(action: (next: () => void, index: number) => void, count: number, onComplete?: ()=> void) {\r\n    (function loop(index) {\r\n        if (index < count) {\r\n            action(function () {\r\n                loop(index + 1);\r\n            }, index);\r\n        }\r\n        else if(onComplete) {\r\n            onComplete();\r\n        }\r\n    } (0));\r\n}","import { IDisposable } from \"../Interfaces/IDisposable\";\r\nimport { EventHandler } from \"../Utilities/EventHandler\";\r\nimport { EventHandler1 } from \"../Utilities/EventHandler1\";\r\nimport { Vector2d } from \"../Assets/Vectors/Vector2d\";\r\nimport { NoopTripInvoker } from \"../Utilities/NoopTripInvoker\";\r\n\r\nexport module Input {\r\n\r\n    export class MouseButton {\r\n        public static Left: string = \"Left\";\r\n        public static Middle: string = \"Middle\";\r\n        public static Right: string = \"Right\";\r\n    }\r\n\r\n    /**\r\n    * Defines an all around Input handler which manages mouse and keyboard events.\r\n    */\r\n    export class InputManager implements IDisposable {\r\n        /**\r\n        * Used to bind functions to mouse related events.\r\n        */\r\n        public Mouse: MouseHandler;\r\n        /**\r\n        * Used to bind functions to keyboard related events.\r\n        */\r\n        public Keyboard: KeyboardHandler;\r\n\r\n        private _disposed: boolean;\r\n\r\n        /**\r\n        * Creates a new instance of the InputManager object.\r\n        * @param target The object through which mouse events will be monitored on.\r\n        */\r\n        constructor(target: HTMLElement) {\r\n            this._disposed = false;\r\n            this.Mouse = new MouseHandler(target);\r\n            this.Keyboard = new KeyboardHandler();\r\n        }\r\n\r\n        /**\r\n        * Disposes the MouseHandler and unbinds all bound events.\r\n        */\r\n        public Dispose(): void {\r\n            if (!this._disposed) {\r\n                this._disposed = true;\r\n\r\n                this.Mouse.Dispose();\r\n                this.Keyboard.Dispose();\r\n            }\r\n            else {\r\n                throw new Error(\"MouseHandler cannot be disposed more than once\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n* Defines a handler that will monitor mouse events over a specified area and will execute appropriate functions based on the events.\r\n*/\r\n    export class MouseHandler implements IDisposable {\r\n        // Used to determine mouse buttons without using extra conditional statements, performance enhancer\r\n        private static MouseButtonArray = [null, MouseButton.Left, MouseButton.Middle, MouseButton.Right];\r\n\r\n        // Active flags        \r\n        // @ts-ignore\r\n        private _leftIsDown: boolean;\r\n        // @ts-ignore\r\n        private _middleIsDown: boolean;\r\n        // @ts-ignore\r\n        private _rightIsDown: boolean;\r\n        // @ts-ignore\r\n        private _isDown: boolean;\r\n\r\n        // Events\r\n        private _onClick: EventHandler1<IMouseClickEvent>;\r\n        private _onDoubleClick: EventHandler1<IMouseClickEvent>;\r\n        private _onDown: EventHandler1<IMouseClickEvent>;\r\n        private _onUp: EventHandler1<IMouseClickEvent>;\r\n        private _onMove: EventHandler1<IMouseEvent>;\r\n        private _onScroll: EventHandler1<IMouseScrollEvent>;\r\n\r\n        private _target: HTMLElement;\r\n\r\n        // For disposing\r\n        // @ts-ignore\r\n        private _contextMenuWire: (e: MouseEvent) => void;\r\n        // @ts-ignore\r\n        private _clickWire: (e: MouseEvent) => void;\r\n        // @ts-ignore\r\n        private _dblClickWire: (e: MouseEvent) => void;\r\n        // @ts-ignore\r\n        private _mouseDownWire: (e: MouseEvent) => void;\r\n        // @ts-ignore\r\n        private _mouseUpWire: (e: MouseEvent) => void;\r\n        // @ts-ignore\r\n        private _mouseMoveWire: (e: MouseEvent) => void;\r\n        // @ts-ignore\r\n        private _mouseWheelWireName: string;\r\n        // @ts-ignore\r\n        private _mouseWheelWire: (e: MouseEvent) => void;\r\n        private _disposed: boolean;\r\n\r\n        /**\r\n        * Creates a new instance of the MouseHandler object.\r\n        * @param target The object to monitor mouse events for.\r\n        */\r\n        constructor(target: HTMLElement) {\r\n            this._target = target;\r\n            this._disposed = false;\r\n\r\n            this._onClick = new EventHandler1<IMouseClickEvent>();\r\n            this._onDoubleClick = new EventHandler1<IMouseClickEvent>();\r\n            this._onDown = new EventHandler1<IMouseClickEvent>();\r\n            this._onUp = new EventHandler1<IMouseClickEvent>();\r\n            this._onMove = new EventHandler1<IMouseEvent>();\r\n            this._onScroll = new EventHandler1<IMouseScrollEvent>();\r\n\r\n            // Generic flags to check mouse state\r\n            this._leftIsDown = false;\r\n            this._middleIsDown = false;\r\n            this._rightIsDown = false;\r\n\r\n            this.Wire();\r\n\r\n            this.OnDown.Bind((e: IMouseClickEvent) => {\r\n                this._isDown = true;\r\n                // @ts-ignore\r\n                this[\"_\" + e.Button.toLowerCase() + \"IsDown\"] = true;\r\n                window.focus();\r\n            });\r\n\r\n            this.OnUp.Bind((e: IMouseClickEvent) => {\r\n                this._isDown = false;\r\n                // @ts-ignore\r\n                this[\"_\" + e.Button.toLowerCase() + \"IsDown\"] = false;\r\n                window.focus();\r\n            });\r\n\r\n            this.OnClick.Bind((e: IMouseClickEvent) => {\r\n                window.focus();\r\n            });\r\n\r\n            this.OnDoubleClick.Bind((e: IMouseClickEvent) => {\r\n                window.focus();\r\n            });\r\n        }\r\n\r\n        /**\r\n        * Indicates if the left mouse button is down\r\n        */\r\n        public get LeftIsDown(): boolean {\r\n            return this._leftIsDown;\r\n        }\r\n\r\n        /**\r\n        * Indicates if the middle mouse button is down\r\n        */\r\n        public get MiddleIsDown(): boolean {\r\n            return this._middleIsDown;\r\n        }\r\n\r\n        /**\r\n        * Indicates if the right mouse button is down\r\n        */\r\n        public get RightIsDown(): boolean {\r\n            return this._rightIsDown;\r\n        }\r\n\r\n        /**\r\n        * Indicates if any mouse button is down.\r\n        */\r\n        public get IsDown(): boolean {\r\n            return this._isDown;\r\n        }\r\n\r\n        /**\r\n        * Gets an event that is triggered when a mouse click occurs.  Functions can be bound or unbound to this event to be executed when the event triggers.\r\n        */\r\n        public get OnClick(): EventHandler1<IMouseClickEvent> {\r\n            return this._onClick;\r\n        }\r\n\r\n        /**\r\n        * Gets an event that is triggered when a mouse double click occurs.  Functions can be bound or unbound to this event to be executed when the event triggers.\r\n        */\r\n        public get OnDoubleClick(): EventHandler1<IMouseClickEvent> {\r\n            return this._onDoubleClick;\r\n        }\r\n\r\n        /**\r\n        * Gets an event that is triggered when a mouse down event occurs.  Functions can be bound or unbound to this event to be executed when the event triggers.\r\n        */\r\n        public get OnDown(): EventHandler1<IMouseClickEvent> {\r\n            return this._onDown;\r\n        }\r\n\r\n        /**\r\n        * Gets an event that is triggered when a mouse up event occurs.  Functions can be bound or unbound to this event to be executed when the event triggers.\r\n        */\r\n        public get OnUp(): EventHandler1<IMouseClickEvent> {\r\n            return this._onUp;\r\n        }\r\n\r\n        /**\r\n        * Gets an event that is triggered when a mouse move event occurs.  Functions can be bound or unbound to this event to be executed when the event triggers.\r\n        */\r\n        public get OnMove(): EventHandler1<IMouseEvent> {\r\n            return this._onMove;\r\n        }\r\n\r\n        /**\r\n        * Gets an event that is triggered when a mouse scroll event occurs.  Functions can be bound or unbound to this event to be executed when the event triggers.\r\n        */\r\n        public get OnScroll(): EventHandler1<IMouseScrollEvent> {\r\n            return this._onScroll;\r\n        }\r\n\r\n        /**\r\n        * Disposes the MouseHandler and unbinds all bound events.\r\n        */\r\n        public Dispose(): void {\r\n            if (!this._disposed) {\r\n                this._disposed = true;\r\n\r\n                this._onClick.Dispose();\r\n                this._onDoubleClick.Dispose();\r\n                this._onDown.Dispose();\r\n                this._onMove.Dispose();\r\n                this._onScroll.Dispose();\r\n                this._onUp.Dispose();\r\n\r\n                this.Unwire();\r\n\r\n                // @ts-ignore\r\n                this._target = null;\r\n            }\r\n            else {\r\n                throw new Error(\"MouseHandler cannot be disposed more than once\");\r\n            }\r\n        }\r\n\r\n        private Wire(): void {\r\n            this._clickWire = this._contextMenuWire = this.BuildEvent<IMouseClickEvent>(this._onClick, this.BuildMouseClickEvent);\r\n            this._dblClickWire = this.BuildEvent<IMouseClickEvent>(this._onDoubleClick, this.BuildMouseClickEvent);\r\n            this._mouseDownWire = this.BuildEvent<IMouseClickEvent>(this._onDown, this.BuildMouseClickEvent);\r\n            this._mouseUpWire = this.BuildEvent<IMouseClickEvent>(this._onUp, this.BuildMouseClickEvent)\r\n            this._mouseMoveWire = this.BuildEvent<IMouseEvent>(this._onMove, this.BuildMouseEvent);\r\n\r\n            // OnScroll, in order to detect horizontal scrolling need to hack a bit (browser sniffing)\r\n            // if we were just doing vertical scrolling we could settle with the else statement in this block\r\n            if ((/MSIE/i.test(navigator.userAgent)) || (/Trident/i.test(navigator.userAgent))) {\r\n                this._mouseWheelWireName = \"wheel\";\r\n                this._mouseWheelWire = this.BuildEvent<IMouseScrollEvent>(this._onScroll, (e: any) => {\r\n                    e.wheelDeltaX = -e.deltaX;\r\n                    e.wheelDeltaY = -e.deltaY;\r\n                    return this.BuildMouseScrollEvent(e);\r\n                });\r\n            }\r\n            else if ((/Firefox/i.test(navigator.userAgent))) {\r\n                this._mouseWheelWireName = \"DOMMouseScroll\";\r\n                this._mouseWheelWire = this.BuildEvent<IMouseScrollEvent>(this._onScroll, (e: any) => {\r\n                    e.wheelDeltaX = e.axis === 1 ? -e.detail : 0;\r\n                    e.wheelDeltaY = e.axis === 2 ? -e.detail : 0;\r\n                    return this.BuildMouseScrollEvent(e);\r\n                });\r\n            }\r\n            else {\r\n                this._mouseWheelWireName = \"mousewheel\";\r\n                // @ts-ignore\r\n                this._mouseWheelWire = this.BuildEvent<IMouseScrollEvent>(this._onScroll, this.BuildMouseScrollEvent);\r\n            }\r\n\r\n            this._target.addEventListener(\"click\", this._clickWire, false);\r\n            this._target.addEventListener(\"contextmenu\", this._contextMenuWire, false);\r\n            this._target.addEventListener(\"dblclick\", this._dblClickWire, false);\r\n            this._target.addEventListener(\"mousedown\", this._mouseDownWire, false);\r\n            this._target.addEventListener(\"mouseup\", this._mouseUpWire, false);\r\n            this._target.addEventListener(\"mousemove\", this._mouseMoveWire, false);\r\n            // @ts-ignore\r\n            this._target.addEventListener(this._mouseWheelWireName, this._mouseWheelWire, false);\r\n        }\r\n\r\n        private Unwire(): void {\r\n            this._target.removeEventListener(\"click\", this._clickWire, false);\r\n            this._target.removeEventListener(\"contextmenu\", this._contextMenuWire, false);\r\n            this._target.removeEventListener(\"dblclick\", this._dblClickWire, false);\r\n            this._target.removeEventListener(\"mousedown\", this._mouseDownWire, false);\r\n            this._target.removeEventListener(\"mouseup\", this._mouseUpWire, false);\r\n            this._target.removeEventListener(\"mousemove\", this._mouseMoveWire, false);\r\n            // @ts-ignore\r\n            this._target.removeEventListener(this._mouseWheelWireName, this._mouseWheelWire, false);\r\n        }\r\n\r\n        private BuildEvent<T>(eventHandler: EventHandler1<T>, mouseEventBuilder: (mouseEvent: MouseEvent) => IMouseEvent, returnValue: boolean = false): (e: MouseEvent) => void {\r\n            return (e: MouseEvent) => {\r\n                if (eventHandler.HasBindings()) {\r\n                    eventHandler.Trigger(mouseEventBuilder.call(this, e));\r\n                }\r\n\r\n                e.preventDefault();\r\n\r\n                return returnValue;\r\n            }\r\n        }\r\n\r\n        private BuildMouseScrollEvent(event: MouseWheelEvent): IMouseScrollEvent {\r\n            return {\r\n                Position: this.GetMousePosition(event),\r\n                Direction: this.GetMouseScrollDierction(event)\r\n            };\r\n        }\r\n\r\n        private BuildMouseEvent(event: MouseEvent): IMouseEvent {\r\n            return {\r\n                Position: this.GetMousePosition(event)\r\n            };\r\n        }\r\n\r\n        private BuildMouseClickEvent(event: MouseEvent): IMouseClickEvent {\r\n            return {\r\n                Position: this.GetMousePosition(event),\r\n                Button: this.GetMouseButton(event)\r\n            };\r\n        }\r\n\r\n        private GetMousePosition(event: MouseEvent): Vector2d {\r\n            return new Vector2d(\r\n                event.offsetX ? (event.offsetX) : event.pageX - this._target.offsetLeft,\r\n                event.offsetY ? (event.offsetY) : event.pageY - this._target.offsetTop\r\n            );\r\n        }\r\n\r\n        private GetMouseButton(event: MouseEvent): string {\r\n            if (event.which) {\r\n                // @ts-ignore\r\n                return MouseHandler.MouseButtonArray[event.which];\r\n            }\r\n\r\n            return MouseButton.Right;\r\n        }\r\n\r\n        private GetMouseScrollDierction(event: any): Vector2d {\r\n            return new Vector2d(-Math.max(-1, Math.min(1, event.wheelDeltaX)), -Math.max(-1, Math.min(1, event.wheelDeltaY)));\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Represents a mouse scroll event being triggered on the Game area.\r\n    */\r\n    export interface IMouseScrollEvent extends IMouseEvent {\r\n        /**\r\n        * The scroll direction. The Vector2d will contain 1, -1, or 0 values depending on the mouse scroll.\r\n        */\r\n        Direction: Vector2d;\r\n    }\r\n\r\n    /**\r\n    * Represents a mouse event being triggered on the Game area.\r\n    */\r\n    export interface IMouseEvent {\r\n        /**\r\n        * The location of the mouse relative to the game area.\r\n        */\r\n        Position: Vector2d;\r\n    }\r\n\r\n    /**\r\n    * Represents a mouse click event being triggered on the Game area.\r\n    */\r\n    export interface IMouseClickEvent extends IMouseEvent {\r\n        /**\r\n        * The mouse button that was clicked. Values can be \"Left\", \"Right\", or \"Middle\".\r\n        */\r\n        Button: string;\r\n    }\r\n\r\n    export enum Keys {\r\n        Backspace = 8,\r\n        Tab = 9,\r\n        Enter = 13,\r\n        Shift = 16,\r\n        Ctrl = 17,\r\n        Alt = 18,\r\n        Pause = 19,\r\n        CapsLock = 20,\r\n        Escape = 27,\r\n        Space = 32,\r\n        PageUp = 33,\r\n        PageDown = 34,\r\n        End = 35,\r\n        Home = 36,\r\n        LeftArrow = 37,\r\n        UpArrow = 38,\r\n        RightArrow = 39,\r\n        DownArrow = 40,\r\n        Insert = 45,\r\n        Delete = 46,\r\n        Num0 = 48,\r\n        Num1 = 49,\r\n        Num2 = 50,\r\n        Num3 = 51,\r\n        Num4 = 52,\r\n        Num5 = 53,\r\n        Num6 = 54,\r\n        Num7 = 55,\r\n        Num8 = 56,\r\n        Num9 = 57,\r\n        A = 65,\r\n        B = 66,\r\n        C = 67,\r\n        D = 68,\r\n        E = 69,\r\n        F = 70,\r\n        G = 71,\r\n        H = 72,\r\n        I = 73,\r\n        J = 74,\r\n        K = 75,\r\n        L = 76,\r\n        M = 77,\r\n        N = 78,\r\n        O = 79,\r\n        P = 80,\r\n        Q = 81,\r\n        R = 82,\r\n        S = 83,\r\n        T = 84,\r\n        U = 85,\r\n        V = 86,\r\n        W = 87,\r\n        X = 88,\r\n        Y = 89,\r\n        Z = 90,\r\n        LeftWindows = 91,\r\n        RightWindows = 92,\r\n        Menu = 93,\r\n        NumPad0 = 96,\r\n        NumPad1 = 97,\r\n        NumPad2 = 98,\r\n        NumPad3 = 99,\r\n        NumPad4 = 100,\r\n        NumPad5 = 101,\r\n        NumPad6 = 102,\r\n        NumPad7 = 103,\r\n        NumPad8 = 104,\r\n        NumPad9 = 105,\r\n        Multiply = 106,\r\n        Add = 107,\r\n        Subtract = 109,\r\n        DecimalPoint = 110,\r\n        Divide = 111,\r\n        F1 = 112,\r\n        F2 = 113,\r\n        F3 = 114,\r\n        F4 = 115,\r\n        F5 = 116,\r\n        F6 = 117,\r\n        F7 = 118,\r\n        F8 = 119,\r\n        F9 = 120,\r\n        F10 = 121,\r\n        F11 = 122,\r\n        F12 = 123,\r\n        NumLock = 144,\r\n        ScrollLock = 145,\r\n        BrowserBack = 166,\r\n        BrowserForward = 167,\r\n        Semicolon = 186,\r\n        Equal = 187,\r\n        Comma = 188,\r\n        Dash = 189,\r\n        Period = 190,\r\n        ForwardSlash = 191,\r\n        GraveAccent = 192,\r\n        OpenBracket = 219,\r\n        BackSlash = 220,\r\n        CloseBracket = 221,\r\n        SingleQuote = 222\r\n    }\r\n\r\n    /**\r\n    * Defines an object that is used to represent a keyboard modifier state to determine if Ctrl, Alt, or Shift is being pressed.\r\n    */\r\n    export class KeyboardModifiers {\r\n        /**\r\n        * Gets or sets the Ctrl component.  Represents if a Ctrl key is down.\r\n        */\r\n        public Ctrl: boolean;\r\n        /**\r\n        * Gets or sets the Alt component.  Represents if an Alt key is down.\r\n        */\r\n        public Alt: boolean;\r\n        /**\r\n        * Gets or sets the Shift component.  Represents if a Shift key is down.\r\n        */\r\n        public Shift: boolean;\r\n\r\n        /**\r\n        * Creates a new instance of the KeyboardModifiers object.\r\n        * @param ctrl The initial value of the Ctrl component.\r\n        * @param alt The initial value of the Alt component.\r\n        * @param shift The initial value of the Shift component.\r\n        */\r\n        constructor(ctrl: boolean, alt: boolean, shift: boolean) {\r\n            this.Ctrl = ctrl;\r\n            this.Alt = alt;\r\n            this.Shift = shift;\r\n        }\r\n\r\n        /**\r\n        * Determines whether this KeyboardModifiers object has the same ctrl, alt, and shift states as the provided KeyboardModifiers.\r\n        * @param modifier The KeyboardModifiers to compare the current modifiers to.\r\n        */\r\n        public Equivalent(modifier: KeyboardModifiers): boolean {\r\n            return this.Ctrl === modifier.Ctrl && this.Alt === modifier.Alt && this.Shift === modifier.Shift;\r\n        }\r\n\r\n        /**\r\n        * Builds a KeyboardModifiers object to represent the state of an expected keyCommand\r\n        * @param keyCommand The command to analyze.\r\n        */\r\n        public static BuildFromCommandString(keyCommand: string): KeyboardModifiers {\r\n            var ctrl = (keyCommand.toLowerCase().indexOf(\"ctrl+\") >= 0) ? true : false,\r\n                alt = (keyCommand.toLowerCase().indexOf(\"alt+\") >= 0) ? true : false,\r\n                shift = (keyCommand.toLowerCase().indexOf(\"shift+\") >= 0) ? true : false;\r\n\r\n            return new KeyboardModifiers(ctrl, alt, shift);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Defines a handler that will check for keyboard commands and execute appropriate functions.\r\n    */\r\n    export class KeyboardHandler implements IDisposable {\r\n        private static _keyboardCommandIds: number = 0;\r\n        // @ts-ignore\r\n        private _target: HTMLCanvasElement;\r\n        private _onPressCommands: { [id: number]: KeyboardCommand; };\r\n        private _onDownCommands: { [id: number]: KeyboardCommand; };\r\n        private _onUpCommands: { [id: number]: KeyboardCommand; };\r\n\r\n        private _onKeyPress: EventHandler1<KeyboardCommandEvent>;\r\n        private _onKeyDown: EventHandler1<KeyboardCommandEvent>;\r\n        private _onKeyUp: EventHandler1<KeyboardCommandEvent>;\r\n\r\n        // For Disposing purposes\r\n        // @ts-ignore\r\n        private _keyDownWire: (ke: KeyboardEvent) => void;\r\n        // @ts-ignore\r\n        private _keyUpWire: (ke: KeyboardEvent) => void;\r\n        // @ts-ignore\r\n        private _keyPressWire: (ke: KeyboardEvent) => void;\r\n        private _disposed: boolean;\r\n\r\n        /**\r\n        * Creates a new instance of the KeyboardHandler object.\r\n        */\r\n        constructor() {\r\n            this._onPressCommands = (<any>{});\r\n            this._onDownCommands = (<any>{});\r\n            this._onUpCommands = (<any>{});\r\n\r\n            this._onKeyPress = new EventHandler1<KeyboardCommandEvent>();\r\n            this._onKeyDown = new EventHandler1<KeyboardCommandEvent>();\r\n            this._onKeyUp = new EventHandler1<KeyboardCommandEvent>();\r\n\r\n            this._disposed = false;\r\n\r\n            this.Wire();\r\n        }\r\n\r\n        /**\r\n        * Gets an event that is triggered when any key press occurs.  Functions can be bound or unbound to this event to be executed when the event triggers.\r\n        */\r\n        public get OnKeyPress(): EventHandler1<KeyboardCommandEvent> {\r\n            return this._onKeyPress;\r\n        }\r\n\r\n        /**\r\n        *Gets an event that is triggered when any key goes down.  Functions can be bound or unbound to this event to be executed when the event triggers.\r\n        */\r\n        public get OnKeyDown(): EventHandler1<KeyboardCommandEvent> {\r\n            return this._onKeyDown;\r\n        }\r\n\r\n        /**\r\n        * Gets an event that is triggered when any key comes up.  Functions can be bound or unbound to this event to be executed when the event triggers.\r\n        */\r\n        public get OnKeyUp(): EventHandler1<KeyboardCommandEvent> {\r\n            return this._onKeyUp;\r\n        }\r\n\r\n        /**\r\n        * Binds function to be called when the keyCommand is pressed.  To unbind the function, dispose of the returned KeyboardCommand.\r\n        * @param keyCommand The command string required to execute the action.\r\n        * @param action The action to execute when the keyCommand has been pressed.\r\n        */\r\n        public OnCommandPress(keyCommand: string, action: Function): KeyboardCommand {\r\n            return this.UpdateCache(keyCommand, action, this._onPressCommands);\r\n        }\r\n\r\n        /**\r\n        * Binds function to be called when the keyCommand goes down.  To unbind the function, dispose of the returned KeyboardCommand.\r\n        * @param keyCommand The command string required to execute the action.\r\n        * @param action The action to execute when the keyCommand has is down.\r\n        */\r\n        public OnCommandDown(keyCommand: string, action: Function): KeyboardCommand {\r\n            return this.UpdateCache(keyCommand, action, this._onDownCommands);\r\n        }\r\n\r\n        /**\r\n        * Binds function to be called when the keyCommand comes up.  To unbind the function, dispose of the returned KeyboardCommand.\r\n        * @param keyCommand The command string required to execute the action.\r\n        * @param action The action to execute when the keyCommand comes up.\r\n        */\r\n        public OnCommandUp(keyCommand: string, action: Function): KeyboardCommand {\r\n            return this.UpdateCache(keyCommand, action, this._onUpCommands);\r\n        }\r\n\r\n        /**\r\n        * Disposes the KeyboardHandler and unbinds all bound events.\r\n        */\r\n        public Dispose(): void {\r\n            if (!this._disposed) {\r\n                this._disposed = true;\r\n\r\n                this._onKeyDown.Dispose();\r\n                this._onKeyPress.Dispose();\r\n                this._onKeyUp.Dispose();\r\n\r\n                for (var command in this._onDownCommands) {\r\n                    this._onDownCommands[command].Dispose();\r\n                }\r\n\r\n                // @ts-ignore\r\n                this._onDownCommands = null;\r\n\r\n                for (var command in this._onUpCommands) {\r\n                    this._onUpCommands[command].Dispose();\r\n                }\r\n\r\n                // @ts-ignore\r\n                this._onUpCommands = null;\r\n\r\n                for (var command in this._onPressCommands) {\r\n                    this._onPressCommands[command].Dispose();\r\n                }\r\n\r\n                // @ts-ignore\r\n                this._onPressCommands = null;\r\n\r\n                this.Unwire();\r\n            }\r\n            else {\r\n                throw new Error(\"KeyboardHandler cannot be disposed more than once\");\r\n            }\r\n        }\r\n\r\n        private UpdateCache(keyCommand: string, action: Function, store: { [id: number]: KeyboardCommand; }): KeyboardCommand {\r\n            var command = new KeyboardCommand(keyCommand, action),\r\n                commandId = KeyboardHandler._keyboardCommandIds++;\r\n\r\n            command.OnDispose.Bind(() => {\r\n                delete store[commandId];\r\n            });\r\n\r\n            store[commandId] = command;\r\n\r\n            return command;\r\n        }\r\n\r\n        private Wire(): void {\r\n            this._keyPressWire = this.BuildKeyEvent(this._onPressCommands, this.OnKeyPress);\r\n            this._keyDownWire = this.BuildKeyEvent(this._onDownCommands, this.OnKeyDown);\r\n            this._keyUpWire = this.BuildKeyEvent(this._onUpCommands, this.OnKeyUp);\r\n\r\n            document.addEventListener(\"keypress\", this._keyPressWire, false);\r\n\r\n            document.addEventListener(\"keydown\", this._keyDownWire, false);\r\n\r\n            document.addEventListener(\"keyup\", this._keyUpWire, false);\r\n        }\r\n\r\n        private Unwire(): void {\r\n            document.removeEventListener(\"keypress\", this._keyPressWire, false);\r\n            document.removeEventListener(\"keydown\", this._keyDownWire, false);\r\n            document.removeEventListener(\"keyup\", this._keyUpWire, false);\r\n        }\r\n\r\n        private BuildKeyEvent(store: { [id: number]: KeyboardCommand; }, eventHandler: EventHandler1<KeyboardCommandEvent>): (ke: KeyboardEvent) => void {\r\n            return (ke: KeyboardEvent) => {\r\n                var keyboardCommandEvent: KeyboardCommandEvent,\r\n                    propogate: boolean = true;\r\n\r\n                keyboardCommandEvent = new KeyboardCommandEvent(ke);\r\n\r\n                eventHandler.Trigger(keyboardCommandEvent);\r\n\r\n                for (var keyboardCommandId in store) {\r\n                    if (keyboardCommandEvent.Matches(store[keyboardCommandId])) {\r\n                        store[keyboardCommandId].Action();\r\n                        ke.preventDefault();\r\n                        propogate = false;\r\n                    }\r\n                }\r\n\r\n                return propogate;\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n * HtmlElement that triggered a KeyboardEvent. \r\n */\r\n    export class KeyboardEventTarget {\r\n        private _id: string;\r\n        private _classes: string[];\r\n        private _element: HTMLElement;\r\n        private _tag: string;\r\n\r\n        /**\r\n        * Gets the id of the target element.\r\n        */\r\n        public get Id(): string {\r\n            return this._id;\r\n        }\r\n\r\n        /**\r\n        * Gets a list of classes on the target element.\r\n        */\r\n        public get Classes(): string[] {\r\n            return this._classes;\r\n        }\r\n\r\n        /**\r\n        * Gets the element that caused the keyboard event.\r\n        */\r\n        public get Element(): HTMLElement {\r\n            return this._element;\r\n        }\r\n\r\n        /**\r\n        * Gets the type of tag of the target element.\r\n        */\r\n        public get Tag(): string {\r\n            return this._tag;\r\n        }\r\n\r\n        constructor(target: EventTarget) {\r\n            this._element = <HTMLElement>target;\r\n            this._id = this._element.id;\r\n            this._classes = Array.prototype.slice.call(this._element.classList);\r\n            this._tag = this._element.tagName;\r\n        }\r\n    }\r\n\r\n    export class KeyboardCommandHelper {\r\n        public static ParseKey(command: string): string {\r\n            var arr = command.split(\"+\");\r\n\r\n            if (arr.length > 1) {\r\n                return arr[arr.length - 1];\r\n            }\r\n\r\n            return arr[0];\r\n        }\r\n    }\r\n\r\n    var shiftValues: { [unmodified: string]: string; } = {\r\n        \"~\": \"`\",\r\n        \"!\": \"1\",\r\n        \"@\": \"2\",\r\n        \"#\": \"3\",\r\n        \"$\": \"4\",\r\n        \"%\": \"5\",\r\n        \"^\": \"6\",\r\n        \"&\": \"7\",\r\n        \"*\": \"8\",\r\n        \"(\": \"9\",\r\n        \")\": \"0\",\r\n        \"_\": \"-\",\r\n        \"+\": \"=\",\r\n        \":\": \";\",\r\n        \"\\\"\": \"'\",\r\n        \"<\": \",\",\r\n        \">\": \".\",\r\n        \"?\": \"/\",\r\n        \"|\": \"\\\\\"\r\n    },\r\n        specialKeys: { [name: string]: string; } = {\r\n            \"27\": \"esc\",\r\n            \"9\": \"tab\",\r\n            \"32\": \"space\",\r\n            \"13\": \"return\",\r\n            \"8\": \"backspace\",\r\n            \"45\": \"insert\",\r\n            \"36\": \"home\",\r\n            \"46\": \"delete\",\r\n            \"35\": \"end\",\r\n            \"37\": \"left\",\r\n            \"38\": \"up\",\r\n            \"39\": \"right\",\r\n            \"40\": \"down\",\r\n            \"112\": \"f1\",\r\n            \"113\": \"f2\",\r\n            \"114\": \"f3\",\r\n            \"115\": \"f4\",\r\n            \"116\": \"f5\",\r\n            \"117\": \"f6\",\r\n            \"118\": \"f7\",\r\n            \"119\": \"f8\",\r\n            \"120\": \"f9\",\r\n            \"121\": \"f10\",\r\n            \"122\": \"f11\",\r\n            \"123\": \"f12\"\r\n        };\r\n\r\n    /**\r\n    * Defines a KeyboardCommandEvent object that represents when a command has been attempted.\r\n    */\r\n    export class KeyboardCommandEvent {\r\n        /**\r\n        * The key that was hit.\r\n        */\r\n        public Key: string;\r\n        /**\r\n        * The key that was hit.\r\n        */\r\n        public KeyCode: Keys;\r\n        /**\r\n        * The modifier status.\r\n        */\r\n        public Modifiers: KeyboardModifiers;\r\n\r\n        /**\r\n        * Target element which triggered the event.\r\n        */\r\n        public Target: KeyboardEventTarget;\r\n\r\n        /**\r\n        * Creates a new instance of the KeyboardCommandEvent object.\r\n        * @param keyEvent The raw key event from the DOM.\r\n        */\r\n        constructor(keyEvent: KeyboardEvent) {\r\n            var code,\r\n                character;\r\n\r\n            this.Modifiers = new KeyboardModifiers(keyEvent.ctrlKey, keyEvent.altKey, keyEvent.shiftKey);\r\n\r\n            if (keyEvent.keyCode) {\r\n                code = keyEvent.keyCode;\r\n            }\r\n            else if (keyEvent.which) {\r\n                code = keyEvent.which;\r\n            }\r\n\r\n            if (!((character = String.fromCharCode(keyEvent.keyCode)) === keyEvent.key)) {\r\n                // @ts-ignore\r\n                if (!(character = specialKeys[code])) {\r\n                    // @ts-ignore\r\n                    character = String.fromCharCode(code).toLowerCase();\r\n\r\n                    if (this.Modifiers.Shift && shiftValues[character]) {\r\n                        character = shiftValues[character];\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.Key = character;\r\n            this.KeyCode = (<Keys>code);\r\n            // @ts-ignore\r\n            this.Target = new KeyboardEventTarget(keyEvent.target);\r\n        }\r\n\r\n        /**\r\n        * Determines if the KeyboardCommand matches the KeyboardCommandEvent\r\n        * @param command The KeyboardCommand to check.\r\n        */\r\n        public Matches(command: KeyboardCommand): boolean {\r\n            return this.Key.toLowerCase() === command.Key.toLowerCase() && command.Modifiers.Equivalent(this.Modifiers);\r\n        }\r\n    }\r\n\r\n    /**\r\n * Defines a class that is used to represent a keyboard command.\r\n */\r\n    export class KeyboardCommand implements IDisposable {\r\n        /**\r\n        * Gets or sets the Key that is required to trigger the Action.\r\n        */\r\n        public Key: string;\r\n        /**\r\n        * Gets or sets the Action that is triggered when the KeyboardCommand has been successfully executed.\r\n        */\r\n        public Action: Function;\r\n        /**\r\n        * Gets or sets the Modifiers that are required to trigger the Action.\r\n        */\r\n        public Modifiers: KeyboardModifiers;\r\n\r\n        private _onDisposeInvoker: NoopTripInvoker;\r\n        private _onDisposed: EventHandler;\r\n\r\n        /**\r\n        * Creates a new instance of the KeyboardCommand object.\r\n        * @param command Initial command required to trigger the action function.\r\n        * @param action Initial action to be triggered when the command is executed..\r\n        */\r\n        constructor(command: string, action: Function) {\r\n            this.Action = action;\r\n            this.Modifiers = KeyboardModifiers.BuildFromCommandString(command);\r\n            this.Key = KeyboardCommandHelper.ParseKey(command);\r\n\r\n            this._onDisposed = new EventHandler();\r\n            this._onDisposeInvoker = new NoopTripInvoker(() => {\r\n                this._onDisposed.Trigger();\r\n            }, true);\r\n        }\r\n\r\n        /**\r\n        * Gets an event that is triggered when a KeyboardCommand has been disposed.  If this KeyboardCommand is used with a KeyboardHandler it will no longer trigger the Action function.  Functions can be bound or unbound to this event to be executed when the event triggers.\r\n        */\r\n        public get OnDispose(): EventHandler {\r\n            return this._onDisposed;\r\n        }\r\n\r\n        /**\r\n        * Triggers the OnDisposed event.  If this KeyboardCommand is used with a KeyboardHandler it will no longer trigger the Action function.\r\n        */\r\n        public Dispose(): void {\r\n            this._onDisposeInvoker.InvokeOnce();\r\n        }\r\n    }\r\n}","export class NoopTripInvoker {\r\n    private static _noop: Function = () => { };\r\n    private _invoker: Function;\r\n    private _action: Function;\r\n\r\n    constructor(action: Function, tripped: boolean = false) {\r\n        this._invoker = NoopTripInvoker._noop;\r\n        this._action = action;\r\n\r\n        if (tripped) {\r\n            this.Trip();\r\n        }\r\n    }\r\n\r\n    public Invoke(...args: any[]) {\r\n        this._invoker.apply(this, args);\r\n    }\r\n\r\n    public InvokeOnce(...args: any[]) {\r\n        this._invoker.apply(this, args);\r\n        this.Reset();\r\n    }\r\n\r\n    public Trip() {\r\n        this._invoker = this._action;\r\n    }\r\n\r\n    public Reset() {\r\n        this._invoker = NoopTripInvoker._noop;\r\n    }\r\n}","import { Input } from \"../Input/Input\"\r\nimport { MovementControllers } from \"../MovementControllers/MovementControllers\"\r\n\r\nexport module InputControllers {\r\n\r\n    /**\r\n    * Defines a DirectionalInputController that will monitor Up, Right, Left, and Down movement attempts.\r\n    */\r\n    export class DirectionalInputController {\r\n        private _keyboard: Input.KeyboardHandler;\r\n        private _onMove: (direction: string, startMoving: boolean) => void;\r\n        private _directions: MovementControllers.LinearDirections;\r\n\r\n        /**\r\n        * Creates a new instance of the DirectionalInputController object with default key controls.\r\n        * @param keyboard A keyboard handler in order to bind directional events.\r\n        * @param onMove The function to trigger when the user attempts to perform a move.  Passes the direction (\"Left\", \"Right\", \"Up\", \"Down\") and whether the movement was started or stopped.\r\n        */\r\n        constructor(keyboard: Input.KeyboardHandler, onMove: (direction: string, startMoving: boolean) => void);\r\n        /**\r\n        * Creates a new instance of the DirectionalInputController object with custom key controls.\r\n        * @param keyboard A keyboard handler in order to bind directional events.\r\n        * @param onMove The function to trigger when the user attempts to perform a move.  Passes the direction (\"Left\", \"Right\", \"Up\", \"Down\") and whether the movement was started or stopped.\r\n        * @param upKeys Array of keys to trigger an \"Up\" movement.  Default is [\"w\", \"Up\"].\r\n        * @param rightKeys Array of keys to trigger a \"Right\" movement.  Default is [\"d\", \"Right\"].\r\n        * @param downKeys Array of keys to trigger a \"Down\" movement.  Default is [\"s\", \"Down\"].\r\n        * @param leftKeys Array of keys to trigger a \"Left\" movement.  Default is [\"a\", \"Left\"].\r\n        */\r\n        constructor(keyboard: Input.KeyboardHandler, onMove: (direction: string, startMoving: boolean) => void , upKeys: string[], rightKeys: string[], downKeys: string[], leftKeys: string[]);\r\n        constructor(keyboard: Input.KeyboardHandler, onMove: (direction: string, startMoving: boolean) => void, upKeys: string[] = [\"w\", \"Up\"], rightKeys: string[] = [\"d\", \"Right\"], downKeys: string[] = [\"s\", \"Down\"], leftKeys: string[] = [\"a\", \"Left\"]) {\r\n            this._keyboard = keyboard;\r\n            this._onMove = onMove;\r\n            this._directions = new MovementControllers.LinearDirections();\r\n\r\n            this.BindKeys(upKeys, \"OnCommandDown\", \"Up\", true);\r\n            this.BindKeys(rightKeys, \"OnCommandDown\", \"Right\", true);\r\n            this.BindKeys(downKeys, \"OnCommandDown\", \"Down\", true);\r\n            this.BindKeys(leftKeys, \"OnCommandDown\", \"Left\", true);\r\n            this.BindKeys(upKeys, \"OnCommandUp\", \"Up\", false);\r\n            this.BindKeys(rightKeys, \"OnCommandUp\", \"Right\", false);\r\n            this.BindKeys(downKeys, \"OnCommandUp\", \"Down\", false);\r\n            this.BindKeys(leftKeys, \"OnCommandUp\", \"Left\", false);\r\n        }\r\n\r\n        private BindKeys(keyList: string[], bindingAction: string, direction: string, startMoving: boolean): void {\r\n            for (var i = 0; i < keyList.length; i++) {\r\n                // @ts-ignore\r\n                this._keyboard[bindingAction](keyList[i], () => {\r\n                    // @ts-ignore\r\n                    if (this._directions[direction] != startMoving) {\r\n                        // @ts-ignore\r\n                        this._directions[direction] = startMoving;\r\n                        this._onMove(direction, startMoving);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n}","import { Vector2d } from \"../Assets/Vectors/Vector2d\";\r\nimport { IMoveable } from \"../Interfaces/IMoveable\";\r\nimport { EventHandler1 } from \"../Utilities/EventHandler1\";\r\nimport { IUpdateable } from \"../Interfaces/IUpdateable\";\r\nimport { GameTime } from \"../GameTime\";\r\nimport { NoopTripInvoker } from \"../Utilities/NoopTripInvoker\";\r\n\r\nexport module MovementControllers {\r\n\r\n    /**\r\n* Represents a move event object that is used to depict a movement, specifically a direction and whether or not the move started or stopped.\r\n*/\r\n    export interface IMoveEvent {\r\n        /**\r\n        * The movement direction.\r\n        */\r\n        Direction: string;\r\n        /**\r\n        * Whether or not the move started or stopped.\r\n        */\r\n        StartMoving: boolean;\r\n    }\r\n\r\n    /**\r\n* Defines a direction management object that represents directional state.\r\n*/\r\n    export class LinearDirections {\r\n        /**\r\n        * Indicates whether the object is moving left.\r\n        */\r\n        public Left: boolean;\r\n        /**\r\n        * Indicates whether the object is moving right.\r\n        */\r\n        public Right: boolean;\r\n        /**\r\n        * Indicates whether the object is moving up.\r\n        */\r\n        public Up: boolean;\r\n        /**\r\n        * Indicates whether the object is moving down.\r\n        */\r\n        public Down: boolean;\r\n\r\n        /**\r\n        * Creates a new instance of the LinearDirection object with all directions= indicators initially set to false.\r\n        */\r\n        constructor() {\r\n            this.Left = false;\r\n            this.Right = false;\r\n            this.Up = false;\r\n            this.Down = false;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n* Abstract class that holds moveable objects and synchronizes positions across them.\r\n*/\r\n    export class MovementController implements IMoveable, IUpdateable {\r\n        /**\r\n        * Gets or sets the position of the MovementController\r\n        */\r\n        public Position: Vector2d;\r\n        /**\r\n        * Gets or sets the velocity of the MovementController.\r\n        */\r\n        public Velocity: Vector2d;\r\n        /**\r\n        * Gets or sets the rotation of the MovementController\r\n        */\r\n        public Rotation: number;\r\n        public _frozen: boolean;\r\n        private _moveables: IMoveable[];\r\n\r\n        /**\r\n        * Should only ever be called by derived classes.\r\n        * @param moveables Moveable objects to synchronize.\r\n        */\r\n        constructor(moveables: IMoveable[]) {\r\n            this.Position = moveables.length > 0 ? moveables[0].Position : Vector2d.Zero;\r\n            this.Velocity = Vector2d.Zero;\r\n            this.Rotation = 0;\r\n            this._frozen = false;\r\n\r\n            this._moveables = moveables;\r\n        }\r\n\r\n        /**\r\n        * Prevents the MovementController from updating object locations.\r\n        */\r\n        public Freeze(): void {\r\n            this._frozen = true;\r\n        }\r\n\r\n        /**\r\n        * Used to re-enable movement within the MovementController.\r\n        */\r\n        public Thaw(): void {\r\n            this._frozen = false;\r\n        }\r\n\r\n        /**\r\n        * Determines if the MovementController is moving.  Frozen MovementControllers are not considered moving.\r\n        */\r\n        public IsMoving(): boolean {\r\n            return !this._frozen && !this.Velocity.IsZero();\r\n        }\r\n\r\n        /**\r\n        * Synchronizes the current position with all tracked moveable objects.  MovementController's must be updated in order to move.\r\n        * @param gameTime The current game time object.\r\n        */\r\n        public Update(gameTime: GameTime): void {\r\n            // Sync moveables position and rotation\r\n            for (var i = 0; i < this._moveables.length; i++) {\r\n                this._moveables[i].Position = this.Position;\r\n                this._moveables[i].Rotation = this.Rotation;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n* Defines a LinearMovementController that can move objects Up, Right, Left, Down or a combination.\r\n*/\r\n    export class LinearMovementController extends MovementController {\r\n        private _moveSpeed: number;\r\n        private _moving: LinearDirections;\r\n        private _rotationUpdater: NoopTripInvoker;\r\n        private _velocityUpdater: Function;\r\n\r\n        /**\r\n        * Creates a new instance of the LinearMovementController object which rotates the provided moveable's on movements and can move diagonally.\r\n        * @param movables Array of moveable objects that will be moved when the movement controller moves (this cannot change after construction).\r\n        * @param moveSpeed How fast the movement controller will move.\r\n        */\r\n        constructor(movables: IMoveable[], moveSpeed: number);\r\n        /**\r\n        * Creates a new instance of the LinearMovementController object which can move diagonally.\r\n        * @param movables Array of moveable objects that will be moved when the movement controller moves (this cannot change after construction).\r\n        * @param moveSpeed How fast the movement controller will move.\r\n        * @param rotateWithMovements Whether the movables should rotate to face their moving direction, default is true (this cannot change after construction).\r\n        */\r\n        constructor(movables: IMoveable[], moveSpeed: number, rotateWithMovements: boolean);\r\n        /**\r\n        * Creates a new instance of the LinearMovementController object..\r\n        * @param movables Array of moveable objects that will be moved when the movement controller moves (this cannot change after construction).\r\n        * @param moveSpeed How fast the movement controller will move.\r\n        * @param rotateWithMovements Whether the movables should rotate to face their moving direction.  Default is true (this cannot change after construction).\r\n        * @param multiDirectional Whether multiple movements can occur simultaneously, resulting in diagonal movements. Default is true (this cannot change after construction).\r\n        */\r\n        constructor(movables: IMoveable[], moveSpeed: number, rotateWithMovements: boolean, multiDirectional: boolean);\r\n        constructor(movables: IMoveable[], moveSpeed: number, rotateWithMovements: boolean = true, multiDirectional: boolean = true) {\r\n            super(movables);\r\n\r\n            this._moveSpeed = moveSpeed;\r\n            this._moving = new LinearDirections();\r\n            this.OnMove = new EventHandler1<IMoveEvent>();\r\n            this._rotationUpdater = new NoopTripInvoker(() => {\r\n                this.UpdateRotation();\r\n            }, rotateWithMovements);\r\n\r\n            if (multiDirectional) {\r\n                this._velocityUpdater = this.UpdateVelocityWithMultiDirection;\r\n            }\r\n            else {\r\n                this._velocityUpdater = this.UpdateVelocityNoMultiDirection;\r\n            }\r\n        }\r\n\r\n        /**\r\n        * Event: Triggered when a the movement controller starts or stops a movement.  Functions can be bound or unbound to this event to be executed when the event triggers.\r\n        * Passes an IMoveEvent to bound functions.\r\n        */\r\n        public OnMove: EventHandler1<IMoveEvent>;\r\n\r\n        /**\r\n        * Determines if the movement controller is moving in the provided direction.\r\n        * @param direction The direction to check.\r\n        */\r\n        public IsMovingInDirection(direction: string): boolean {\r\n            // @ts-ignore\r\n            return this._moving[direction] || false;\r\n        }\r\n\r\n        /**\r\n        * Starts moving the movement controller in the specified direction.\r\n        * @param direction The direction to start moving.\r\n        */\r\n        public StartMoving(direction: string): void {\r\n            this.Move(direction, true);\r\n        }\r\n\r\n        /**\r\n        * Stops the movement controller from moving in the specified direction.\r\n        * @param direction The direction to stop moving.\r\n        */\r\n        public StopMoving(direction: string): void {\r\n            this.Move(direction, false);\r\n        }\r\n\r\n        /**\r\n        * Gets the current move speed.\r\n        */\r\n        public MoveSpeed(): number;\r\n        /**\r\n        * Sets and gets the current move speed.\r\n        * @param speed The new move speed.\r\n        */\r\n        public MoveSpeed(speed: number): number;\r\n        public MoveSpeed(speed?: number): number {\r\n            if (typeof speed !== \"undefined\") {\r\n                this._moveSpeed = speed;\r\n                this._velocityUpdater();\r\n            }\r\n\r\n            return this._moveSpeed;\r\n        }\r\n\r\n        /**\r\n        * Moves the LinearMovementController in the currently active directions.  MovementController's must be updated in order to move.\r\n        * @param gameTime The current game time object.\r\n        */\r\n        public Update(gameTime: GameTime): void {\r\n            if (!this._frozen) {\r\n                this.Position = this.Position.Add(this.Velocity.Multiply(gameTime.Elapsed.Seconds));\r\n\r\n                super.Update(gameTime);\r\n            }\r\n        }\r\n\r\n        /**\r\n        * Triggers a move event on the MovementController.\r\n        * @param direction The direction to start or stop moving.\r\n        * @param startMoving Whether the movement is starting or stopping.\r\n        */\r\n        public Move(direction: string, startMoving: boolean): void {\r\n            // @ts-ignore\r\n            if (typeof this._moving[direction] !== \"undefined\") {\r\n                // @ts-ignore\r\n                this._moving[direction] = startMoving;\r\n                this._velocityUpdater();\r\n                this._rotationUpdater.Invoke();\r\n                this.OnMove.Trigger(<IMoveEvent>{\r\n                    Direction: direction,\r\n                    StartMoving: startMoving\r\n                });\r\n            }\r\n            else {\r\n                throw new Error(direction + \" is an unknown direction.\");\r\n            }\r\n        }\r\n\r\n        private UpdateVelocityNoMultiDirection(): void {\r\n            var velocity = Vector2d.Zero;\r\n\r\n            if (velocity.IsZero()) {\r\n                if (this._moving.Up) {\r\n                    velocity.Y -= this._moveSpeed;\r\n                }\r\n                if (this._moving.Down) {\r\n                    velocity.Y += this._moveSpeed;\r\n                }\r\n\r\n                if (velocity.Y === 0) {\r\n                    if (this._moving.Left) {\r\n                        velocity.X -= this._moveSpeed;\r\n                    }\r\n                    if (this._moving.Right) {\r\n                        velocity.X += this._moveSpeed;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.Velocity = velocity;\r\n        }\r\n\r\n        private UpdateVelocityWithMultiDirection(): void {\r\n            var velocity = Vector2d.Zero;\r\n\r\n            if (this._moving.Up) {\r\n                velocity.Y -= this._moveSpeed;\r\n            }\r\n            if (this._moving.Down) {\r\n                velocity.Y += this._moveSpeed;\r\n            }\r\n            if (this._moving.Left) {\r\n                velocity.X -= this._moveSpeed;\r\n            }\r\n            if (this._moving.Right) {\r\n                velocity.X += this._moveSpeed;\r\n            }\r\n\r\n            this.Velocity = velocity;\r\n        }\r\n\r\n        private UpdateRotation(): void {\r\n            if (!this.Velocity.IsZero()) {\r\n                this.Rotation = Math.atan2(this.Velocity.Y, this.Velocity.X);\r\n            }\r\n        }\r\n    }\r\n\r\n}","import { EventHandler1 } from \"../Utilities/EventHandler1\";\r\nimport { Graphics } from \"../Graphics/Graphics\";\r\nimport { TimeSpan } from \"../Assets/TimeSpan\";\r\nimport { asyncLoop } from \"../Extensions/Helpers\";\r\n\r\nexport module MapLoaders {\r\n    /**\r\n* Defines an object that can be used to provide hooks to adjust tiles as they are built.\r\n*/\r\n    export interface IPropertyHooks {\r\n        /**\r\n        * Hooks to trigger when a resource tile with the specified property is used when loading a map.  Passes in the created tile and the property value for the hook.\r\n        */\r\n        ResourceTileHooks?: { [property: string]: IHookFunction };\r\n\r\n        /**\r\n        * Hooks to trigger when a resource sheet with the specified property is used when loading a map.  Passes in created tiles from the resource sheet and the property value for the hook.\r\n        */\r\n        ResourceSheetHooks?: { [property: string]: IHookFunction };\r\n\r\n        /**\r\n        * Hooks to trigger when a layer with the specified property is used when loading a map.  Passes in created tiles from the layer and the property value for the hook.\r\n        */\r\n        LayerHooks?: { [property: string]: IHookFunction };\r\n    }\r\n\r\n    /**\r\n* Defines an object that contains some immediately available information about the map that is about to be loaded.\r\n*/\r\n    export interface IMapPreloadInfo {\r\n        /**\r\n        * The total number of layers the map contains.\r\n        */\r\n        LayerCount: number;\r\n\r\n        /**\r\n        * The total number of tile resource sheets that are used to represent the map.\r\n        */\r\n        ResourceSheetCount: number;\r\n\r\n        /**\r\n        * The total number of tiles within the map (empty or not).\r\n        */\r\n        TileCount: number;\r\n\r\n        /**\r\n        * Gets an event that is triggered when the percent loaded value has changed, first argument is the percent loaded (0-1).  Functions can be bound or unbound to this event to be executed when the event triggers.\r\n        */\r\n        OnPercentLoaded: EventHandler1<number>;\r\n    }\r\n\r\n    /**\r\n* Defines an object that can load data and output a result asynchronously.\r\n*/\r\n    export interface IMapLoader {\r\n        /**\r\n        * Loads the provided data then calls the onComplete function once valid map data has been created.\r\n        * @param data The base data that will be transformed into the IMapLoadedResult format.\r\n        * @param propertyHooks Property hooks that can be used to modify tiles while they're loading.\r\n        * @param onComplete The function to trigger when the data has been converted into a valid IMapLoadedResult.\r\n        */\r\n        Load(data: any, propertyHooks: IPropertyHooks, onComplete: (result: IMapLoadedResult) => any): IMapPreloadInfo;\r\n    }\r\n\r\n    /**\r\n* Defines an object that contains all the information needed to create a scenic map.\r\n*/\r\n    export interface IMapLoadedResult {\r\n        /**\r\n        * Gets or sets the layers that will represent the scenery of the game.  Each layer should be added to the scenery in order to draw the layers.\r\n        */\r\n        Layers: Array<Graphics.TileMap>;\r\n    }\r\n\r\n    /**\r\n* Defines an IHookFunction that represents a function that can be used to hook into map loading tiles.\r\n*/\r\n    export interface IHookFunction {\r\n        (details: Graphics.ITileDetails, propertyValue: string): any;\r\n    }\r\n\r\n\r\n    /**\r\n* Defines supported JSON formats for map loading.\r\n*/\r\n    export enum JSONFormat {\r\n        TMX\r\n    }\r\n\r\n    export class TMXLoader implements IMapLoader {\r\n        private _orientationLoaders: { [orientation: string]: IMapLoader };\r\n\r\n        constructor() {\r\n            this._orientationLoaders = {\r\n                orthogonal: new OrthogonalLoader()\r\n            };\r\n        }\r\n\r\n        public Load(data: ITMX, propertyHooks: IPropertyHooks, onComplete: (result: IMapLoadedResult) => any): IMapPreloadInfo {\r\n            if (!this._orientationLoaders[data.orientation]) {\r\n                throw new Error(\"Invalid orientation.  The orientation '\" + data.orientation + \"' is not supported.\");\r\n            }\r\n\r\n            return this._orientationLoaders[data.orientation].Load(data, propertyHooks, onComplete);\r\n        }\r\n    }\r\n\r\n    interface TileExtractResult {\r\n        ResourceHooks: Array<Array<(details: Graphics.ITileDetails) => any>>;\r\n        Resources: Array<Graphics.ImageSource>;\r\n    }\r\n\r\n    export class OrthogonalLoader implements IMapLoader {\r\n        private static _imagePercentMax: number = .2;\r\n\r\n        public Load(data: ITMX, propertyHooks: IPropertyHooks, onComplete: (result: IMapLoadedResult) => any): IMapPreloadInfo {\r\n            // We're initially at 0%.\r\n            var percent = 0,\r\n                tileCount = 0,\r\n                onPartialLoad: EventHandler1<number> = new EventHandler1<number>();\r\n\r\n            // Load all the sources referenced within the data\r\n            this.LoadTilesetSources(data.tilesets,\r\n                (tileset: Graphics.ImageSource) => {\r\n                    percent += (1 / data.tilesets.length) * OrthogonalLoader._imagePercentMax\r\n\r\n                    onPartialLoad.Trigger(percent);\r\n                },\r\n                (tilesetSources: { [tilesetName: string]: Graphics.ImageSource }) => {\r\n                    // Triggered once all the sources have completed loading\r\n\r\n                    // All the tiles extracted represent our resource list\r\n                    var resources: TileExtractResult = this.ExtractTilesetTiles(data.tilesets, tilesetSources, propertyHooks),\r\n                        mappings: Array<Array<number>>,\r\n                        layers: Array<Graphics.SquareTileMap> = new Array<Graphics.SquareTileMap>(),\r\n                        layerPercentValue = (1 - OrthogonalLoader._imagePercentMax) / data.layers.length;\r\n\r\n                    percent = OrthogonalLoader._imagePercentMax;\r\n\r\n                    asyncLoop((next: () => void, i: number) => {\r\n                        if (data.layers[i].type !== \"tilelayer\") {\r\n                            throw new Error(\"Invalid layer type.  The layer type '\" + data.layers[i].type + \"' is not supported.\");\r\n                        }\r\n\r\n                        this.AsyncBuildLayer(data, i, propertyHooks, resources,\r\n                            (details: Graphics.ITileDetails, percentLoaded: number) => {\r\n                                onPartialLoad.Trigger(percent + percentLoaded * layerPercentValue);\r\n                            },\r\n                            (layer: Graphics.SquareTileMap) => {\r\n                                percent += layerPercentValue;\r\n\r\n                                onPartialLoad.Trigger(percent);\r\n\r\n                                layers.push(layer);\r\n\r\n                                next();\r\n                            });\r\n                    }, data.layers.length, () => {\r\n                        // All layers loaded\r\n\r\n                        onComplete({\r\n                            Layers: layers\r\n                        });\r\n                    });\r\n                });\r\n\r\n            for (var i = 0; i < data.layers.length; i++) {\r\n                tileCount += data.layers[i].data.length;\r\n            }\r\n\r\n            return {\r\n                TileCount: tileCount,\r\n                LayerCount: data.layers.length,\r\n                ResourceSheetCount: data.tilesets.length,\r\n                OnPercentLoaded: onPartialLoad\r\n            };\r\n        }\r\n\r\n        private LoadTilesetSources(tilesets: Array<ITMXTileset>, onTilesetLoad: (tileset: Graphics.ImageSource) => any, onComplete: (tilesetSources: { [tilesetName: string]: Graphics.ImageSource }) => any): void {\r\n            var tilesetSources: { [tilesetName: string]: Graphics.ImageSource } = {},\r\n                loadedCount: number = 0,\r\n                onLoaded = (source: Graphics.ImageSource) => {\r\n                    onTilesetLoad(source);\r\n                    // If everything has loaded\r\n                    if (++loadedCount === tilesets.length) {\r\n                        onComplete(tilesetSources);\r\n                    }\r\n                };\r\n\r\n            for (var i = 0; i < tilesets.length; i++) {\r\n                tilesetSources[tilesets[i].name] = new Graphics.ImageSource(tilesets[i].image, tilesets[i].imagewidth, tilesets[i].imageheight);\r\n                tilesetSources[tilesets[i].name].OnLoaded.Bind(onLoaded);\r\n            }\r\n        }\r\n\r\n        private ExtractTilesetTiles(tilesets: Array<ITMXTileset>, tilesetSources: { [tilesetName: string]: Graphics.ImageSource }, propertyHooks: IPropertyHooks): TileExtractResult {\r\n            var tilesetTiles: Array<Graphics.ImageSource> = new Array<Graphics.ImageSource>(),\r\n                resourceHooks = new Array<Array<(details: Graphics.ITileDetails) => any>>(),\r\n                sources: Array<Graphics.ImageSource>,\r\n                index: number;\r\n\r\n            tilesets.sort((a: ITMXTileset, b: ITMXTileset) => { return a.firstgid - b.firstgid; });\r\n\r\n            for (var i = 0; i < tilesets.length; i++) {\r\n                sources = Graphics.SquareTileMap.ExtractTiles(tilesetSources[tilesets[i].name], tilesets[i].tilewidth, tilesets[i].tileheight);\r\n\r\n                for (var property in tilesets[i].properties) {\r\n                    // @ts-ignore\r\n                    if (typeof propertyHooks.ResourceSheetHooks[property] !== \"undefined\") {\r\n                        for (var j = tilesets[i].firstgid - 1; j < tilesets[i].firstgid - 1 + sources.length; j++) {\r\n                            if (typeof resourceHooks[j] === \"undefined\") {\r\n                                resourceHooks[j] = new Array<(details: Graphics.ITileDetails) => any>();\r\n                            }\r\n\r\n                            // @ts-ignore\r\n                            resourceHooks[j].push(this.BuildHookerFunction(tilesets[i].properties[property], propertyHooks.ResourceSheetHooks[property]));\r\n                        }\r\n                    }\r\n                }\r\n\r\n                for (var tileIndex in tilesets[i].tileproperties) {\r\n                    for (var property in tilesets[i].tileproperties[tileIndex])\r\n                        // @ts-ignore\r\n                        if (typeof propertyHooks.ResourceTileHooks[property] !== \"undefined\") {\r\n                            index = parseInt(tileIndex) + tilesets[i].firstgid - 1;\r\n\r\n                            if (typeof resourceHooks[index] === \"undefined\") {\r\n                                resourceHooks[index] = new Array<(details: Graphics.ITileDetails) => any>();\r\n                            }\r\n\r\n                            // @ts-ignore\r\n                            resourceHooks[index].push(this.BuildHookerFunction(tilesets[i].tileproperties[tileIndex][property], propertyHooks.ResourceTileHooks[property]));\r\n                        }\r\n                }\r\n\r\n                tilesetTiles = tilesetTiles.concat(sources);\r\n            }\r\n\r\n            return {\r\n                Resources: tilesetTiles,\r\n                ResourceHooks: resourceHooks\r\n            };\r\n        }\r\n\r\n        // Not true async but it frees up the DOM\r\n        private AsyncBuildLayer(tmxData: ITMX, layerIndex: number, propertyHooks: IPropertyHooks, resources: TileExtractResult, onTileLoad: (details: Graphics.ITileDetails, percentComplete: number) => any, onComplete: (squareTileMap: Graphics.SquareTileMap) => any): void {\r\n            setTimeout(() => {\r\n                // Convert the layer data to a 2 dimensional array and subtract 1 from all the data points (to make it 0 based)\r\n                var tmxLayer = tmxData.layers[layerIndex],\r\n                    mappings = this.NormalizeLayerData(tmxLayer.data, tmxData.width),\r\n                    layer = new Graphics.SquareTileMap(tmxLayer.x, tmxLayer.y, tmxData.tilewidth, tmxData.tileheight, resources.Resources, mappings),\r\n                    layerHooks: Array<(details: Graphics.ITileDetails) => any> = new Array<(details: Graphics.ITileDetails) => any>();\r\n\r\n                for (var property in tmxLayer.properties) {\r\n                    // @ts-ignore\r\n                    if (typeof propertyHooks.LayerHooks[property] !== \"undefined\") {\r\n                        // @ts-ignore\r\n                        layerHooks.push(this.BuildHookerFunction(tmxLayer.properties[property], propertyHooks.LayerHooks[property]));\r\n                    }\r\n                }\r\n\r\n                layer.ZIndex = layerIndex;\r\n                layer.Visible = tmxLayer.visible;\r\n                layer.Opacity = tmxLayer.opacity;\r\n\r\n                // Enough delay to ensure that the page doesn't freeze\r\n                layer.RowLoadDelay = TimeSpan.FromMilliseconds(5);\r\n\r\n                layer.OnTileLoad.Bind((details: Graphics.ITileDetails, percentComplete: number) => {\r\n                    if (resources.ResourceHooks[details.ResourceIndex]) {\r\n                        for (var i = 0; i < resources.ResourceHooks[details.ResourceIndex].length; i++) {\r\n                            resources.ResourceHooks[details.ResourceIndex][i](details);\r\n                        }\r\n                    }\r\n\r\n                    for (var i = 0; i < layerHooks.length; i++) {\r\n                        layerHooks[i](details);\r\n                    }\r\n\r\n                    onTileLoad(details, percentComplete);\r\n                });\r\n\r\n                layer.OnLoaded.Bind(() => {\r\n                    onComplete(layer);\r\n                });\r\n            }, 0);\r\n        }\r\n\r\n        private BuildHookerFunction(propertyValue: string, fn: IHookFunction): (details: Graphics.ITileDetails) => any {\r\n            return (details: Graphics.ITileDetails): any => {\r\n                return fn(details, propertyValue);\r\n            };\r\n        }\r\n\r\n        private NormalizeLayerData(data: Array<number>, columns: number): Array<Array<number>> {\r\n            var normalized: Array<Array<number>> = new Array<Array<number>>(),\r\n                index: number;\r\n\r\n            for (var i = 0; i < data.length; i++) {\r\n                index = Math.floor(i / columns);\r\n\r\n                if (!(normalized[index] instanceof Array)) {\r\n                    normalized[index] = new Array<number>();\r\n                }\r\n\r\n                // Subtract 1 because TMX format starts at 1\r\n                normalized[index].push(data[i] - 1);\r\n            }\r\n\r\n            return normalized;\r\n        }\r\n    }\r\n\r\n    export interface ITMXTileset {\r\n        firstgid: number;\r\n        image: string;\r\n        imageheight: number;\r\n        imagewidth: number;\r\n        margin: number;\r\n        name: string;\r\n        properties: { [property: string]: string };\r\n        spacing: number;\r\n        tilewidth: number;\r\n        tileheight: number;\r\n        tileproperties: { [tileIndex: string]: { [property: string]: string } };\r\n    }\r\n\r\n    export interface ITMXLayer {\r\n        name: string;\r\n        data: Array<number>;\r\n        opacity: number;\r\n        type: string;\r\n        visible: boolean;\r\n        width: number;\r\n        height: number;\r\n        x: number;\r\n        y: number;\r\n        properties: { [property: string]: string };\r\n    }\r\n\r\n    export interface ITMX {\r\n        version: number;\r\n        width: number;\r\n        height: number;\r\n        tilewidth: number;\r\n        tileheight: number;\r\n        orientation: string;\r\n        properties: any;\r\n        layers: Array<ITMXLayer>;\r\n        tilesets: Array<ITMXTileset>;\r\n    }\r\n\r\n    /**\r\n* Defines a JSON loader that is used to load maps.\r\n*/\r\n    export class JSONLoader {\r\n        private static _loaders: { [format: string]: IMapLoader } = {\r\n            TMX: new TMXLoader()\r\n        };\r\n\r\n        /**\r\n        * Loads the provided tmx formatted json object then calls the onComplete function once the json has been transformed.\r\n        * @param json The JSON data that represents the map.\r\n        * @param onComplete The function to trigger when the json has been converted into a valid IMapLoadedResult.\r\n        */\r\n        public static Load(json: Object, onComplete: (result: IMapLoadedResult) => any): IMapPreloadInfo;\r\n        /**\r\n        * Loads the provided json object then calls the onComplete function once the json has been transformed.\r\n        * @param json The JSON data that represents the map.\r\n        * @param onComplete The function to trigger when the json has been converted into a valid IMapLoadedResult.\r\n        * @param propertyHooks Property hooks that can be used to modify tiles while they're loading.  All maps that are loaded are static square tile maps, therefore modified tiles will only be drawn once.\r\n        */\r\n        public static Load(json: Object, onComplete: (result: IMapLoadedResult) => any, propertyHooks: IPropertyHooks): IMapPreloadInfo;\r\n        /**\r\n        * Loads the provided json object then calls the onComplete function once the json has been transformed.\r\n        * @param json The JSON data that represents the map.\r\n        * @param onComplete The function to trigger when the json has been converted into a valid IMapLoadedResult.\r\n        * @param propertyHooks Property hooks that can be used to modify tiles while they're loading.  All maps that are loaded are static square tile maps, therefore modified tiles will only be drawn once.\r\n        * @param format The format of the JSON object.  Defaults to the tmx format.\r\n        */\r\n        public static Load(json: Object, onComplete: (result: IMapLoadedResult) => any, propertyHooks: IPropertyHooks, format: JSONFormat): IMapPreloadInfo;\r\n        public static Load(json: Object, onComplete: (result: IMapLoadedResult) => any, propertyHooks?: IPropertyHooks, format: JSONFormat = JSONFormat.TMX): IMapPreloadInfo {\r\n            if (!propertyHooks) {\r\n                // Defaults\r\n                propertyHooks = {\r\n                    ResourceTileHooks: {},\r\n                    ResourceSheetHooks: {},\r\n                    LayerHooks: {}\r\n                };\r\n            }\r\n\r\n            return JSONLoader._loaders[JSONFormat[format]].Load(json, propertyHooks, onComplete);\r\n        }\r\n    }\r\n\r\n}","import { IUpdateable } from \"../Interfaces/IUpdateable\";\r\nimport { Graphics } from \"../Graphics/Graphics\";\r\nimport { TimeSpan } from \"../Assets/TimeSpan\";\r\nimport { EventHandler1 } from \"../Utilities/EventHandler1\";\r\nimport { Vector2d } from \"../Assets/Vectors/Vector2d\";\r\nimport { Tweening } from \"../Tweening/Tweening\";\r\nimport { GameTime } from \"../GameTime\";\r\nimport { ICloneable } from \"../Interfaces/ICloneable\";\r\nimport { Bounds } from \"../Bounds/Bounds\";\r\nimport { Functions } from \"../Tweening/Functions/Functions\";\r\n\r\nexport module Particles {\r\n    /**\r\n* Defines a particle that abides by several configured values.\r\n*/\r\n    export class Particle implements IUpdateable {\r\n        // @ts-ignore\r\n        public _id: number;\r\n\r\n        private _texture: Graphics.Graphic2d;\r\n        private _locationTween: Tweening.Vector2dTween;\r\n        private _fadeTween: Tweening.NumberTween;\r\n        private _fadeOutDuration: TimeSpan;\r\n        private _rotationSpeed: number;\r\n        private _createdAt: number;\r\n        private _lifetime: TimeSpan;\r\n        private _alive: boolean;\r\n        private _onDeath: EventHandler1<Particle>;\r\n        private _fadeOutAt: number;\r\n        private _fadingOut: boolean;\r\n\r\n        /**\r\n        * Creates a new instance of the Particle object.\r\n        * @param texture The texture for the particle.\r\n        * @param fromLocation The from location of the Particle.\r\n        * @param toLocation The end location of the Particle.\r\n        * @param scale How large the Particles Texture should be.  Value will multiply the size of the provided texture.\r\n        * @param opacity The particles opacity.  Value should be between 0 and 1.\r\n        * @param rotation The particles initial rotation.  Value should be in radians.\r\n        * @param rotationSpeed How fast the particle should rotate.  Value should be X radians per second.\r\n        * @param lifetime How long the particle should live before dying.\r\n        * @param fadeInDuration How long the particle should take to fade in.\r\n        * @param fadeOutDuration How long the particle should take to fade out.\r\n        * @param movementFunction The function to use to move from the 'fromLocation' to the 'toLocation'.\r\n        */\r\n        constructor(texture: Graphics.Graphic2d, fromLocation: Vector2d, toLocation: Vector2d, scale: number, opacity: number, rotation: number, rotationSpeed: number, lifetime: TimeSpan, fadeInDuration: TimeSpan, fadeOutDuration: TimeSpan, movementFunction: Functions.ITweeningFunction) {\r\n            texture.Position = fromLocation;\r\n            texture.Scale(scale);\r\n            texture.Rotation = rotation;\r\n            texture.Opacity = 0;\r\n\r\n            this._texture = texture;\r\n            this._rotationSpeed = rotationSpeed;\r\n            this._alive = true;\r\n            this._fadingOut = false;\r\n            this._lifetime = lifetime;\r\n            this._createdAt = new Date().getTime();\r\n            this._onDeath = new EventHandler1<Particle>();\r\n            this._fadeOutDuration = fadeOutDuration;\r\n            this._fadeOutAt = lifetime.Milliseconds - fadeOutDuration.Milliseconds;\r\n            this._locationTween = new Tweening.Vector2dTween(texture.Position, toLocation, lifetime, movementFunction);\r\n            this._fadeTween = new Tweening.NumberTween(0, opacity * 100, fadeInDuration, Functions.Linear.EaseNone);\r\n\r\n            this._locationTween.Play();\r\n            this._fadeTween.Play();\r\n        }\r\n\r\n        /**\r\n        * Gets the particles texture.\r\n        */\r\n        public get Texture(): Graphics.Graphic2d {\r\n            return this._texture;\r\n        }\r\n\r\n        /**\r\n        * Gets an event that is triggered when the particle dies.  Functions can be bound or unbound to this event to be executed when the event triggers.\r\n        */\r\n        public get OnDeath(): EventHandler1<Particle> {\r\n            return this._onDeath;\r\n        }\r\n\r\n        /**\r\n        * Determines if the particle is alive.\r\n        */\r\n        public IsAlive(): boolean {\r\n            return this._alive;\r\n        }\r\n\r\n        /**\r\n        * Makes the particle move, fade, and even die if needed.\r\n        * @param gameTime The current game time object.\r\n        */\r\n        public Update(gameTime: GameTime): void {\r\n            var aliveFor: number;\r\n\r\n            if (this._alive) {\r\n                aliveFor = gameTime.Now.getTime() - this._createdAt;\r\n\r\n                if (aliveFor > this._lifetime.Milliseconds) {\r\n                    this._alive = false;\r\n                    this._onDeath.Trigger(this);\r\n                }\r\n                else {\r\n                    if (!this._fadingOut && aliveFor >= this._fadeOutAt) {\r\n                        this._fadingOut = true;\r\n                        this._fadeTween.From = this._texture.Opacity * 100;\r\n                        this._fadeTween.To = 0;\r\n                        this._fadeTween.Duration = this._fadeOutDuration;\r\n                        this._fadeTween.Restart();\r\n                    }\r\n\r\n                    this._locationTween.Update(gameTime);\r\n                    this._fadeTween.Update(gameTime);\r\n\r\n                    this._texture.Rotation += gameTime.Elapsed.Seconds * this._rotationSpeed;\r\n                    this._texture.Position = this._locationTween.Current;\r\n                    this._texture.Opacity = this._fadeTween.Current / 100;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n* Defines a range that is used to describe a range of values.\r\n*/\r\n    export class Range<T> implements ICloneable {\r\n        /**\r\n        * Gets or sets the minimum value of the range.\r\n        */\r\n        public Min: T;\r\n        /**\r\n        * Gets or sets the maximum value of the range.\r\n        */\r\n        public Max: T;\r\n\r\n        /**\r\n        * Creates a new instance of the Range object.\r\n        * @param value The min and max value of the range.\r\n        */\r\n        constructor(value: T);\r\n        /**\r\n        * Creates a new instance of the Range object.\r\n        * @param min The initial min value of the range.\r\n        * @param max The initial max value of the range.\r\n        */\r\n        constructor(min: T, max: T);\r\n        constructor(min: T, max: T = min) {\r\n            this.Min = min;\r\n            this.Max = max;\r\n        }\r\n\r\n        /**\r\n        * Returns an identical copy of this range.\r\n        */\r\n        public Clone(): Range<T> {\r\n            return new Range<T>(this.Min, this.Max);\r\n        }\r\n\r\n        /**\r\n        * Returns a random number between range.Min and range.Max.\r\n        * @param range The range used to bound the number value.\r\n        */\r\n        public static RandomNumber(range: Range<number>): number {\r\n            return Math.random() * (range.Max - range.Min) + range.Min;\r\n        }\r\n\r\n        /**\r\n        * Returns a random TimeSpan between range.Min and range.Max.\r\n        * @param range The range used to bound the TimeSpan value.\r\n        */\r\n        public static RandomTimeSpan(range: Range<TimeSpan>): TimeSpan {\r\n            return TimeSpan.FromMilliseconds(Math.floor(Math.random() * (range.Max.Milliseconds - range.Min.Milliseconds + 1) + range.Min.Milliseconds));\r\n        }\r\n    }\r\n\r\n    /**\r\n* Defines a particle emitter that can emit particles based on various configurations.\r\n*/\r\n    export class Emitter extends Graphics.Graphic2d implements IUpdateable {\r\n        private _texturePool: Array<Graphics.Graphic2d>;\r\n        private _particlePool: { [particleId: number]: Particle };\r\n        private _particleId: number;\r\n        // @ts-ignore\r\n        private _lastEmit: number;\r\n        private _emitting: boolean;\r\n        private _particleRemover: (particle: Particle) => void;\r\n\r\n        /**\r\n        * Gets or sets the EmissionFunction.  The EmissionFunction is used to control how emitted particles move once emitted.\r\n        */\r\n        public EmissionFunction: Functions.ITweeningFunction;\r\n        /**\r\n        * Gets or sets the EmissionInterval.  The EmissionInterval is used to control how often particles are emitted.\r\n        */\r\n        public EmissionInterval: Range<TimeSpan> = new Range<TimeSpan>(TimeSpan.FromMilliseconds(30));\r\n        /**\r\n        * Gets or sets the EmissionDirection.  The EmissionDirection is used to control the angle of particle emissions.  This angle value should be in radians.\r\n        */\r\n        public EmissionDirection: Range<number> = new Range<number>(0, Math.PI * 2);\r\n        /**\r\n        * Gets or sets the EmissionOutput.  The EmissionOutput is used to control how many particles should be emitted per emission.\r\n        */\r\n        public EmissionOutput: Range<number> = new Range<number>(1);\r\n        /**\r\n        * Gets or sets the ParticleLifetime.  The ParticleLifetime is used to control how long particles live before dying out.\r\n        */\r\n        public ParticleLifetime: Range<TimeSpan> = new Range<TimeSpan>(TimeSpan.FromSeconds(1), TimeSpan.FromSeconds(3));\r\n        /**\r\n        * Gets or sets the ParticleSpeed.  The ParticleSpeed is used to control the average speed that emitted particles will move at during their lifetime.\r\n        */\r\n        public ParticleSpeed: Range<number> = new Range<number>(30, 100);\r\n        /**\r\n        * Gets or sets the ParticleScale.  The ParticleScale is used to control each particles size.  Values are percentages of particles base sizes.\r\n        */\r\n        public ParticleScale: Range<number> = new Range<number>(.75, 1.5);\r\n        /**\r\n        * Gets or sets the ParticleRotation.  The ParticleRotation is used to control the initial rotation of emitted particles.\r\n        */\r\n        public ParticleRotation: Range<number> = new Range<number>(0, Math.PI * 2);\r\n        /**\r\n        * Gets or sets the ParticleRotationSpeed.  The ParticleRotationSpeed is used to control how quickly emitted particles rotate.  Values should indicate X number of radians per second.\r\n        */\r\n        public ParticleRotationSpeed: Range<number> = new Range<number>(0, Math.PI);\r\n        /**\r\n        * Gets or sets the ParticleOpacity.  The ParticleOpacity is used to control emitted particles opacity.  Values should be between 0 and 1.\r\n        */\r\n        public ParticleOpacity: Range<number> = new Range<number>(1);\r\n        /**\r\n        * Gets or sets the ParticleFadeInDuration.  The ParticleFadeInDuration is used to control how long particles take to fade in.\r\n        */\r\n        public ParticleFadeInDuration: Range<TimeSpan> = new Range<TimeSpan>(TimeSpan.FromSeconds(.5));\r\n        /**\r\n        * Gets or sets the ParticleFadeOutDuration.  The ParticleFadeOutDuration is used to control how long particles take to fade out.\r\n        */\r\n        public ParticleFadeOutDuration: Range<TimeSpan> = new Range<TimeSpan>(TimeSpan.FromSeconds(.5), TimeSpan.FromSeconds(1));\r\n\r\n        /**\r\n        * Creates a new instance of the Emitter object.\r\n        * @param x The initial horizontal location of the Emitter.\r\n        * @param y The initial vertical location of the Emitter.\r\n        * @param emissionFunction The initial EmissionFunction to use for particle control.\r\n        */\r\n        constructor(x: number, y: number, emissionFunction: Functions.ITweeningFunction) {\r\n            super(new Vector2d(x, y));\r\n\r\n            this._texturePool = new Array<Graphics.Graphic2d>()\r\n            this._particlePool = {};\r\n            this._particleId = 0;\r\n            this._emitting = false;\r\n            this._particleRemover = (particle: Particle) => {\r\n                this.RemoveChild(particle.Texture);\r\n                delete this._particlePool[particle._id];\r\n            };\r\n\r\n            this.EmissionFunction = emissionFunction;\r\n        }\r\n\r\n        /**\r\n        * Determines if the Emitter is emitting particles.\r\n        */\r\n        public IsEmitting(): boolean {\r\n            return this._emitting;\r\n        }\r\n\r\n        /**\r\n        * Starts the Emitter.  Update must be called once started to begin auto-emission of particles.\r\n        */\r\n        public Start(): void {\r\n            if (this._texturePool.length === 0) {\r\n                throw new Error(\"Cannot start Emitter without any textures added to it.\");\r\n            }\r\n\r\n            this._emitting = true;\r\n            this._lastEmit = new Date().getTime();\r\n        }\r\n\r\n        /**\r\n        * Stops the Emitter, no particles will be emitted while stopped.\r\n        */\r\n        public Stop(): void {\r\n            this._emitting = false;\r\n        }\r\n\r\n        /**\r\n        * Adds a texture to the Emitters texture pool.\r\n        * @param texture The texture to add to the pool.\r\n        */\r\n        public AddTexture(texture: Graphics.Graphic2d): void;\r\n        /**\r\n        * Adds a texture to the Emitters texture pool with the provided weight.\r\n        * @param texture The texture to add to the pool.\r\n        * @param weight The weight of the provided texture. A texture with weight 2 will be emitted two times more than a texture with weight 1.\r\n        */\r\n        public AddTexture(texture: Graphics.Graphic2d, weight: number): void;\r\n        public AddTexture(texture: Graphics.Graphic2d, weight: number = 1): void {\r\n            for (var i = 0; i < weight; i++) {\r\n                this._texturePool.push(texture);\r\n            }\r\n        }\r\n\r\n        /**\r\n        * Removes the provided texture from the texture pool.\r\n        * @param texture The texture to remove from the pool.\r\n        */\r\n        public RemoveTexture(texture: Graphics.Graphic2d): void {\r\n            for (var i = 0; i < this._texturePool.length; i++) {\r\n                if (this._texturePool[i] === texture) {\r\n                    this._texturePool.splice(i--, 1);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n        * Emits particles based on the Emitters configuration.  Does not abide by the EmissionInterval.\r\n        * To allow for complex particle manipulation this method can be overridden by derived Emitter classes.\r\n        */\r\n        public Emit(): Array<Particle> {\r\n            var particleCount: number = Range.RandomNumber(this.EmissionOutput),\r\n                endLocation: Vector2d,\r\n                emissionDirection: number,\r\n                particleSpeed: number,\r\n                particleLifeTime: TimeSpan,\r\n                particle: Particle,\r\n                particles: Array<Particle> = new Array<Particle>();\r\n\r\n            for (var i = 0; i < particleCount; i++) {\r\n                particleLifeTime = Range.RandomTimeSpan(this.ParticleLifetime);\r\n                particleSpeed = Range.RandomNumber(this.ParticleSpeed);\r\n                emissionDirection = Range.RandomNumber(this.EmissionDirection);\r\n                endLocation = new Vector2d(particleLifeTime.Seconds * particleSpeed, 0).RotateAround(Vector2d.Zero, emissionDirection);\r\n\r\n                particle = new Particle(\r\n                    this.BuildTextureFromPool(),\r\n                    Vector2d.Zero,\r\n                    endLocation,\r\n                    Range.RandomNumber(this.ParticleScale),\r\n                    Range.RandomNumber(this.ParticleOpacity),\r\n                    Range.RandomNumber(this.ParticleRotation),\r\n                    Range.RandomNumber(this.ParticleRotationSpeed),\r\n                    particleLifeTime,\r\n                    Range.RandomTimeSpan(this.ParticleFadeInDuration),\r\n                    Range.RandomTimeSpan(this.ParticleFadeOutDuration),\r\n                    this.EmissionFunction\r\n                );\r\n\r\n                particle._id = this._particleId++;\r\n\r\n                this._particlePool[particle._id] = particle;\r\n\r\n                this.AddChild(particle.Texture);\r\n                particle.OnDeath.Bind(this._particleRemover);\r\n\r\n                particles.push(particle);\r\n            }\r\n\r\n            return particles;\r\n        }\r\n\r\n        /**\r\n        * Draws the Emitter onto the given context.  If this Emitter is part of a scene the Draw function will be called automatically.\r\n        * @param context The canvas context to draw the Emitter onto.\r\n        */\r\n        public Draw(context: CanvasRenderingContext2D): void {\r\n            super._StartDraw(context);\r\n            super._EndDraw(context);\r\n        }\r\n\r\n        /**\r\n        * Scale is not implemented.\r\n        * @param scale The value to multiply the graphic's size by.\r\n        */\r\n        public Scale(scale: number): void {\r\n            throw new Error(\"Scale is not implemented for the Emitter class.\");\r\n        }\r\n\r\n        /**\r\n        * Attempts to emit particles if the configured EmisisonInterval has passed since the last Emission.\r\n        * @param gameTime The current game time object.\r\n        */\r\n        public Update(gameTime: GameTime): void {\r\n            var timeSinceEmit: number,\r\n                emitCount: number,\r\n                emissionRate: number;\r\n\r\n            if (this._emitting) {\r\n                emissionRate = Range.RandomTimeSpan(this.EmissionInterval).Milliseconds;\r\n                if (emissionRate > 0) {\r\n                    timeSinceEmit = gameTime.Now.getTime() - this._lastEmit;\r\n                    emitCount = Math.floor(timeSinceEmit / emissionRate);\r\n\r\n                    if (emitCount > 0) {\r\n                        this._lastEmit = gameTime.Now.getTime();\r\n\r\n                        for (var i = 0; i < emitCount; i++) {\r\n                            this.Emit();\r\n                        }\r\n                    }\r\n                }\r\n\r\n                for (var particleId in this._particlePool) {\r\n                    this._particlePool[particleId].Update(gameTime);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n        * The bounding area that represents where the Emitter will draw.\r\n        */\r\n        public GetDrawBounds(): Bounds.Bounds2d {\r\n            var bounds = new Bounds.BoundingCircle(this.Position, this.ParticleSpeed.Max * this.ParticleLifetime.Max.Seconds);\r\n\r\n            return bounds;\r\n        }\r\n\r\n        /**\r\n        * Returns a nearly identical copy of this Emitter.  The cloned Emitter will be stopped.  If this Emitter belongs to a parent, the cloned Emitter will not. The cloned Emitter will not have the same event bindings as this one does.\r\n        */\r\n        public Clone(): Emitter {\r\n            var clone = new Emitter(this.Position.X, this.Position.Y, this.EmissionFunction);\r\n\r\n            for (var i = 0; i < this._texturePool.length; i++) {\r\n                clone.AddTexture(this._texturePool[i]);\r\n            }\r\n\r\n            clone.EmissionInterval = this.EmissionInterval.Clone();\r\n            clone.EmissionDirection = this.EmissionDirection.Clone();\r\n            clone.EmissionOutput = this.EmissionOutput.Clone();\r\n            clone.ParticleLifetime = this.ParticleLifetime.Clone();\r\n            clone.ParticleSpeed = this.ParticleSpeed.Clone();\r\n            clone.ParticleRotation = this.ParticleRotation.Clone();\r\n            clone.ParticleRotationSpeed = this.ParticleRotationSpeed.Clone();\r\n            clone.ParticleFadeInDuration = this.ParticleFadeInDuration.Clone();\r\n            clone.ParticleFadeOutDuration = this.ParticleFadeOutDuration.Clone();\r\n            clone.ParticleScale = this.ParticleScale.Clone();\r\n            clone.ParticleOpacity = this.ParticleOpacity.Clone();\r\n\r\n            clone.Opacity = this.Opacity;\r\n            clone.Rotation = this.Rotation;\r\n            clone.Visible = this.Visible;\r\n            clone.ZIndex = this.ZIndex;\r\n\r\n            return clone;\r\n        }\r\n\r\n        private BuildTextureFromPool(): Graphics.Graphic2d {\r\n            var textureIndex = Math.floor(Math.random() * this._texturePool.length);\r\n\r\n            return this._texturePool[textureIndex].Clone();\r\n        }\r\n    }\r\n}","import { Vector2d } from \"../Assets/Vectors/Vector2d\";\r\nimport { TimeSpan } from \"../Assets/TimeSpan\";\r\nimport { Functions } from \"./Functions/Functions\";\r\nimport { ICloneable } from \"../Interfaces/ICloneable\";\r\nimport { IDisposable } from \"../Interfaces/IDisposable\";\r\nimport { IUpdateable } from \"../Interfaces/IUpdateable\";\r\nimport { EventHandler1 } from \"../Utilities/EventHandler1\";\r\nimport { GameTime } from \"../GameTime\";\r\nimport { Size2d } from \"../Assets/Sizes/Size2d\";\r\nimport { Graphics } from \"../Graphics/Graphics\";\r\n\r\nexport module Tweening {\r\n\r\n    //interface Number extends ICloneable {\r\n    //    Clone: () => number;\r\n    //}\r\n\r\n    //(<any>Number.prototype).Clone = function (): number { return this; };\r\n    /**\r\n* Defines a base Tween class that is used to move a value from a start value to an end value.\r\n*/\r\n    function Clone<T extends ICloneable | number>(item: T): T {\r\n        if ((<any>item).Clone) {\r\n            return (<any>item).Clone();\r\n        }\r\n\r\n        return item;\r\n    }\r\n\r\n    export class Tween<T extends ICloneable | number> implements IDisposable, IUpdateable {\r\n        private _from: T;\r\n        private _to: T;\r\n        private _current: T;\r\n        private _duration: TimeSpan;\r\n        private _elapsed: TimeSpan;\r\n        private _playing: boolean;\r\n        private _tweeningFunction: Functions.ITweeningFunction;\r\n        private _onChange: EventHandler1<T>;\r\n        private _onComplete: EventHandler1<Tween<T>>;\r\n\r\n        /**\r\n        * Creates a new instance of the Tween object.  This should only ever be called from derived classes via a super constructor call.\r\n        * @param from Start value.\r\n        * @param to End value.\r\n        * @param duration How fast to move the current value from start to end.\r\n        * @param tweeningFunction The function to use to translate the current value from start to end.  Different functions result in different translation behavior.\r\n        */\r\n        constructor(from: T, to: T, duration: TimeSpan, tweeningFunction: Functions.ITweeningFunction) {\r\n            this._from = Clone(from);\r\n            this._to = Clone(to);\r\n            this._current = Clone(this._from);\r\n            this._duration = duration;\r\n            this._elapsed = TimeSpan.Zero;\r\n            this._playing = false;\r\n            this._onChange = new EventHandler1<T>();\r\n            this._onComplete = new EventHandler1<Tween<T>>();\r\n            this._tweeningFunction = tweeningFunction;\r\n        }\r\n\r\n        /**\r\n        * Gets an event that is triggered when the tween has changed its Current value, occurs directly after a tween update.  Functions can be bound or unbound to this event to be executed when the event triggers.\r\n        */\r\n        public get OnChange(): EventHandler1<T> {\r\n            return this._onChange;\r\n        }\r\n\r\n        /**\r\n        * Gets an event that is triggered when the tween has completed transitioning the Current value, once triggered Elapsed will be equivalent to Duration and Current will be equivalent to To.  Functions can be bound or unbound to this event to be executed when the event triggers.\r\n        */\r\n        public get OnComplete(): EventHandler1<Tween<T>> {\r\n            return this._onComplete;\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the From component of the tween.\r\n        */\r\n        public get From(): T {\r\n            return this._from;\r\n        }\r\n        public set From(from: T) {\r\n            this._from = from;\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the To component of the tween.\r\n        */\r\n        public get To(): T {\r\n            return this._to;\r\n        }\r\n        public set To(to: T) {\r\n            this._to = to;\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the Current component of the tween.  The Current is the current value of the tween, the final value of Current will be equivalent to To when the tween has completed.\r\n        */\r\n        public get Current(): T {\r\n            return this._current;\r\n        }\r\n        public set Current(current: T) {\r\n            this._current = current;\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the Duration component of the tween.  The Duration is how long the tween will take to go From -> To.\r\n        */\r\n        public get Duration(): TimeSpan {\r\n            return this._duration;\r\n        }\r\n        public set Duration(duration: TimeSpan) {\r\n            this._duration = duration;\r\n        }\r\n\r\n        /**\r\n        * Gets or the Elapsed component of the tween.  Elapsed represents how far along the tween is.  When Elapsed equals Duration the tween is completed.\r\n        */\r\n        public get Elapsed(): TimeSpan {\r\n            return this._elapsed.Clone();\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the TweeningFunction of the tween.  The TweeningFunction controls how the tween translates the Current value to the To value.\r\n        */\r\n        public get TweeningFunction(): Functions.ITweeningFunction {\r\n            return this._tweeningFunction;\r\n        }\r\n        public set TweeningFunction(fn: Functions.ITweeningFunction) {\r\n            this._tweeningFunction = fn;\r\n        }\r\n\r\n        /**\r\n        * Determines if the tween is playing.\r\n        */\r\n        public IsPlaying(): boolean {\r\n            return this._playing;\r\n        }\r\n\r\n        /**\r\n        * Starts playing the tween.  The tween will only start translating the value if Update is called.\r\n        */\r\n        public Play(): void {\r\n            this._playing = true;\r\n        }\r\n\r\n        /**\r\n        * Pauses the tween.  Calls to update will not translate the tween when paused.\r\n        */\r\n        public Pause(): void {\r\n            this._playing = false;\r\n        }\r\n\r\n        /**\r\n        * Resets the tween to the To location and resets the Elapsed time.  This does not stop or start the tween.\r\n        */\r\n        public Reset(): void {\r\n            this._elapsed.Milliseconds = 0;\r\n            this._current = Clone(this._from);\r\n        }\r\n\r\n        /**\r\n        * Stops the tween from playing.  This also resets the tween to its To value.\r\n        */\r\n        public Stop(): void {\r\n            this._playing = false;\r\n            this.Reset();\r\n        }\r\n\r\n        /**\r\n        * Restarts the tween.  Essentially calls Reset and then Play.\r\n        */\r\n        public Restart(): void {\r\n            this.Reset();\r\n            this.Play();\r\n        }\r\n\r\n        /**\r\n        * Reverses the tween from the Current value back to the From value.  This changes the To component to equal the From value and the From value to equal the Current value.\r\n        */\r\n        public Reverse(): void {\r\n            this._elapsed = TimeSpan.Zero;\r\n            this._to = this._from;\r\n            this._from = Clone(this.Current);\r\n        }\r\n\r\n        /**\r\n        * Updates the tweens Current and Elapsed component if the tween is playing.\r\n        * @param gameTime The global game time object.  Used to represent total time running and used to track update interval elapsed speeds.\r\n        */\r\n        public Update(gameTime: GameTime): void {\r\n            if (!this._playing) {\r\n                return;\r\n            }\r\n\r\n            this._elapsed = this._elapsed.Add(gameTime.Elapsed);\r\n\r\n            if (this._elapsed.Milliseconds >= this._duration.Milliseconds) {\r\n                this._elapsed = this._duration.Clone();\r\n\r\n                this._current = Clone(this._to);\r\n                this._playing = false;\r\n\r\n                this._onChange.Trigger(Clone(this._current));\r\n                this._onComplete.Trigger(this);\r\n            }\r\n            else {\r\n                this._UpdateTween();\r\n                this._onChange.Trigger(Clone(this._current));\r\n            }\r\n        }\r\n\r\n        /**\r\n        * Stops and unbinds all events from the tween.\r\n        */\r\n        public Dispose(): void {\r\n            this.Stop();\r\n            this._onChange.Dispose();\r\n            this._onComplete.Dispose();\r\n        }\r\n\r\n        public _UpdateTween(): void {\r\n            // This should be overridden\r\n        }\r\n    }\r\n\r\n    /**\r\n* Defines a Size2dTween class that is used to move a Size2d from a start value to an end value.\r\n*/\r\n    export class Size2dTween extends Tween<Size2d> {\r\n\r\n        /**\r\n        * Creates a new instance of the Size2dTween object.\r\n        * @param from Start Size2d.\r\n        * @param to End Size2d.\r\n        * @param duration How fast to move the current Size2d from start to end.\r\n        * @param tweeningFunction The function to use to translate the current Size2d from start to end.  Different functions result in different translation behavior.\r\n        */\r\n        constructor(from: Size2d, to: Size2d, duration: TimeSpan, tweeningFunction: Functions.ITweeningFunction) {\r\n            super(from, to, duration, tweeningFunction);\r\n        }\r\n\r\n        public _UpdateTween(): void {\r\n            this.Current = new Size2d(\r\n                this.TweeningFunction(this.From.Width, this.To.Width, this.Elapsed, this.Duration),\r\n                this.TweeningFunction(this.From.Height, this.To.Height, this.Elapsed, this.Duration)\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Defines a NumberTween class that is used to move a number from a start value to an end value.\r\n    */\r\n    export class NumberTween extends Tween<number> {\r\n\r\n        /**\r\n        * Creates a new instance of the NumberTween object.\r\n        * @param from Start number.\r\n        * @param to End number.\r\n        * @param duration How fast to move the current number from start to end.\r\n        * @param tweeningFunction The function to use to translate the current number from start to end.  Different functions result in different translation behavior.\r\n        */\r\n        constructor(from: number, to: number, duration: TimeSpan, tweeningFunction: Functions.ITweeningFunction) {\r\n            super(from, to, duration, tweeningFunction);\r\n        }\r\n\r\n        public _UpdateTween(): void {\r\n            this.Current = this.TweeningFunction(this.From, this.To, this.Elapsed, this.Duration);\r\n        }\r\n    }\r\n\r\n    /**\r\n* Defines a ColorTween class that is used to move a number from a start value to an end value.\r\n*/\r\n    export class ColorTween extends Tween<Graphics.Color> {\r\n\r\n        /**\r\n        * Creates a new instance of the ColorTween object.\r\n        * @param from Start color.\r\n        * @param to End color.\r\n        * @param duration How fast to move the current color from start to end.\r\n        * @param tweeningFunction The function to use to translate the current color from start to end.  Different functions result in different translation behavior.\r\n        */\r\n        constructor(from: Graphics.Color, to: Graphics.Color, duration: TimeSpan, tweeningFunction: Functions.ITweeningFunction) {\r\n            super(from, to, duration, tweeningFunction);\r\n        }\r\n\r\n        public _UpdateTween(): void {\r\n            this.Current.R = this.TweeningFunction(this.From.R, this.To.R, this.Elapsed, this.Duration);\r\n            this.Current.G = this.TweeningFunction(this.From.G, this.To.G, this.Elapsed, this.Duration);\r\n            this.Current.B = this.TweeningFunction(this.From.B, this.To.B, this.Elapsed, this.Duration);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Defines a Vector2dTween class that is used to move a Vector2d from a start value to an end value.\r\n    */\r\n    export class Vector2dTween extends Tween<Vector2d> {\r\n\r\n        /**\r\n        * Creates a new instance of the Vector2dTween object.\r\n        * @param from Start Vector2d.\r\n        * @param to End Vector2d.\r\n        * @param duration How fast to move the current Vector2d from start to end.\r\n        * @param tweeningFunction The function to use to translate the current Vector2d from start to end.  Different functions result in different translation behavior.\r\n        */\r\n        constructor(from: Vector2d, to: Vector2d, duration: TimeSpan, tweeningFunction: Functions.ITweeningFunction) {\r\n            super(from, to, duration, tweeningFunction);\r\n        }\r\n\r\n        public _UpdateTween(): void {\r\n            this.Current = new Vector2d(\r\n                this.TweeningFunction(this.From.X, this.To.X, this.Elapsed, this.Duration),\r\n                this.TweeningFunction(this.From.Y, this.To.Y, this.Elapsed, this.Duration));\r\n        }\r\n    }\r\n\r\n\r\n}","import { TimeSpan } from \"../../Assets/TimeSpan\";\r\n\r\nexport module Functions {\r\n\r\n    /**\r\n* Defines an ITweeningFunction interface that represents a function that can be used to translate Tween's.\r\n*/\r\n    export interface ITweeningFunction {\r\n        (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number;\r\n    }\r\n\r\n    /**\r\n* Defines an Exponential tweening function collection that has an EaseIn, EaseOut, and EaseInOut function that can be used with Tween's.\r\n*/\r\n    export class Exponential {\r\n        private static _easeIn: ITweeningFunction = (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number => {\r\n            var change = to - from,\r\n                elapsedMilliseconds = elapsed.Milliseconds;\r\n\r\n            return (elapsedMilliseconds == 0) ? from : change * Math.pow(2, 10 * (elapsedMilliseconds / duration.Milliseconds - 1)) + from;\r\n        };\r\n        private static _easeOut: ITweeningFunction = (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number => {\r\n            var change = to - from,\r\n                elapsedMilliseconds = elapsed.Milliseconds;\r\n\r\n            return (elapsedMilliseconds == duration.Milliseconds) ? from + change : change * (-Math.pow(2, -10 * elapsedMilliseconds / duration.Milliseconds) + 1) + from;\r\n        };\r\n        private static _easeInOut: ITweeningFunction = (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number => {\r\n            var change = to - from,\r\n                elapsedMilliseconds = elapsed.Milliseconds;\r\n\r\n            if (elapsedMilliseconds == 0) {\r\n                return from;\r\n            }\r\n            if (elapsedMilliseconds == duration.Milliseconds) {\r\n                return from + change;\r\n            }\r\n            if ((elapsedMilliseconds /= duration.Milliseconds / 2) < 1) {\r\n                return change / 2 * Math.pow(2, 10 * (elapsedMilliseconds - 1)) + from;\r\n            }\r\n            return change / 2 * (-Math.pow(2, -10 * --elapsedMilliseconds) + 2) + from;\r\n        };\r\n\r\n        /**\r\n        * Gets the Exponential EaseIn function.\r\n        */\r\n        public static get EaseIn(): ITweeningFunction {\r\n            return Exponential._easeIn;\r\n        }\r\n\r\n        /**\r\n        * Gets the Exponential EaseOut function.\r\n        */\r\n        public static get EaseOut(): ITweeningFunction {\r\n            return Exponential._easeOut;\r\n        }\r\n\r\n        /**\r\n        * Gets the Exponential EaseInOut function.\r\n        */\r\n        public static get EaseInOut(): ITweeningFunction {\r\n            return Exponential._easeInOut;\r\n        }\r\n    }\r\n\r\n    /**\r\n* Defines an Elastic tweening function collection that has an EaseIn, EaseOut, and EaseInOut function that can be used with Tween's.\r\n*/\r\n    export class Elastic {\r\n        private static _easeIn: ITweeningFunction = (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number => {\r\n            var change = to - from,\r\n                elapsedMilliseconds = elapsed.Milliseconds,\r\n                timePartial,\r\n                timePartialQuarter;\r\n\r\n            if (elapsedMilliseconds === 0) {\r\n                return from;\r\n            }\r\n            if ((elapsedMilliseconds /= duration.Milliseconds) === 1) {\r\n                return from + change;\r\n            }\r\n\r\n            timePartial = duration.Milliseconds * .3;\r\n            timePartialQuarter = timePartial / 4;\r\n\r\n            return -(change * Math.pow(2, 10 * (elapsedMilliseconds -= 1)) * Math.sin((elapsedMilliseconds * duration.Milliseconds - timePartialQuarter) * (2 * Math.PI) / timePartial)) + from;\r\n        };\r\n        private static _easeOut: ITweeningFunction = (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number => {\r\n            var change = to - from,\r\n                elapsedMilliseconds = elapsed.Milliseconds,\r\n                timePartial,\r\n                timePartialQuarter;\r\n\r\n            if (elapsedMilliseconds === 0) {\r\n                return from;\r\n            }\r\n\r\n            if ((elapsedMilliseconds /= duration.Milliseconds) === 1) {\r\n                return from + change;\r\n            }\r\n\r\n            timePartial = duration.Milliseconds * .3;\r\n            timePartialQuarter = timePartial / 4;\r\n\r\n            return (change * Math.pow(2, -10 * elapsedMilliseconds) * Math.sin((elapsedMilliseconds * duration.Milliseconds - timePartialQuarter) * (2 * Math.PI) / timePartial) + change + from);\r\n        };\r\n        private static _easeInOut: ITweeningFunction = (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number => {\r\n            var change = to - from,\r\n                elapsedMilliseconds = elapsed.Milliseconds,\r\n                timePartial,\r\n                timePartialQuarter;\r\n\r\n            if (elapsedMilliseconds === 0) {\r\n                return from;\r\n            }\r\n\r\n            if ((elapsedMilliseconds /= duration.Milliseconds / 2) === 2) {\r\n                return from + change;\r\n            }\r\n\r\n            timePartial = duration.Milliseconds * (.3 * 1.5);\r\n            timePartialQuarter = timePartial / 4;\r\n\r\n            if (elapsedMilliseconds < 1) {\r\n                return -.5 * (change * Math.pow(2, 10 * (elapsedMilliseconds -= 1)) * Math.sin((elapsedMilliseconds * duration.Milliseconds - timePartialQuarter) * (2 * Math.PI) / timePartial)) + from;\r\n            }\r\n            return (change * Math.pow(2, -10 * (elapsedMilliseconds -= 1)) * Math.sin((elapsedMilliseconds * duration.Milliseconds - timePartialQuarter) * (2 * Math.PI) / timePartial) * .5 + change + from);\r\n        };\r\n\r\n        /**\r\n        * Gets the Elastic EaseIn function.\r\n        */\r\n        public static get EaseIn(): ITweeningFunction {\r\n            return Elastic._easeIn;\r\n        }\r\n\r\n        /**\r\n        * Gets the Elastic EaseOut function.\r\n        */\r\n        public static get EaseOut(): ITweeningFunction {\r\n            return Elastic._easeOut;\r\n        }\r\n\r\n        /**\r\n        * Gets the Elastic EaseInOut function.\r\n        */\r\n        public static get EaseInOut(): ITweeningFunction {\r\n            return Elastic._easeInOut;\r\n        }\r\n    }\r\n\r\n    /**\r\n* Defines a Cubic tweening function collection that has an EaseIn, EaseOut, and EaseInOut function that can be used with Tween's.\r\n*/\r\n    export class Cubic {\r\n        private static _easeIn: ITweeningFunction = (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number => {\r\n            var change = to - from,\r\n                elapsedMilliseconds = elapsed.Milliseconds;\r\n\r\n            return change * (elapsedMilliseconds /= duration.Milliseconds) * elapsedMilliseconds * elapsedMilliseconds + from;\r\n        };\r\n        private static _easeOut: ITweeningFunction = (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number => {\r\n            var change = to - from,\r\n                elapsedMilliseconds = elapsed.Milliseconds;\r\n\r\n            return change * ((elapsedMilliseconds = elapsedMilliseconds / duration.Milliseconds - 1) * elapsedMilliseconds * elapsedMilliseconds + 1) + from;\r\n        };\r\n        private static _easeInOut: ITweeningFunction = (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number => {\r\n            var change = to - from,\r\n                elapsedMilliseconds = elapsed.Milliseconds;\r\n\r\n            if ((elapsedMilliseconds /= duration.Milliseconds / 2) < 1) {\r\n                return change / 2 * elapsedMilliseconds * elapsedMilliseconds * elapsedMilliseconds + from;\r\n            }\r\n            return change / 2 * ((elapsedMilliseconds -= 2) * elapsedMilliseconds * elapsedMilliseconds + 2) + from;\r\n        };\r\n\r\n        /**\r\n        * Gets the Cubic EaseIn function.\r\n        */\r\n        public static get EaseIn(): ITweeningFunction {\r\n            return Cubic._easeIn;\r\n        }\r\n\r\n        /**\r\n        * Gets the Cubic EaseOut function.\r\n        */\r\n        public static get EaseOut(): ITweeningFunction {\r\n            return Cubic._easeOut;\r\n        }\r\n\r\n        /**\r\n        * Gets the Cubic EaseInOut function.\r\n        */\r\n        public static get EaseInOut(): ITweeningFunction {\r\n            return Cubic._easeInOut;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n    * Defines a Circular tweening function collection that has an EaseIn, EaseOut, and EaseInOut function that can be used with Tween's.\r\n    */\r\n    export class Circular {\r\n        private static _easeIn: ITweeningFunction = (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number => {\r\n            var change = to - from,\r\n                elapsedMilliseconds = elapsed.Milliseconds;\r\n\r\n            return -change * (Math.sqrt(1 - (elapsedMilliseconds /= duration.Milliseconds) * elapsedMilliseconds) - 1) + from;\r\n        };\r\n        private static _easeOut: ITweeningFunction = (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number => {\r\n            var change = to - from,\r\n                elapsedMilliseconds = elapsed.Milliseconds;\r\n\r\n            return change * Math.sqrt(1 - (elapsedMilliseconds = elapsedMilliseconds / duration.Milliseconds - 1) * elapsedMilliseconds) + from;\r\n        };\r\n        private static _easeInOut: ITweeningFunction = (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number => {\r\n            var change = to - from,\r\n                elapsedMilliseconds = elapsed.Milliseconds;\r\n\r\n            if ((elapsedMilliseconds /= duration.Milliseconds / 2) < 1) {\r\n                return -change / 2 * (Math.sqrt(1 - elapsedMilliseconds * elapsedMilliseconds) - 1) + from;\r\n            }\r\n            return change / 2 * (Math.sqrt(1 - (elapsedMilliseconds -= 2) * elapsedMilliseconds) + 1) + from;\r\n        };\r\n\r\n        /**\r\n        * Gets the Circular EaseIn function.\r\n        */\r\n        public static get EaseIn(): ITweeningFunction {\r\n            return Circular._easeIn;\r\n        }\r\n\r\n        /**\r\n        * Gets the Circular EaseOut function.\r\n        */\r\n        public static get EaseOut(): ITweeningFunction {\r\n            return Circular._easeOut;\r\n        }\r\n\r\n        /**\r\n        * Gets the Circular EaseInOut function.\r\n        */\r\n        public static get EaseInOut(): ITweeningFunction {\r\n            return Circular._easeInOut;\r\n        }\r\n    }\r\n\r\n    /**\r\n* Defines a Bounce tweening function collection that has an EaseIn, EaseOut, and EaseInOut function that can be used with Tween's.\r\n*/\r\n    export class Bounce {\r\n        private static _easeIn: ITweeningFunction = (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number => {\r\n            var change = to - from;\r\n\r\n            return change - Bounce.EaseOut(0, change, duration.Subtract(elapsed), duration) + from;\r\n        };\r\n        private static _easeOut: ITweeningFunction = (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number => {\r\n            var change = to - from,\r\n                elapsedMilliseconds = elapsed.Milliseconds;\r\n\r\n            if ((elapsedMilliseconds /= duration.Milliseconds) < (1 / 2.75)) {\r\n                return change * (7.5625 * elapsedMilliseconds * elapsedMilliseconds) + from;\r\n            }\r\n            else if (elapsedMilliseconds < (2 / 2.75)) {\r\n                return change * (7.5625 * (elapsedMilliseconds -= (1.5 / 2.75)) * elapsedMilliseconds + .75) + from;\r\n            }\r\n            else if (elapsedMilliseconds < (2.5 / 2.75)) {\r\n                return change * (7.5625 * (elapsedMilliseconds -= (2.25 / 2.75)) * elapsedMilliseconds + .9375) + from;\r\n            }\r\n            else {\r\n                return change * (7.5625 * (elapsedMilliseconds -= (2.625 / 2.75)) * elapsedMilliseconds + .984375) + from;\r\n            }\r\n        };\r\n        private static _easeInOut: ITweeningFunction = (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number => {\r\n            var change = to - from;\r\n\r\n            if (elapsed.Milliseconds < duration.Milliseconds / 2) {\r\n                return Bounce.EaseIn(0, change, elapsed.Multiply(2), duration) * 0.5 + from;\r\n            }\r\n            else {\r\n                return Bounce.EaseOut(0, change, elapsed.Multiply(2).Subtract(duration), duration) * .5 + change * 0.5 + from;\r\n            }\r\n        };\r\n\r\n        /**\r\n        * Gets the Bounce EaseIn function.\r\n        */\r\n        public static get EaseIn(): ITweeningFunction {\r\n            return Bounce._easeIn;\r\n        }\r\n\r\n        /**\r\n        * Gets the Bounce EaseOut function.\r\n        */\r\n        public static get EaseOut(): ITweeningFunction {\r\n            return Bounce._easeOut;\r\n        }\r\n\r\n        /**\r\n        * Gets the Bounce EaseInOut function.\r\n        */\r\n        public static get EaseInOut(): ITweeningFunction {\r\n            return Bounce._easeInOut;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n    * Defines a Back tweening function collection that has an EaseIn, EaseOut, and EaseInOut function that can be used with Tween's.\r\n    */\r\n    export class Back {\r\n        private static _easeIn: ITweeningFunction = (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number => {\r\n            var change = to - from,\r\n                elapsedMilliseconds = elapsed.Milliseconds;\r\n\r\n            return change * (elapsedMilliseconds /= duration.Milliseconds) * elapsedMilliseconds * ((1.70158 + 1) * elapsedMilliseconds - 1.70158) + from;\r\n        };\r\n        private static _easeOut: ITweeningFunction = (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number => {\r\n            var change = to - from,\r\n                elapsedMilliseconds = elapsed.Milliseconds;\r\n\r\n            return change * ((elapsedMilliseconds = elapsedMilliseconds / duration.Milliseconds - 1) * elapsedMilliseconds * ((1.70158 + 1) * elapsedMilliseconds + 1.70158) + 1) + from;\r\n        };\r\n        private static _easeInOut: ITweeningFunction = (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number => {\r\n            var change = to - from,\r\n                elapsedMilliseconds = elapsed.Milliseconds,\r\n                constant = 1.70158;\r\n\r\n            if ((elapsedMilliseconds /= duration.Milliseconds / 2) < 1) {\r\n                return change / 2 * (elapsedMilliseconds * elapsedMilliseconds * (((constant *= (1.525)) + 1) * elapsedMilliseconds - constant)) + from;\r\n            }\r\n            return change / 2 * ((elapsedMilliseconds -= 2) * elapsedMilliseconds * (((constant *= (1.525)) + 1) * elapsedMilliseconds + constant) + 2) + from;\r\n        };\r\n\r\n        /**\r\n        * Gets the Back EaseIn function.\r\n        */\r\n        public static get EaseIn(): ITweeningFunction {\r\n            return Back._easeIn;\r\n        }\r\n\r\n        /**\r\n        * Gets the Back EaseOut function.\r\n        */\r\n        public static get EaseOut(): ITweeningFunction {\r\n            return Back._easeOut;\r\n        }\r\n\r\n        /**\r\n        * Gets the Back EaseInOut function.\r\n        */\r\n        public static get EaseInOut(): ITweeningFunction {\r\n            return Back._easeInOut;\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Defines a Sinusoidal tweening function collection that has an EaseIn, EaseOut, and EaseInOut function that can be used with Tween's.\r\n    */\r\n    export class Sinusoidal {\r\n        private static _easeIn: ITweeningFunction = (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number => {\r\n            var change = to - from,\r\n                elapsedMilliseconds = elapsed.Milliseconds;\r\n\r\n            return -change * Math.cos(elapsedMilliseconds / duration.Milliseconds * (Math.PI / 2)) + change + from;\r\n        };\r\n        private static _easeOut: ITweeningFunction = (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number => {\r\n            var change = to - from,\r\n                elapsedMilliseconds = elapsed.Milliseconds;\r\n\r\n            return change * Math.sin(elapsedMilliseconds / duration.Milliseconds * (Math.PI / 2)) + from;\r\n        };\r\n        private static _easeInOut: ITweeningFunction = (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number => {\r\n            var change = to - from,\r\n                elapsedMilliseconds = elapsed.Milliseconds;\r\n\r\n            return -change / 2 * (Math.cos(Math.PI * elapsedMilliseconds / duration.Milliseconds) - 1) + from;\r\n        };\r\n\r\n        /**\r\n        * Gets the Sinusoidal EaseIn function.\r\n        */\r\n        public static get EaseIn(): ITweeningFunction {\r\n            return Sinusoidal._easeIn;\r\n        }\r\n\r\n        /**\r\n        * Gets the Sinusoidal EaseOut function.\r\n        */\r\n        public static get EaseOut(): ITweeningFunction {\r\n            return Sinusoidal._easeOut;\r\n        }\r\n\r\n        /**\r\n        * Gets the Sinusoidal EaseInOut function.\r\n        */\r\n        public static get EaseInOut(): ITweeningFunction {\r\n            return Sinusoidal._easeInOut;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n    * Defines a Quintic tweening function collection that has an EaseIn, EaseOut, and EaseInOut function that can be used with Tween's.\r\n    */\r\n    export class Quintic {\r\n        private static _easeIn: ITweeningFunction = (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number => {\r\n            var change = to - from,\r\n                elapsedMilliseconds = elapsed.Milliseconds;\r\n\r\n            return change * (elapsedMilliseconds /= duration.Milliseconds) * elapsedMilliseconds * elapsedMilliseconds * elapsedMilliseconds * elapsedMilliseconds + from;\r\n        };\r\n        private static _easeOut: ITweeningFunction = (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number => {\r\n            var change = to - from,\r\n                elapsedMilliseconds = elapsed.Milliseconds;\r\n\r\n            return change * ((elapsedMilliseconds = elapsedMilliseconds / duration.Milliseconds - 1) * elapsedMilliseconds * elapsedMilliseconds * elapsedMilliseconds * elapsedMilliseconds + 1) + from;\r\n        };\r\n        private static _easeInOut: ITweeningFunction = (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number => {\r\n            var change = to - from,\r\n                elapsedMilliseconds = elapsed.Milliseconds;\r\n\r\n            if ((elapsedMilliseconds /= duration.Milliseconds / 2) < 1) {\r\n                return change / 2 * elapsedMilliseconds * elapsedMilliseconds * elapsedMilliseconds * elapsedMilliseconds * elapsedMilliseconds + from;\r\n            }\r\n            return change / 2 * ((elapsedMilliseconds -= 2) * elapsedMilliseconds * elapsedMilliseconds * elapsedMilliseconds * elapsedMilliseconds + 2) + from;\r\n        };\r\n\r\n        /**\r\n        * Gets the Quintic EaseIn function.\r\n        */\r\n        public static get EaseIn(): ITweeningFunction {\r\n            return Quintic._easeIn;\r\n        }\r\n\r\n        /**\r\n        * Gets the Quintic EaseOut function.\r\n        */\r\n        public static get EaseOut(): ITweeningFunction {\r\n            return Quintic._easeOut;\r\n        }\r\n\r\n        /**\r\n        * Gets the Quintic EaseInOut function.\r\n        */\r\n        public static get EaseInOut(): ITweeningFunction {\r\n            return Quintic._easeInOut;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n    * Defines a Quartic tweening function collection that has an EaseIn, EaseOut, and EaseInOut function that can be used with Tween's.\r\n    */\r\n    export class Quartic {\r\n        private static _easeIn: ITweeningFunction = (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number => {\r\n            var change = to - from,\r\n                elapsedMilliseconds = elapsed.Milliseconds;\r\n\r\n            return change * (elapsedMilliseconds /= duration.Milliseconds) * elapsedMilliseconds * elapsedMilliseconds * elapsedMilliseconds + from;\r\n        };\r\n        private static _easeOut: ITweeningFunction = (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number => {\r\n            var change = to - from,\r\n                elapsedMilliseconds = elapsed.Milliseconds;\r\n\r\n            return -change * ((elapsedMilliseconds = elapsedMilliseconds / duration.Milliseconds - 1) * elapsedMilliseconds * elapsedMilliseconds * elapsedMilliseconds - 1) + from;\r\n        };\r\n        private static _easeInOut: ITweeningFunction = (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number => {\r\n            var change = to - from,\r\n                elapsedMilliseconds = elapsed.Milliseconds;\r\n\r\n            if ((elapsedMilliseconds /= duration.Milliseconds / 2) < 1) {\r\n                return change / 2 * elapsedMilliseconds * elapsedMilliseconds * elapsedMilliseconds * elapsedMilliseconds + from;\r\n            }\r\n            return -change / 2 * ((elapsedMilliseconds -= 2) * elapsedMilliseconds * elapsedMilliseconds * elapsedMilliseconds - 2) + from;\r\n        };\r\n\r\n        /**\r\n        * Gets the Quartic EaseIn function.\r\n        */\r\n        public static get EaseIn(): ITweeningFunction {\r\n            return Quartic._easeIn;\r\n        }\r\n\r\n        /**\r\n        * Gets the Quartic EaseOut function.\r\n        */\r\n        public static get EaseOut(): ITweeningFunction {\r\n            return Quartic._easeOut;\r\n        }\r\n\r\n        /**\r\n        * Gets the Quartic EaseInOut function.\r\n        */\r\n        public static get EaseInOut(): ITweeningFunction {\r\n            return Quartic._easeInOut;\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Defines a Quadratic tweening function collection that has an EaseIn, EaseOut, and EaseInOut function that can be used with Tween's.\r\n    */\r\n    export class Quadratic {\r\n        private static _easeIn: ITweeningFunction = (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number => {\r\n            var change = to - from,\r\n                elapsedMilliseconds = elapsed.Milliseconds;\r\n\r\n            return change * (elapsedMilliseconds /= duration.Milliseconds) * elapsedMilliseconds + from;\r\n        };\r\n        private static _easeOut: ITweeningFunction = (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number => {\r\n            var change = to - from,\r\n                elapsedMilliseconds = elapsed.Milliseconds;\r\n\r\n            return -change * (elapsedMilliseconds /= duration.Milliseconds) * (elapsedMilliseconds - 2) + from;\r\n        };\r\n        private static _easeInOut: ITweeningFunction = (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number => {\r\n            var change = to - from,\r\n                elapsedMilliseconds = elapsed.Milliseconds;\r\n\r\n            if ((elapsedMilliseconds /= duration.Milliseconds / 2) < 1) {\r\n                return change / 2 * elapsedMilliseconds * elapsedMilliseconds + from;\r\n            }\r\n\r\n            return -change / 2 * ((--elapsedMilliseconds) * (elapsedMilliseconds - 2) - 1) + from;\r\n        };\r\n\r\n        /**\r\n        * Gets the Quadratic EaseIn function.\r\n        */\r\n        public static get EaseIn(): ITweeningFunction {\r\n            return Quadratic._easeIn;\r\n        }\r\n\r\n        /**\r\n        * Gets the Quadratic EaseOut function.\r\n        */\r\n        public static get EaseOut(): ITweeningFunction {\r\n            return Quadratic._easeOut;\r\n        }\r\n\r\n        /**\r\n        * Gets the Quadratic EaseInOut function.\r\n        */\r\n        public static get EaseInOut(): ITweeningFunction {\r\n            return Quadratic._easeInOut;\r\n        }\r\n    }\r\n\r\n    /**\r\n* Defines a Linear tweening function that has an EaseNone function that can be used with Tween's.\r\n*/\r\n    export class Linear {\r\n        private static _easeNone: ITweeningFunction = (from: number, to: number, elapsed: TimeSpan, duration: TimeSpan): number => {\r\n            var change = to - from;\r\n\r\n            return change * elapsed.Milliseconds / duration.Milliseconds + from;\r\n        };\r\n\r\n        /**\r\n        * Gets the Linear EaseNone function.\r\n        */\r\n        public static get EaseNone(): ITweeningFunction {\r\n            return Linear._easeNone;\r\n        }\r\n    }\r\n}","import { Bounds } from \"../Bounds/Bounds\";\r\nimport { IDisposable } from \"../Interfaces/IDisposable\";\r\nimport { Graphics } from \"../Graphics/Graphics\";\r\nimport { Vector2d } from \"../Assets/Vectors/Vector2d\";\r\nimport { Size2d } from \"../Assets/Sizes/Size2d\";\r\nimport { EventHandler1 } from \"../Utilities/EventHandler1\";\r\n\r\nexport module Rendering {\r\n\r\n    /**\r\n* Represents a renderable object that can be drawn to a canvas.\r\n*/\r\n    export interface IRenderable {\r\n        /**\r\n        * Gets or sets the ZIndex property.  The ZIndex is used to control draw order.  Higher ZIndexes appear above lower ZIndexed renderables.\r\n        */\r\n        ZIndex: number;\r\n        /**\r\n        * Gets or sets the Visible property.  The Visible property determines whether the renderable will be drawn to the game screen.\r\n        */\r\n        Visible: boolean;\r\n        /**\r\n        * Draws the renderable to the provided canvas context\r\n        * @param context The canvas context to draw the renderable onto.\r\n        */\r\n        Draw(context: CanvasRenderingContext2D): void;\r\n        /**\r\n        * Returns the bounding area that represents where the renderable will draw.\r\n        */\r\n        GetDrawBounds(): Bounds.Bounds2d;\r\n    }\r\n\r\n    export interface IRenderer extends IDisposable {\r\n        Render(renderables: IRenderable[]): CanvasRenderingContext2D;\r\n    }\r\n\r\n    interface IActorMapping {\r\n        Actor: Graphics.Graphic2d;\r\n        Remove: (graphic: Graphics.Graphic2d) => any;\r\n    }\r\n\r\n    /**\r\n    * Defines a scene object that is used to maintain a list of renderable objects that are rendered onto a joint game area.\r\n    */\r\n    export class Scene2d implements IDisposable {\r\n        private _actors: Graphics.Graphic2d[];\r\n        private _actorMappings: IActorMapping[];\r\n        private _renderer: IRenderer;\r\n        private _onDraw: (context: CanvasRenderingContext2D) => void;\r\n        private _disposed: boolean;\r\n        private _camera: Camera2d;\r\n        private _drawArea: HTMLCanvasElement;\r\n\r\n        /**\r\n        * Creates a new instance of the Scene2d object.  The game canvas is created and appended to the HTML body to fill the screen.\r\n        */\r\n        constructor();\r\n        /**\r\n        * Creates a new instance of the Scene2d object.  The game canvas is created and appended to the HTML body to fill the screen.\r\n        * @param onDraw Callback to execute whenever the Scene's draw is triggered.\r\n        */\r\n        constructor(onDraw: (context: CanvasRenderingContext2D) => void);\r\n        /**\r\n        * Creates a new instance of the Scene2d object.\r\n        * @param onDraw Callback to execute whenever the Scene's draw is triggered.\r\n        * @param drawArea The game canvas to draw onto.\r\n        */\r\n        constructor(onDraw: (context: CanvasRenderingContext2D) => void, drawArea: HTMLCanvasElement);\r\n        constructor(onDraw: (context: CanvasRenderingContext2D) => void = _ => { }, drawArea?: HTMLCanvasElement) {\r\n            this._actorMappings = [];\r\n            this._actors = [];\r\n\r\n            if (typeof drawArea === \"undefined\") {\r\n                drawArea = this.CreateDefaultDrawArea();\r\n            }\r\n\r\n            this._onDraw = onDraw;\r\n\r\n            this._drawArea = drawArea;\r\n            this._camera = new Camera2d(new Vector2d(this._drawArea.width / 2, this._drawArea.height / 2), new Size2d(this._drawArea.width, this._drawArea.height));\r\n            this._renderer = new Camera2dRenderer(this._drawArea, this._camera);\r\n            this._disposed = false;\r\n        }\r\n\r\n        /**\r\n        * Gets the canvas that the Scene2d uses as its game area.\r\n        */\r\n        public get DrawArea(): HTMLCanvasElement {\r\n            return this._drawArea;\r\n        }\r\n\r\n        /**\r\n        * Gets the game camera.\r\n        */\r\n        public get Camera(): Camera2d {\r\n            return this._camera;\r\n        }\r\n\r\n        /**\r\n        * Adds an actor to the scene.  All actors added to the scene have their Draw function called automatically.\r\n        * @param actor The graphic to add to the scene.\r\n        */\r\n        public Add(actor: Graphics.Graphic2d): void {\r\n            var mapping: IActorMapping = {\r\n                Actor: actor,\r\n                Remove: (graphic: Graphics.Graphic2d) => {\r\n                    this.Remove(graphic);\r\n                }\r\n            };\r\n\r\n            actor.OnDisposed.Bind(mapping.Remove);\r\n\r\n            this._actorMappings.push(mapping);\r\n            this._actors.push(actor);\r\n        }\r\n\r\n        /**\r\n        * Removes an actor from the scene.  The actor will no longer have its Draw called.\r\n        * @param actor The graphic to remove from the scene.\r\n        */\r\n        public Remove(actor: Graphics.Graphic2d): void {\r\n            for (var i = 0; i < this._actors.length; i++) {\r\n                if (this._actors[i] === actor) {\r\n                    this._actors[i].OnDisposed.Unbind(this._actorMappings[i].Remove);\r\n                    this._actors.splice(i, 1);\r\n                    this._actorMappings.splice(i, 1);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n        * Draws all actors within the Scene and triggers the Scene2d's onDraw callback.\r\n        */\r\n        public Draw(): void {\r\n            this._onDraw(this._renderer.Render(this._actors));\r\n        }\r\n\r\n        /**\r\n        * Destroys the game canvas and clears the Scene2d's actors.\r\n        */\r\n        public Dispose(): void {\r\n            if (!this._disposed) {\r\n                this._disposed = true;\r\n\r\n                for (var i = 0; i < this._actors.length; i++) {\r\n                    this.Remove(this._actors[i]);\r\n                }\r\n\r\n                this._actors = [];\r\n                this._actorMappings = [];\r\n                this._renderer.Dispose();\r\n            }\r\n            else {\r\n                throw new Error(\"Scene2d cannot be disposed more than once\");\r\n            }\r\n        }\r\n\r\n        private CreateDefaultDrawArea(): HTMLCanvasElement {\r\n            var drawArea = <HTMLCanvasElement>document.createElement(\"canvas\"),\r\n                body: HTMLElement = <HTMLElement>document.getElementsByTagName('body')[0];\r\n\r\n            drawArea.width = document.documentElement.clientWidth;\r\n            drawArea.height = document.documentElement.clientHeight - 5;\r\n\r\n            body.appendChild(drawArea);\r\n            body.style.margin = \"0px\";\r\n            body.style.padding = \"0px\";\r\n\r\n            return drawArea;\r\n        }\r\n    }\r\n\r\n    /**\r\n* Defines a 2d renderer that uses a double buffer to draw graphics.\r\n*/\r\n    export class Renderer2d implements IDisposable, IRenderer {\r\n        public static _zindexSort: (a: IRenderable, b: IRenderable) => number = (a: IRenderable, b: IRenderable) => { return a.ZIndex - b.ZIndex; };\r\n\r\n        public _BufferCanvas: HTMLCanvasElement;\r\n        public _BufferContext: CanvasRenderingContext2D; // Protected\r\n\r\n        // These essentially are used to create a double buffer for rendering\r\n        private _visibleCanvas: HTMLCanvasElement;\r\n        private _visibleContext: CanvasRenderingContext2D;\r\n        private _disposed: boolean;\r\n        private _onRendererSizeChange: EventHandler1<Size2d>;\r\n\r\n        /**\r\n        * Creates a new instance of the Renderer2d object.\r\n        * @param renderOnto The canvas to render onto.\r\n        */\r\n        constructor(renderOnto: HTMLCanvasElement) {\r\n            this._visibleCanvas = renderOnto;\r\n            // @ts-ignore\r\n            this._visibleContext = renderOnto.getContext(\"2d\");\r\n\r\n            // Create an equally sized canvas for a buffer\r\n            this._BufferCanvas = <HTMLCanvasElement>document.createElement(\"canvas\");\r\n            // @ts-ignore\r\n            this._BufferContext = this._BufferCanvas.getContext(\"2d\");\r\n            this._onRendererSizeChange = new EventHandler1<Size2d>();\r\n            this.UpdateBufferSize();\r\n\r\n            this._disposed = false;\r\n        }\r\n\r\n        /**\r\n        * Gets an event that is triggered when the renderOnto canvas changes size.  Functions can be bound or unbound to this event to be executed when the event triggers.\r\n        */\r\n        public get OnRendererSizeChange(): EventHandler1<Size2d> {\r\n            return this._onRendererSizeChange;\r\n        }\r\n\r\n        /**\r\n        * Renders the provided renderables onto the renderOnto canvas.  Returns the canvas that was rendered onto.\r\n        * @param renderables Array of items that are to be rendered, assumes Visible is set to true.\r\n        */\r\n        public Render(renderables: IRenderable[]): CanvasRenderingContext2D {\r\n            // Check if our visible canvas has changed size\r\n            if (this._BufferCanvas.width !== this._visibleCanvas.width || this._BufferCanvas.height !== this._visibleCanvas.height) {\r\n                this.UpdateBufferSize();\r\n            }\r\n\r\n            // Push buffer to screen\r\n            this._visibleContext.clearRect(0, 0, this._visibleCanvas.width, this._visibleCanvas.height);\r\n            this._visibleContext.drawImage(this._BufferCanvas, 0, 0);\r\n            // Clear our buffer to prepare it for new drawings\r\n            this._ClearBuffer();\r\n\r\n            // Sort the renderables by the ZIndex so we draw in the correct order (for layering);\r\n            renderables.sort(Renderer2d._zindexSort);\r\n\r\n            // We do not save or restore the canvas state because we want to let the\r\n            // dev decide how they manipulate the canvas            \r\n\r\n            for (var i = 0; i < renderables.length; i++) {\r\n                renderables[i].Draw(this._BufferContext);\r\n            }\r\n\r\n            return this._BufferContext;\r\n        }\r\n\r\n        /**\r\n        * Destroys the visible canvas.\r\n        */\r\n        public Dispose(): void {\r\n            if (!this._disposed) {\r\n                this._disposed = true;\r\n\r\n                // @ts-ignore\r\n                this._visibleCanvas.parentNode.removeChild(this._visibleCanvas);\r\n                // @ts-ignore\r\n                this._onRendererSizeChange.Dispose();\r\n            }\r\n        }\r\n\r\n        public _ClearBuffer() {\r\n            this._BufferContext.clearRect(0, 0, this._BufferCanvas.width, this._BufferCanvas.height);\r\n        }\r\n\r\n        private UpdateBufferSize() {\r\n            this._BufferCanvas.width = this._visibleCanvas.width;\r\n            this._BufferCanvas.height = this._visibleCanvas.height;\r\n            this.OnRendererSizeChange.Trigger(new Size2d(this._visibleCanvas.width, this._visibleCanvas.height))\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Defines a camera rendering object that when used in conjunction with a Camera2d draws all objects in a camera relative position.\r\n    */\r\n    export class Camera2dRenderer extends Renderer2d {\r\n        private _camera: Camera2d;\r\n        private _contextBuilder: Camera2dCanvasContextBuilder;\r\n\r\n        /**\r\n        * Creates a new instance of the Camera2dRenderer.\r\n        * @param renderOnto The canvas to render onto.\r\n        * @param camera The camera that ultimately decides what is drawn to the renderOnto canvas.\r\n        */\r\n        constructor(renderOnto: HTMLCanvasElement, camera: Camera2d) {\r\n            super(renderOnto);\r\n\r\n            this._camera = camera;\r\n            this._contextBuilder = new Camera2dCanvasContextBuilder(this._camera);\r\n\r\n            this.OnRendererSizeChange.Bind((newSize: Size2d) => {\r\n                this._contextBuilder._UpdateCanvasCenter(newSize);\r\n                this._camera.Size = newSize;\r\n            });\r\n\r\n            this._contextBuilder._UpdateCanvasCenter(new Size2d(renderOnto.width, renderOnto.height));\r\n            this._BufferContext = this._contextBuilder.Build(this._BufferContext);\r\n\r\n        }\r\n\r\n        /**\r\n        * Renders the provided renderables onto the renderOnto canvas.  Returns the canvas that was rendered onto.\r\n        * @param renderables Array of items that are to be rendered. \r\n        */\r\n        public Render(renderables: IRenderable[]): CanvasRenderingContext2D {\r\n            var context,\r\n                inverseScale = this._camera._GetInverseDistanceScale();\r\n\r\n            this._BufferContext.save();\r\n            this._BufferContext.scale(inverseScale, inverseScale)\r\n\r\n            context = super.Render(this.GetOnScreenRenderables(renderables));\r\n\r\n            this._BufferContext.restore();\r\n\r\n            return context;\r\n        }\r\n\r\n        public _ClearBuffer() {\r\n            var cameraScale = this._camera._GetDistanceScale();\r\n            (<any>this._BufferContext).unModifiedClearRect(0, 0, this._BufferCanvas.width * cameraScale, this._BufferCanvas.height * cameraScale);\r\n        }\r\n\r\n        private GetOnScreenRenderables(allRenderables: IRenderable[]): IRenderable[] {\r\n            var onscreen: IRenderable[] = [],\r\n                scale = this._camera._GetDistanceScale(),\r\n                unscale = 1 / scale;\r\n\r\n            // Scale camera size to our zoom level\r\n            this._camera.Scale(scale, scale);\r\n\r\n            for (var i = 0; i < allRenderables.length; i++) {\r\n                if (allRenderables[i].Visible && this._camera.Intersects(allRenderables[i].GetDrawBounds())) {\r\n                    onscreen.push(allRenderables[i]);\r\n                }\r\n            }\r\n\r\n            this._camera.Scale(unscale, unscale);\r\n\r\n            return onscreen;\r\n        }\r\n    }\r\n\r\n    /**\r\n* Defines a builder that is used to build a camera sensitive CanvasRenderingContext2d so that anything drawn to it becomes relative to the Camera2d.\r\n*/\r\n    export class Camera2dCanvasContextBuilder {\r\n        private _camera: Camera2d;\r\n        private _canvasCenter: Vector2d;\r\n        private _translated: boolean;\r\n        private _translationState: any[];\r\n\r\n        /**\r\n        * Creates a new instance of the Camera2dCanvasContextBuilder object.\r\n        * @param camera Camera to link to built CanvasRenderingContext2d's (Cannot change after construction).\r\n        */\r\n        constructor(camera: Camera2d) {\r\n            this._camera = camera;\r\n            this._canvasCenter = this._camera.Position.Clone();\r\n            this._translated = false;\r\n            this._translationState = [];\r\n            this._translationState.push(this._translated);\r\n        }\r\n\r\n        /**\r\n        * Builds a new CanvasRenderingContext2d around the provided context that is linked to the camera.  Anything drawn to the context becomes relative to the camera.\r\n        * @param context The context to build the camera linked context around.\r\n        */\r\n        public Build(context: CanvasRenderingContext2D): CanvasRenderingContext2D {\r\n            var that = this,\r\n                savedCreateRadialGradient = context.createRadialGradient,\r\n                savedTranslate = context.translate,\r\n                savedSave = context.save,\r\n                savedRestore = context.restore,\r\n                savedDrawImage1 = this.BuildPositionReplacer(context.drawImage, 1),\r\n                savedDrawImage2 = this.BuildPositionReplacer(context.drawImage, 5);\r\n\r\n            (<any>context).unModifiedClearRect = context.clearRect;\r\n\r\n            context.arc = this.BuildPositionReplacer(context.arc);\r\n            context.arcTo = this.BuildPositionReplacer(context.arcTo, 0, 4);\r\n            context.bezierCurveTo = this.BuildPositionReplacer(context.bezierCurveTo, 0, 6);\r\n            context.clearRect = this.BuildPositionReplacer(context.clearRect);\r\n            context.createLinearGradient = this.BuildPositionReplacer(context.createLinearGradient, 0, 4);\r\n            context.createRadialGradient = function () {\r\n                var scale = that._camera._GetDistanceScale();\r\n                arguments[0] += -that._camera.Position.X + that._canvasCenter.X * scale;\r\n                arguments[1] += -that._camera.Position.Y + that._canvasCenter.Y * scale;\r\n                arguments[3] += -that._camera.Position.X + that._canvasCenter.X * scale;\r\n                arguments[4] += -that._camera.Position.Y + that._canvasCenter.Y * scale;\r\n\r\n                return savedCreateRadialGradient.apply(this, arguments);\r\n            };\r\n            context.drawImage = function () {\r\n                if (arguments.length <= 5) {\r\n                    savedDrawImage1.apply(this, arguments);\r\n                }\r\n                else {\r\n                    savedDrawImage2.apply(this, arguments);\r\n                }\r\n            };\r\n            context.fillRect = this.BuildPositionReplacer(context.fillRect);\r\n            context.fillText = this.BuildPositionReplacer(context.fillText, 1);\r\n            context.getImageData = this.BuildPositionReplacer(context.getImageData);\r\n            context.isPointInPath = this.BuildPositionReplacer(context.isPointInPath);\r\n            context.lineTo = this.BuildPositionReplacer(context.lineTo);\r\n            context.moveTo = this.BuildPositionReplacer(context.moveTo);\r\n            context.putImageData = this.BuildPositionReplacer(context.putImageData, 1);\r\n            context.quadraticCurveTo = this.BuildPositionReplacer(context.quadraticCurveTo, 0, 4);\r\n            context.rect = this.BuildPositionReplacer(context.rect);\r\n            context.strokeRect = this.BuildPositionReplacer(context.strokeRect);\r\n            context.strokeText = this.BuildPositionReplacer(context.strokeText, 1);\r\n\r\n            context.save = function () {\r\n                that._translationState.push(that._translated);\r\n\r\n                savedSave.call(this);\r\n            };\r\n\r\n            context.restore = function () {\r\n                that._translated = that._translationState.pop();\r\n\r\n                savedRestore.call(this);\r\n            };\r\n\r\n            context.translate = function () {\r\n                var scale;\r\n\r\n                if (!that._translated) {\r\n                    scale = that._camera._GetDistanceScale();\r\n\r\n                    arguments[0] += -that._camera.Position.X + that._canvasCenter.X * scale;\r\n                    arguments[1] += -that._camera.Position.Y + that._canvasCenter.Y * scale;\r\n                }\r\n\r\n                that._translated = true;\r\n\r\n                savedTranslate.apply(this, arguments);\r\n            };\r\n\r\n            return context;\r\n        }\r\n\r\n        public _UpdateCanvasCenter(newSize: Size2d): void {\r\n            this._canvasCenter.X = newSize.Width / 2;\r\n            this._canvasCenter.Y = newSize.Height / 2;\r\n        }\r\n\r\n        private BuildPositionReplacer(replacee: Function, positionArgOffset: number = 0, argCount: number = 2): any {\r\n            var that = this,\r\n                axiList = [\"X\", \"Y\"];\r\n\r\n            return function () {\r\n                var scale: number,\r\n                    axi: string;\r\n\r\n                if (!that._translated) {\r\n                    scale = that._camera._GetDistanceScale();\r\n                    for (var i = 0; i < argCount; i++) {\r\n                        axi = axiList[i % 2];\r\n                        // @ts-ignore\r\n                        arguments[positionArgOffset + i] += -that._camera.Position[axi] + that._canvasCenter[axi] * scale;\r\n                    }\r\n                }\r\n\r\n                // @ts-ignore\r\n                return replacee.apply(this, arguments);\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Defines a camera that is used to define a viewport.  Should be used in conjunction with a Camera2dRenderer to render graphics as if being viewed through a camera.\r\n    */\r\n    export class Camera2d extends Bounds.BoundingRectangle {\r\n        /**\r\n        *  The distance in which the Camera2d will default to and the distance that defines the 100% scale value.\r\n        */\r\n        public static DefaultDistance: number = 1000;\r\n        public _type: string = \"Camera2d\";\r\n\r\n        /**\r\n        * Gets or sets the camera distance.  This represents how far away the Camera is from the game canvas.  0 is directly on top of the canvas while DefaultDistance represents 100% scale.\r\n        */\r\n        public Distance: number;\r\n\r\n        /**\r\n        * Creates a new instance of the Camera2d object.\r\n        * @param position Initial position of the camera.\r\n        * @param size Initial size of the camera.\r\n        */\r\n        constructor(position: Vector2d, size: Size2d) {\r\n            super(position, size);\r\n\r\n            this.Distance = Camera2d.DefaultDistance;\r\n        }\r\n\r\n        /**\r\n        * Converts an absolute position (0 to cameras Size) to a camera relative position.  Most useful when used to convert mouse click coordinates to scene coordinates.\r\n        * @param position The absolute position to convert.  0 position represents the top or left hand side of the camera.\r\n        */\r\n        public ToCameraRelative(position: Vector2d): Vector2d {\r\n            var scaledTopLeft = this.Position.Subtract(this.Size.Multiply(this._GetDistanceScale() * .5));\r\n            return scaledTopLeft.Add(position.Multiply(this._GetDistanceScale()));\r\n        }\r\n\r\n        public _GetInverseDistanceScale(): number {\r\n            return Camera2d.DefaultDistance / this.Distance;\r\n        }\r\n\r\n        public _GetDistanceScale(): number {\r\n            return this.Distance / Camera2d.DefaultDistance;\r\n        }\r\n    }\r\n}","import { EventHandler1 } from \"../Utilities/EventHandler1\";\r\nimport { IDisposable } from \"../Interfaces/IDisposable\";\r\nimport { ICloneable } from \"../Interfaces/ICloneable\";\r\n\r\nexport module Sound {\r\n    /**\r\n* Defines a set of settings that are used to play AudioClip's a custom way.\r\n*/\r\n    export class AudioSettings implements ICloneable {\r\n        /**\r\n        * The default audio settings.\r\n        */\r\n        public static Default: AudioSettings = new AudioSettings();\r\n\r\n        /**\r\n        * Gets or sets the repeat function of the AudioClip.\r\n        */\r\n        public Repeat: boolean;\r\n        /**\r\n        * Gets or sets the volume level of the AudioClip. Value between 0-100.\r\n        */\r\n        public Volume: number;\r\n        /**\r\n        * Gets or sets the auto play functionality of the AudioClip.\r\n        */\r\n        public AutoPlay: boolean;\r\n        /**\r\n        * Gets or sets the preload functionality of the AudioClip.  Values can be \"auto\", \"metadata\", or \"none\".\r\n        */\r\n        public Preload: string;\r\n\r\n        /**\r\n        * Creates a new instance of the AudioSettings object with default values.\r\n        */\r\n        constructor();\r\n        /**\r\n        * Creates a new instance of the AudioSettings object.\r\n        * @param repeat Initial value of the repeat component.\r\n        */\r\n        constructor(repeat: boolean);\r\n        /**\r\n        * Creates a new instance of the AudioSettings object.\r\n        * @param repeat Initial value of the repeat component.\r\n        * @param volume Initial value of the volume component. Value between 0-100.\r\n        */\r\n        constructor(repeat: boolean, volume: number);\r\n        /**\r\n        * Creates a new instance of the AudioSettings object.\r\n        * @param repeat Initial value of the repeat component.\r\n        * @param volume Initial value of the volume component. Value between 0-100.\r\n        * @param autoplay Initial value of the auto play component.\r\n        */\r\n        constructor(repeat: boolean, volume: number, autoplay: boolean);\r\n        /**\r\n        * Creates a new instance of the AudioSettings object.\r\n        * @param repeat Initial value of the repeat component.\r\n        * @param volume Initial value of the volume component. Value between 0-100.\r\n        * @param autoplay Initial value of the auto play component.\r\n        * @param preload Initial value of the preload component.  Values can be \"auto\", \"metadata\", or \"none\".\r\n        */\r\n        constructor(repeat: boolean, volume: number, autoplay: boolean, preload: string);\r\n        constructor(repeat: boolean = false, volume: number = 100, autoplay: boolean = false, preload: string = \"auto\") {\r\n            this.Repeat = repeat;\r\n            this.Volume = volume;\r\n            this.AutoPlay = autoplay;\r\n            this.Preload = preload;\r\n        }\r\n\r\n        /**\r\n        * Returns a new AudioSettings object that is identical to the current AudioSettings object.\r\n        */\r\n        public Clone(): AudioSettings {\r\n            return new AudioSettings(this.Repeat, this.Volume, this.AutoPlay, this.Preload);\r\n        }\r\n    }\r\n\r\n    /**\r\n* Defines an AudioPlayer that is mapped to a specific source.  Ultimately used to play the same sound simultaneously.\r\n*/\r\n    export class AudioPlayer {\r\n        private _source: string[];\r\n\r\n        /**\r\n        * Creates a new instance of the AudioPlayer object.\r\n        * @param source Source path to an audio clip.\r\n        */\r\n        constructor(source: string);\r\n        /**\r\n        * Creates a new instance of the AudioPlayer object.\r\n        * @param source An array of source paths to audio clips.  Pass in multiple audio types of the same clip to ensure cross browser compatibility.\r\n        */\r\n        constructor(source: string[]);\r\n        constructor(source: any) {\r\n            if (!(source instanceof Array)) {\r\n                this._source = [];\r\n                this._source.push(source);\r\n            }\r\n            else {\r\n                this._source = source;\r\n            }\r\n        }\r\n\r\n        /**\r\n        * Builds an AudioClip with the default settings.\r\n        */\r\n        public BuildClip(): AudioClip;\r\n        /**\r\n        * Builds an AudioClip with the provided settings.\r\n        * @param settings Audio settings to play the AudioClip with.\r\n        */\r\n        public BuildClip(settings: AudioSettings): AudioClip;\r\n        public BuildClip(settings: AudioSettings = AudioSettings.Default): AudioClip {\r\n            return new AudioClip(this._source, settings);\r\n        }\r\n\r\n        /**\r\n        * Builds an AudioClip and plays it with the default settings.  Returns the built audio clip.\r\n        */\r\n        public Play(): AudioClip;\r\n        /**\r\n        * Builds an AudioClip and plays it with the provided settings.  Returns the built audio clip.\r\n        * @param settings Audio settings to play the AudioClip with.\r\n        */\r\n        public Play(settings: AudioSettings): AudioClip;\r\n        public Play(settings: AudioSettings = AudioSettings.Default): AudioClip {\r\n            var clip = new AudioClip(this._source, settings);\r\n\r\n            clip.Play();\r\n\r\n            return clip;\r\n        }\r\n    }\r\n\r\n    var supportedAudioTypes = {\r\n        mp3: 'audio/mpeg',\r\n        ogg: 'audio/ogg',\r\n        wav: 'audio/wav',\r\n        aac: 'audio/aac',\r\n        m4a: 'audio/x-m4a'\r\n    };\r\n\r\n    /**\r\n    * Defines a single audio clip that can be played, stopped or paused.\r\n    */\r\n    export class AudioClip implements IDisposable {\r\n        private _audio: HTMLAudioElement;\r\n        private _settings: AudioSettings;\r\n        private _onComplete: EventHandler1<Event>;\r\n        private _canPlayWires: Array<() => void>;\r\n        // @ts-ignore\r\n        private _endedWire: (e: Event) => void;\r\n        private _disposed: boolean;\r\n\r\n        /**\r\n        * Creates a new instance of the AudioClip object.\r\n        * @param source An audio element to use as the source audio clip.\r\n        */\r\n        constructor(source: HTMLAudioElement);\r\n        /**\r\n        * Creates a new instance of the AudioClip object.\r\n        * @param source An array of source paths to audio clips.  Pass in multiple audio types of the same clip to ensure cross browser compatibility.\r\n        */\r\n        constructor(source: string[]);\r\n        /**\r\n        * Creates a new instance of the AudioClip object.\r\n        * @param source Source path to an audio clip.\r\n        */\r\n        constructor(source: string);\r\n        /**\r\n        * Creates a new instance of the AudioClip object.\r\n        * @param source Source path to an audio clip.\r\n        * @param settings Audio clip settings.\r\n        */\r\n        constructor(source: string, settings: AudioSettings);\r\n        /**\r\n        * Creates a new instance of the AudioClip object.\r\n        * @param source An array of source paths to audio clips.  Pass in multiple audio types of the same clip to ensure cross browser compatibility.\r\n        * @param settings Audio clip settings.\r\n        */\r\n        constructor(source: string[], settings: AudioSettings);\r\n        /**\r\n        * Creates a new instance of the AudioClip object.\r\n        * @param source An audio element to use as the source audio clip.\r\n        * @param settings Audio clip settings.\r\n        */\r\n        constructor(source: HTMLAudioElement, settings: AudioSettings);\r\n        constructor(source: any, settings: AudioSettings = AudioSettings.Default) {\r\n            this._disposed = false;\r\n            this._settings = settings.Clone();\r\n            this._canPlayWires = [];\r\n\r\n            if (source instanceof HTMLAudioElement) {\r\n                this._audio = source;\r\n            }\r\n            else {\r\n                this._audio = <HTMLAudioElement>document.createElement(\"audio\");\r\n                this.SetAudioSource(source);\r\n            }\r\n\r\n            this.ApplySettings();\r\n\r\n            this._onComplete = new EventHandler1<Event>();\r\n        }\r\n\r\n        /**\r\n        * Gets an event that is triggered when the audio clip has completed, will not trigger if the audio clip is repeating.  Functions can be bound or unbound to this event to be executed when the event triggers.\r\n        */\r\n        public get OnComplete(): EventHandler1<Event> {\r\n            return this._onComplete;\r\n        }\r\n\r\n        /**\r\n        * Gets or sets the audio clip volume.\r\n        */\r\n        public get Volume(): number {\r\n            return this._settings.Volume;\r\n        }\r\n        public set Volume(percent: number) {\r\n            this._settings.Volume = percent;\r\n            this._audio.volume = Math.max(Math.min(percent / 100, 1), 0);\r\n        }\r\n\r\n        /**\r\n        * Determines if the AudioClip is currently playing.\r\n        */\r\n        public IsPlaying(): boolean {\r\n            return !this._audio.paused;\r\n        }\r\n\r\n        /**\r\n        * Determines if the AudioClip has completed.\r\n        */\r\n        public IsComplete(): boolean {\r\n            return this._audio.ended;\r\n        }\r\n\r\n        /**\r\n        * Plays the current audio clip.\r\n        */\r\n        public Play(): void {\r\n            var wire: () => void;\r\n\r\n            if (this._audio.readyState === <any>0) {\r\n                wire = () => {\r\n                    this._audio.play();\r\n                };\r\n                this._canPlayWires.push(wire);\r\n                this._audio.addEventListener(\"canplay\", wire, true);\r\n            }\r\n            else {\r\n                this._audio.play();\r\n            }\r\n        }\r\n\r\n        /**\r\n        * Pauses the current audio clip.\r\n        */\r\n        public Pause(): void {\r\n            this._audio.pause();\r\n        }\r\n\r\n        /**\r\n        * Seeks the audio clip to the provided time.\r\n        * @param time The time to seek to.\r\n        */\r\n        public Seek(time: number): void {\r\n            var wire: () => void;\r\n\r\n            if (this._audio.readyState === <any>0) {\r\n                wire = () => {\r\n                    this._audio.currentTime = time;\r\n                };\r\n\r\n                this._canPlayWires.push(wire);\r\n\r\n                this._audio.addEventListener(\"canplay\", wire, true);\r\n            }\r\n            else {\r\n                this._audio.currentTime = time;\r\n            }\r\n        }\r\n\r\n        /**\r\n        * Stops the current audio clip and seeks back to time 0.\r\n        */\r\n        public Stop(): void {\r\n            this.Seek(0);\r\n            this._audio.pause();\r\n        }\r\n\r\n        /**\r\n        * Unbinds all events and nulls out the settings and audio component to allow for garbage collection.\r\n        */\r\n        public Dispose(): void {\r\n            if (!this._disposed) {\r\n                this._disposed = true;\r\n\r\n                this._onComplete.Dispose();\r\n                for (var i = 0; i < this._canPlayWires.length; i++) {\r\n                    this._audio.removeEventListener(\"canplay\", this._canPlayWires[i], true);\r\n                }\r\n\r\n                this._audio.removeEventListener(\"ended\", this._endedWire, true);\r\n                // @ts-ignore\r\n                this._audio = null;\r\n                // @ts-ignore\r\n                this._settings = null;\r\n            }\r\n            else {\r\n                throw new Error(\"Cannot dispose AudioClip more than once.\");\r\n            }\r\n        }\r\n\r\n        private SetAudioSource(source: any): void {\r\n            var sourceHolder: HTMLSourceElement,\r\n                sourceType: string;\r\n\r\n            // If we've passed in a list of sources\r\n            if (!(source instanceof Array)) {\r\n                source = [source];\r\n            }\r\n\r\n            for (var i = 0; i < source.length; i++) {\r\n                sourceHolder = <HTMLSourceElement>document.createElement(\"source\");\r\n                sourceHolder.src = source[i];\r\n\r\n                // @ts-ignore\r\n                sourceType = supportedAudioTypes[source[i].split('.').pop()];\r\n\r\n                if (typeof sourceType !== \"undefined\") {\r\n                    sourceHolder.type = sourceType;\r\n                }\r\n\r\n                this._audio.appendChild(sourceHolder);\r\n            }\r\n        }\r\n\r\n        private ApplySettings(): void {\r\n            this._audio.loop = this._settings.Repeat;\r\n            this._audio.autoplay = this._settings.AutoPlay;\r\n            this._audio.preload = this._settings.Preload;\r\n            this.Volume = this._settings.Volume;\r\n\r\n            this._endedWire = (e: Event) => {\r\n                this.OnComplete.Trigger(e);\r\n            };\r\n\r\n            this._audio.addEventListener(\"ended\", this._endedWire, true);\r\n        }\r\n\r\n    }\r\n}","import { Graphics } from \"../Graphics/Graphics\";\r\nimport { Sound } from \"../Sound/Sound\";\r\n\r\nexport module Content {\r\n    /**\r\n    * Defines a content manager that is used to preload AudioClip's and ImageSource's so that they can be used throughout a game.\r\n    */\r\n    export class ContentManager {\r\n        private _images: { [name: string]: Graphics.ImageSource };\r\n        private _audioPlayers: { [name: string]: Sound.AudioPlayer; };\r\n\r\n        /**\r\n        * Creates a new instance of the ContentManager object.\r\n        */\r\n        constructor() {\r\n            this._images = {};\r\n            this._audioPlayers = {};\r\n        }\r\n\r\n        /**\r\n        * Loads the image located at the provided source location as an ImageSource.  Returns the loaded ImageSource.\r\n        * @param name The mapped name for the ImageSource.\r\n        * @param src Source path to the base image.\r\n        */\r\n        public LoadImage(name: string, src: string): Graphics.ImageSource;\r\n        /**\r\n        * Loads the image located at the provided source location as an ImageSource.  Returns the loaded ImageSource.\r\n        * @param name The mapped name for the ImageSource.\r\n        * @param src Source path to the base image.\r\n        * @param width Width of the image source.\r\n        * @param height Height of the image source.\r\n        */\r\n        public LoadImage(name: string, src: string, width: number, height: number): Graphics.ImageSource;\r\n        public LoadImage(name: string, src: string, width?: number, height?: number): Graphics.ImageSource {\r\n            var imageSource: Graphics.ImageSource;\r\n\r\n            if (typeof width === \"undefined\") {\r\n                imageSource = new Graphics.ImageSource(src);\r\n            }\r\n            else {\r\n                imageSource = new Graphics.ImageSource(src, (<number>width), (<number>height));\r\n            }\r\n\r\n            this._images[name] = imageSource;\r\n\r\n            return imageSource.Clone();\r\n        }\r\n\r\n        /**\r\n        * Retrieves an ImageSource designated under the provided name.\r\n        * @param name The mapped name of the ImageSource to retrieve.\r\n        */\r\n        public GetImage(name: string): Graphics.ImageSource {\r\n            if (this._images[name]) {\r\n                return this._images[name].Clone();\r\n            }\r\n            else {\r\n                throw new Error(\"Image with name '\" + name + \"' was not found.\");\r\n            }\r\n        }\r\n\r\n        /**\r\n        * Unload the ImageSource that is mapped to the provided name.\r\n        * @param name The mapped name of the ImageSource to unload.\r\n        */\r\n        public UnloadImage(name: string): boolean {\r\n            if (this._images[name]) {\r\n                delete this._images[name];\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        /**\r\n        * Loads an AudioPlayer for the provided clip info.  Returns the loaded player for easy access.\r\n        * @param name The mapped name for the AudioPlayer.\r\n        * @param src Source path to an audio clip.\r\n        */\r\n        public LoadAudio(name: string, src: string): Sound.AudioPlayer;\r\n        /**\r\n        * Loads an AudioPlayer, returns the AudioPlayer for easy access.\r\n        * @param name The mapped name for the AudioPlayer.\r\n        * @param src An array of source paths to audio clips.  Pass in multiple audio types of the same clip to ensure cross browser compatibility.\r\n        */\r\n        public LoadAudio(name: string, src: string[]): Sound.AudioPlayer;\r\n        public LoadAudio(name: string, src: any): Sound.AudioPlayer {\r\n            this._audioPlayers[name] = new Sound.AudioPlayer(src);\r\n\r\n            return this._audioPlayers[name];\r\n        }\r\n\r\n        /**\r\n        * Retrieves a loaded audio player under the provided name.\r\n        * @param name The mapped name of the AudioPlayer to retrieve.\r\n        */\r\n        public GetAudio(name: string): Sound.AudioPlayer {\r\n            if (this._audioPlayers[name]) {\r\n                return this._audioPlayers[name];\r\n            }\r\n            else {\r\n                throw new Error(\"Audio with name '\" + name + \"' was not found.\");\r\n            }\r\n        }\r\n\r\n        /**\r\n        * Unload the AudioPlayer that is mapped to the provided name.\r\n        * @param name The mapped name of the AudioPlayer to unload.\r\n        */\r\n        public UnloadAudio(name: string): Sound.AudioPlayer {\r\n            var player = this._audioPlayers[name];\r\n\r\n            delete this._audioPlayers[name];\r\n\r\n            return player;\r\n        }\r\n\r\n    }\r\n}","import { ITyped } from \"../Interfaces/ITyped\";\r\nimport { IDisposable } from \"../Interfaces/IDisposable\";\r\n\r\n/**\r\n* Defines a type constrained event handler object that can maintain bound functions which take in a value T, U and V and trigger them on demand.\r\n*/\r\nexport class EventHandler3<T, U, V> implements IDisposable, ITyped {\r\n    public _type: string = \"EventHandler3\";\r\n\r\n    private _actions: Array<(val1: T, val2: U, val3: V) => any>;\r\n\r\n    /**\r\n    * Creates a new instance of the EventHandler3 object.\r\n    */\r\n    constructor() {\r\n        this._actions = [];\r\n    }\r\n\r\n    /**\r\n    * Binds the provided action to the EventHandler3.  Trigger will execute all bound functions.\r\n    * @param action Function to execute on EventHandler3 Trigger.\r\n    */\r\n    public Bind(action: (val1: T, val2: U, val3: V) => any): void {\r\n        this._actions.push(action);\r\n    }\r\n\r\n    /**\r\n    * Binds the provided action to the EventHandler3 for the specified number of triggers.  Once all triggers have been fired the action will unbind itself.  Trigger will execute all bound functions.\r\n    * @param action Function to execute on EventHandler3 Trigger.\r\n    * @param triggerCount Number of triggers to wait before unbinding the action.\r\n    */\r\n    public BindFor(action: (val1: T, val2: U, val3: V) => any, triggerCount: number): void {\r\n        var that = this,\r\n            triggers: number = 0,\r\n            wire: (val1: T, val2: U, val3: V) => any = function () {\r\n                if (++triggers >= triggerCount) {\r\n                    that.Unbind(wire);\r\n                }\r\n\r\n                // @ts-ignore\r\n                action.apply(this, arguments);\r\n            };\r\n\r\n        this._actions.push(wire);\r\n    }\r\n\r\n    /**\r\n    * Unbinds the provided action from the EventHandler3.\r\n    * @param action Function to unbind.  The action will no longer be executed when the EventHandler gets Triggered.\r\n    */\r\n    public Unbind(action: (val1: T, val2: U, val3: V) => any): void {\r\n        for (var i = 0; i < this._actions.length; i++) {\r\n            if (this._actions[i] === action) {\r\n                this._actions.splice(i, 1);\r\n\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Determines if the EventHandler3 has active bindings.\r\n    */\r\n    public HasBindings(): boolean {\r\n        return this._actions.length > 0;\r\n    }\r\n\r\n    /**\r\n    * Executes all bound functions and passes the provided args to each.\r\n    * @param val1 The first argument to pass to the bound functions.\r\n    * @param val2 The second argument to pass to the bound functions.\r\n    * @param val3 The third argument to pass to the bound functions.\r\n    */\r\n    public Trigger(val1: T, val2: U, val3: V): void {\r\n        var actions;\r\n\r\n        if (this.HasBindings()) {\r\n            // Clone array so unbinds happening via triggers do not affect functionality\r\n            actions = this._actions.slice(0);\r\n\r\n            for (var i = 0; i < actions.length; i++) {\r\n                actions[i](val1, val2, val3);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Disposes the event handler and unbinds all bound events.\r\n    */\r\n    public Dispose(): void {\r\n        // Clear the array\r\n        this._actions = [];\r\n    }\r\n}","import { ITyped } from \"./Interfaces/ITyped\";\r\nimport { IUpdateable } from \"./Interfaces/IUpdateable\";\r\nimport { IDisposable } from \"./Interfaces/IDisposable\";\r\nimport { Collision } from \"./Collision/Collision\";\r\nimport { Rendering } from \"./Rendering/Rendering\";\r\nimport { Input } from \"./Input/Input\";\r\nimport { Content } from \"./Content/Content\";\r\nimport { GameTime } from \"./GameTime\";\r\nimport { Size2d } from \"./Assets/Sizes/Size2d\";\r\nimport { GameConfiguration } from \"./GameConfiguration\";\r\nimport { GameRunner, GameRunnerInstance } from \"./GameRunner\"\r\n\r\n/**\r\n* Defines a virtual Game object that is meant to be derived from.  Games contain a multitude of management objects to control every aspect of the game.\r\n*/\r\nexport class Game implements ITyped, IUpdateable, IDisposable {\r\n    public _type: string = \"Game\";\r\n\r\n    /**\r\n    * The games configuration.  Used to modify settings such as the game update rate.\r\n    */\r\n    public Configuration: GameConfiguration;\r\n    /**\r\n    * A collision manager which is used to actively detect collisions between monitored Collidable's.\r\n    */\r\n    public CollisionManager: Collision.CollisionManager;\r\n    /**\r\n    * A scene manager which is used to draw Graphic2d's onto the game screen.\r\n    */\r\n    public Scene: Rendering.Scene2d;\r\n    /**\r\n    * An input manager which is used to monitor mouse and keyboard events.\r\n    */\r\n    public Input: Input.InputManager;\r\n    /**\r\n    * A content manager which is used to load, unload and retrieve images and audio sources.\r\n    */\r\n    public Content: Content.ContentManager;\r\n\r\n    public _ID: number;\r\n\r\n    private static _gameIds: number = 0;\r\n    private _gameTime: GameTime;\r\n    private _updateRequired: boolean;\r\n\r\n    /**\r\n    * Creates a new instance of the Game object.  A default canvas will be created that fills the DOM body.\r\n    */\r\n    constructor();\r\n    /**\r\n    * Creates a new instance of the Game object.\r\n    * @param gameCanvas The canvas to utilize as the game area.\r\n    */\r\n    constructor(gameCanvas: HTMLCanvasElement);\r\n    constructor(gameCanvas?: HTMLCanvasElement) {\r\n        var initialQuadTreeSize: Size2d,\r\n            defaultMinQuadTreeSize: Size2d = Collision.CollisionConfiguration._DefaultMinQuadTreeNodeSize;\r\n\r\n        this._updateRequired = true;\r\n        this._gameTime = new GameTime();\r\n        this._ID = Game._gameIds++;\r\n\r\n        if (gameCanvas) {\r\n            this.Scene = new Rendering.Scene2d(context => {\r\n                this.Draw(context);\r\n            }, gameCanvas);\r\n        }\r\n        else {\r\n            this.Scene = new Rendering.Scene2d(context => {\r\n                this.Draw(context);\r\n            });\r\n        }\r\n\r\n        this.Input = new Input.InputManager(this.Scene.DrawArea);\r\n        this.Content = new Content.ContentManager();\r\n\r\n        initialQuadTreeSize = this.Scene.Camera.Size;\r\n\r\n        if (initialQuadTreeSize.Width % defaultMinQuadTreeSize.Width !== 0) {\r\n            initialQuadTreeSize = new Size2d(initialQuadTreeSize.Width % defaultMinQuadTreeSize.Width + initialQuadTreeSize.Width);\r\n        }\r\n\r\n        this.Configuration = new GameConfiguration(GameRunnerInstance.Register(this), initialQuadTreeSize)\r\n        this.CollisionManager = new Collision.CollisionManager(this.Configuration.CollisionConfiguration);\r\n\r\n        this.Configuration.CollisionConfiguration._OnChange.Bind(() => {\r\n            this.CollisionManager = new Collision.CollisionManager(this.Configuration.CollisionConfiguration);\r\n        });\r\n\r\n        this._PrepareLoadContent();\r\n    }\r\n\r\n    public _PrepareUpdate(): void {\r\n        this._gameTime.Update();\r\n\r\n        this.Update(this._gameTime);\r\n        this.CollisionManager.Update(this._gameTime);\r\n        this._updateRequired = false;\r\n    }\r\n\r\n    public _PrepareLoadContent(): void {\r\n        this.LoadContent();\r\n    }\r\n\r\n    /**\r\n    * Triggered at the start of the game.  All audio sources and images should be loaded in this method.\r\n    */\r\n    public LoadContent(): void {\r\n    }\r\n\r\n    /**\r\n    * Triggered on a regular interval defined by the GameConfiguration.\r\n    * @param gameTime The global game time object.  Used to represent total time running and used to track update interval elapsed speeds.\r\n    */\r\n    public Update(gameTime: GameTime): void {\r\n    }\r\n\r\n    public _PrepareDraw(): void {\r\n        if (this.Configuration.DrawOnlyAfterUpdate && this._updateRequired) {\r\n            return;\r\n        }\r\n\r\n        this.Scene.Draw();\r\n        this._updateRequired = true;\r\n    }\r\n\r\n    /**\r\n    * Triggered as fast as possible.  Determined by the current browsers repaint rate.\r\n    */\r\n    public Draw(context: CanvasRenderingContext2D): void {\r\n        // This is called by the scene\r\n    }\r\n\r\n    /**\r\n    * Removes game canvas and disposes all tracked objects.\r\n    */\r\n    public Dispose(): void {\r\n        this.Scene.Dispose();\r\n        this.CollisionManager.Dispose();\r\n        this.Input.Dispose();\r\n\r\n        GameRunnerInstance.Unregister(this);\r\n    }\r\n}","import { TimeSpan } from \"./Assets/TimeSpan\";\r\nimport { ITyped } from \"./Interfaces/ITyped\";\r\n\r\n/**\r\n* Defines a game time class that is used to manage update timing execution as well as total game time.\r\n*/\r\nexport class GameTime implements ITyped {\r\n    public _type: string = \"GameTime\";\r\n\r\n    // Start date\r\n    private _start: Date;\r\n    private _lastUpdate: Date;\r\n    private _elapsed: TimeSpan;\r\n\r\n    /**\r\n    * Creates a new instance of the GameTime object.\r\n    */\r\n    constructor() {\r\n        this._elapsed = TimeSpan.Zero;\r\n        this._start = this._lastUpdate = new Date();\r\n\r\n        this.Update();\r\n    }\r\n\r\n    /**\r\n    * Gets the elapsed time since the last update.\r\n    */\r\n    public get Elapsed(): TimeSpan {\r\n        return this._elapsed;\r\n    }\r\n\r\n    /**\r\n    * Gets the current date time at the start of the update.\r\n    */\r\n    public get Now(): Date {\r\n        return this._lastUpdate;\r\n    }\r\n\r\n    /**\r\n    * Gets the total amount of time surpassed since construction.\r\n    */\r\n    public get Total(): TimeSpan {\r\n        return TimeSpan.DateSpan(this._start, new Date());\r\n    }\r\n\r\n    /**\r\n    * Updates the game time object.  Causes the gameTime to refresh all its components.\r\n    */\r\n    public Update(): void {\r\n        var now = new Date();\r\n\r\n        this._elapsed = new TimeSpan(now.getTime() - this._lastUpdate.getTime());\r\n        this._lastUpdate = now;\r\n    }\r\n}","import { Collision } from \"./Collision/Collision\";\r\nimport { Size2d } from \"./Assets/Sizes/Size2d\";\r\n\r\n/**\r\n* Defines a GameConfiguration object that is used to represent the current state of a Game object.\r\n*/\r\nexport class GameConfiguration {\r\n    /**\r\n    * Indicates whether the game will only draw after an update.  If there are graphic modifications outside of the game update loop this should be set to 'false' to ensure the latest data is always drawn to the game screen.\r\n    */\r\n    public DrawOnlyAfterUpdate: boolean;\r\n\r\n    private _defaultUpdateRate: number = 65;\r\n    private _updateRateSetter: (updateRate: number) => void;\r\n    private _updateRate: number;\r\n    private _collisionConfiguration: Collision.CollisionConfiguration;\r\n\r\n    /**\r\n    * Creates a new instance of the GameConfiguration object.\r\n    * @param updateRateSetter A function that updates the rate of \"Update\" execution.\r\n    */\r\n    constructor(updateRateSetter: (updateRate: number) => void, initialQuadTreeSize: Size2d) {\r\n        this.DrawOnlyAfterUpdate = true;\r\n\r\n        this._updateRateSetter = updateRateSetter;\r\n        this._updateRate = this.UpdateRate = this._defaultUpdateRate;\r\n        this._collisionConfiguration = new Collision.CollisionConfiguration(initialQuadTreeSize);\r\n    }\r\n\r\n    /**\r\n    * Gets or sets the UpdateRate of the game.  Update rates are represented as X many updates per second.\r\n    */\r\n    public get UpdateRate(): number {\r\n        return this._updateRate;\r\n    }\r\n    public set UpdateRate(updateRate: number) {\r\n        this._updateRate = updateRate;\r\n        this._updateRateSetter(this._updateRate);\r\n    }\r\n\r\n    /**\r\n    * Gets the CollisionConfiguration of the game.  These configurations are used to optimize the collision management performance.\r\n    */\r\n    public get CollisionConfiguration(): Collision.CollisionConfiguration {\r\n        return this._collisionConfiguration;\r\n    }\r\n}","import { Game } from \"./Game\";\r\nimport { ITyped } from \"./Interfaces/ITyped\";\r\nimport { Loopers } from \"./Loopers/Loopers\";\r\n\r\nexport class GameRunner implements ITyped {\r\n    public _type: string = \"GameRunner\";\r\n\r\n    private _updateCallbacks: { [id: number]: Loopers.TimedCallback; };\r\n    private _drawCallbacks: { [id: number]: Loopers.LooperCallback; };\r\n    private _updateLoop: Loopers.Looper | null;\r\n    private _drawLoop: Loopers.RepaintLooper | null;\r\n    private _callbackCount: number;\r\n\r\n    constructor() {\r\n        this._updateCallbacks = <{ [s: number]: Loopers.TimedCallback; }>{};\r\n        this._drawCallbacks = <{ [s: number]: Loopers.LooperCallback; }>{};\r\n        this._updateLoop = null;\r\n        this._drawLoop = null;\r\n        this._callbackCount = 0;\r\n    }\r\n\r\n    public Register(game: Game): (updateRate: number) => void {\r\n        var updateCallback = this.CreateAndCacheUpdateCallback(game);\r\n        var drawCallback = this.CreateAndCacheDrawCallback(game);\r\n\r\n        this._callbackCount++;\r\n\r\n        // Try to start the loop prior to adding our games callback.  This callback may be the first, hence the \"Try\"\r\n        this.TryLoopStart();\r\n\r\n        if (!this._updateLoop || !this._drawLoop) {\r\n            throw new Error(\"Unexpected.\");\r\n        }\r\n\r\n        // Add our callback to the game loop (which is now running), it will now be called on an interval dictated by updateCallback\r\n        this._updateLoop.AddCallback(updateCallback);\r\n        this._drawLoop.AddCallback(drawCallback);\r\n\r\n        // Updating the \"updateRate\" is an essential element to the game configuration.\r\n        // If a game is running slowly we need to be able to slow down the update rate.\r\n        return this.CreateUpdateRateSetter(updateCallback);\r\n    }\r\n\r\n    public Unregister(game: Game): void {\r\n        var updateCallback,\r\n            drawCallback;\r\n\r\n        if (this._updateCallbacks[game._ID]) {\r\n            updateCallback = this._updateCallbacks[game._ID];\r\n            drawCallback = this._drawCallbacks[game._ID];\r\n\r\n            if (!this._updateLoop || !this._drawLoop) {\r\n                throw new Error(\"Unexpected.\");\r\n            }\r\n\r\n            this._updateLoop.RemoveCallback(updateCallback);\r\n            this._drawLoop.RemoveCallback(drawCallback);\r\n            delete this._updateCallbacks[game._ID];\r\n            delete this._drawCallbacks[game._ID];\r\n\r\n            this._callbackCount--\r\n\r\n            this.TryLoopStop();\r\n        }\r\n    }\r\n\r\n    private TryLoopStart(): void {\r\n        if (this._callbackCount === 1) {\r\n            this._updateLoop = new Loopers.Looper();\r\n            this._updateLoop.Start();\r\n            this._drawLoop = new Loopers.RepaintLooper();\r\n            this._drawLoop.Start();\r\n        }\r\n    }\r\n\r\n    private TryLoopStop(): void {\r\n        if (this._callbackCount === 0 && this._updateLoop != null && this._drawLoop != null) {\r\n            this._updateLoop.Dispose();\r\n            this._updateLoop = null;\r\n            this._drawLoop.Dispose();\r\n            this._drawLoop = null;\r\n        }\r\n    }\r\n\r\n    private CreateAndCacheUpdateCallback(game: Game): Loopers.TimedCallback {\r\n        var updateCallback = new Loopers.TimedCallback(0, () => {\r\n            game._PrepareUpdate();\r\n        });\r\n\r\n        this._updateCallbacks[game._ID] = updateCallback;\r\n\r\n        return updateCallback;\r\n    }\r\n\r\n    private CreateAndCacheDrawCallback(game: Game): Loopers.LooperCallback {\r\n        var drawCallback = new Loopers.LooperCallback(() => {\r\n            game._PrepareDraw();\r\n        });\r\n\r\n        this._drawCallbacks[game._ID] = drawCallback;\r\n\r\n        return drawCallback;\r\n    }\r\n\r\n    private CreateUpdateRateSetter(callback: Loopers.TimedCallback): (updateRate: number) => void {\r\n        return (updateRate) => {\r\n            callback.Fps = updateRate;\r\n        };\r\n    }\r\n}\r\n\r\nexport var GameRunnerInstance: GameRunner = new GameRunner();","import { IDisposable } from \"../Interfaces/IDisposable\";\r\nimport { ITyped } from \"../Interfaces/ITyped\";\r\nimport { OnWindowRepaintCompleted } from \"../Extensions/WindowExtensions\";\r\n\r\nexport module Loopers {\r\n    export interface ILooper extends IDisposable, ITyped {\r\n        Start(): void;\r\n        AddCallback(callback: LooperCallback): void;\r\n        RemoveCallback(callback: LooperCallback): void;\r\n    }\r\n\r\n    export class Looper implements ILooper {\r\n        public _type: string = \"Looper\";\r\n\r\n        private _running: boolean;\r\n        private _callbacks: TimedCallback[];\r\n\r\n        constructor() {\r\n            this._running = false;\r\n            this._callbacks = [];\r\n        }\r\n\r\n        public AddCallback(timedCallback: TimedCallback): void {\r\n            this._callbacks.push(timedCallback);\r\n            timedCallback.Active = true;\r\n\r\n            if (this._running) {\r\n                // Let initial call stack unwind before initiating the loop\r\n                window.setTimeout(() => {\r\n                    this.Loop(timedCallback);\r\n                }, 0);\r\n            }\r\n        }\r\n\r\n        public RemoveCallback(timedCallback: TimedCallback): void {\r\n            for (var i = 0; i < this._callbacks.length; i++) {\r\n                if (this._callbacks[i].ID === timedCallback.ID) {\r\n                    window.clearTimeout(timedCallback.TimeoutID);\r\n                    timedCallback.Active = false;\r\n                    this._callbacks.splice(i, 1);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        public Start(): void {\r\n            this._running = true;\r\n\r\n            this.Run();\r\n        }\r\n\r\n        private Run(): void {\r\n            for (var i = 0; i < this._callbacks.length; i++) {\r\n                window.setTimeout(((index) => {\r\n                    return () => {\r\n                        this.Loop(this._callbacks[index]);\r\n                    };\r\n                })(i), 0);\r\n            }\r\n        }\r\n\r\n        private Loop(timedCallback: TimedCallback): void {\r\n            var that = this,\r\n                msTimer = 1000 / timedCallback.Fps;\r\n\r\n            timedCallback.Callback();\r\n\r\n            if (timedCallback.Active) {\r\n                timedCallback.TimeoutID = window.setTimeout(() => {\r\n                    that.Loop(timedCallback);\r\n                }, msTimer);\r\n            }\r\n        }\r\n\r\n        public Dispose(): void {\r\n            // We need to \"remove\" every callback to stop each of their timeouts\r\n            for (var i = this._callbacks.length - 1; i >= 0; i--) {\r\n                this.RemoveCallback(this._callbacks[i]);\r\n            }\r\n\r\n            this._callbacks = [];\r\n            this._running = false;\r\n        }\r\n    }\r\n\r\n    export class LooperCallback implements ITyped {\r\n        public _type: string = \"LooperCallback\";\r\n\r\n        private static _ids: number = 0;\r\n\r\n        constructor(callback: Function) {\r\n            this.Callback = callback;\r\n            this.ID = LooperCallback._ids++;\r\n        }\r\n\r\n        public Callback: Function;\r\n        public ID: number;\r\n    }\r\n\r\n    // This looper uses the request animation frame to run its internal loop\r\n    // The method has been aliased as \"OnRepaintCompleted\" via the WindowExtensions\r\n    export class RepaintLooper implements ILooper {\r\n        public _type: string = \"RepaintLooper\";\r\n\r\n        private _running: boolean;\r\n        private _callbacksModified: boolean;\r\n        private _callbacks: LooperCallback[];\r\n\r\n        constructor() {\r\n            this._running = false;\r\n            this._callbacksModified = false;\r\n            this._callbacks = [];\r\n        }\r\n\r\n        public Start(): void {\r\n            this._running = true;\r\n            this.Run();\r\n        }\r\n\r\n        private Run(): void {\r\n            if (this._running) {\r\n                this._callbacksModified = false;\r\n\r\n                for (var i = 0; i < this._callbacks.length; i++) {\r\n                    this._callbacks[i].Callback();\r\n\r\n                    if (this._callbacksModified) {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // We want to maintain the \"this\" context, also we need to continuously bind\r\n                // the method due to how the underlying native function works\r\n                OnWindowRepaintCompleted(() => {\r\n                    this.Run();\r\n                });\r\n            }\r\n        }\r\n\r\n        public AddCallback(looperCallback: LooperCallback): void {\r\n            // This doesn't necessarily need to be here (it wont do any harm) but in order for\r\n            // consistency sake I'm putting it in\r\n            this._callbacksModified = true;\r\n\r\n            this._callbacks.push(looperCallback);\r\n        }\r\n\r\n        public RemoveCallback(looperCallback: LooperCallback): void {\r\n            for (var i = 0; i < this._callbacks.length; i++) {\r\n                if (this._callbacks[i].ID === looperCallback.ID) {\r\n                    this._callbacksModified = true;\r\n                    this._callbacks.splice(i, 1);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        public Dispose(): void {\r\n            this._callbacksModified = true;\r\n            this._callbacks = [];\r\n            this._running = false;\r\n        }\r\n    }\r\n\r\n    export class TimedCallback extends LooperCallback implements ITyped {\r\n        public _type: string = \"TimedCallback\";\r\n\r\n        constructor(fps: number, callback: Function) {\r\n            super(callback);\r\n\r\n            this.Fps = fps;\r\n            this.TimeoutID = 0;\r\n            this.Active = false;\r\n        }\r\n\r\n        public Fps: number;\r\n        public TimeoutID: number;\r\n        public Active: boolean;\r\n    }\r\n}","export function OnWindowRepaintCompleted(callback: Function): void {\r\n    if (window.requestAnimationFrame) {\r\n        window.requestAnimationFrame((time: number) => callback());\r\n        return;\r\n    }\r\n\r\n    setTimeout(callback, 0);\r\n}","import { ICloneable } from \"../../Interfaces/ICloneable\";\r\nimport { ITyped } from \"../../Interfaces/ITyped\";\r\nimport { Vector2d } from \"../Vectors/Vector2d\";\r\n\r\n/**\r\n* Defines a matrix with 2 columns and 2 rows (2x2).\r\n*/\r\nexport class Matrix2x2 implements ITyped, ICloneable {\r\n    public _type: string = \"Matrix2x2\";\r\n\r\n    /**\r\n    * Gets or sets the matrix values.  Represents the current Matrix2x2 as a multi-dimensional array.\r\n    */\r\n    public Values: number[][];\r\n\r\n    /**\r\n    * Creates a new instance of Matrix2x2 with all rows and columns initialized to 0.\r\n    */\r\n    constructor();\r\n    /**\r\n    * Creates a new instance of Matrix2x2.\r\n    * @param topLeft The row 0 column 0 initial value.\r\n    * @param topRight The row 0 column 1 initial value.\r\n    * @param botLeft The row 1 column 0 initial value.\r\n    * @param botRight The row 1 column 1 initial value.\r\n    */\r\n    constructor(topLeft: number, topRight: number, botLeft: number, botRight: number);\r\n    constructor(topLeft: number = 0, topRight: number = 0, botLeft: number = 0, botRight: number = 0) {\r\n        this.Values = [\r\n            [topLeft, topRight],\r\n            [botLeft, botRight]\r\n        ];\r\n    }\r\n\r\n    /**\r\n    * Creates a Matrix2x2 with all its rows and columns initialized to 0.\r\n    */\r\n    public static get Zero(): Matrix2x2 {\r\n        return new Matrix2x2();\r\n    }\r\n\r\n    /**\r\n    * Returns the identity matrix for a 2x2.\r\n    */\r\n    public static get Identity(): Matrix2x2 {\r\n        return new Matrix2x2(1, 0, 0, 1);\r\n    }\r\n\r\n    /**\r\n    * Executes the action with each row and column item of this Matrix2x2 and modifies their values.\r\n    * @param action The function used to modify each row and column items.\r\n    */\r\n    public Apply(action: (val: number) => number): void {\r\n        this.Values[0][0] = action(this.Values[0][0]);\r\n        this.Values[0][1] = action(this.Values[0][1]);\r\n        this.Values[1][0] = action(this.Values[1][0]);\r\n        this.Values[1][1] = action(this.Values[1][1]);\r\n    }\r\n\r\n    /**\r\n    * Executes the action with each row and column item of this Matrix2x2.\r\n    * @param action The function to pass the row column item to.\r\n    */\r\n    public Trigger(action: (val: number) => void): void {\r\n        action(this.Values[0][0]);\r\n        action(this.Values[0][1]);\r\n        action(this.Values[1][0]);\r\n        action(this.Values[1][1]);\r\n    }\r\n\r\n    /**\r\n    * Returns a Matrix2x2 that is the result of adding the current Matrix2x2 to the provided Matrix2x2.\r\n    * @param val The Matrix2x2 to add.\r\n    */\r\n    public Add(val: Matrix2x2): Matrix2x2;\r\n    /**\r\n    * Returns a Matrix2x2 that is the result of adding the current Matrix2x2 to the provided number.\r\n    * @param val The number to add.\r\n    */\r\n    public Add(val: number): Matrix2x2;\r\n    public Add(val: any): Matrix2x2 {\r\n        if (val._type === \"Matrix2x2\") {\r\n            return new Matrix2x2(this.Values[0][0] + val.Values[0][0], this.Values[0][1] + val.Values[0][1], this.Values[1][0] + val.Values[1][0], this.Values[1][1] + val.Values[1][1]);\r\n        }\r\n        else {\r\n            return new Matrix2x2(this.Values[0][0] + val, this.Values[0][1] + val, this.Values[1][0] + val, this.Values[1][1] + val);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Returns a Matrix2x2 that is the result of multiplying the current Matrix2x2 by the provided Matrix2x2.\r\n    * @param val The Matrix2x2 to multiply.\r\n    */\r\n    public Multiply(val: Matrix2x2): Matrix2x2;\r\n    /**\r\n    * Returns a Matrix2x2 that is the result of multiplying the current Matrix2x2 by the provided number.\r\n    * @param val The number to multiply.\r\n    */\r\n    public Multiply(val: number): Matrix2x2;\r\n    public Multiply(val: any): Matrix2x2 {\r\n        if (val._type === \"Matrix2x2\") {\r\n            return new Matrix2x2(this.Values[0][0] * val.Values[0][0] + this.Values[0][1] * val.Values[1][0],\r\n                this.Values[0][0] * val.Values[0][1] + this.Values[0][1] * val.Values[1][1],\r\n                this.Values[1][0] * val.Values[0][0] + this.Values[1][1] * val.Values[1][0],\r\n                this.Values[1][0] * val.Values[0][1] + this.Values[1][1] * val.Values[1][1]);\r\n        }\r\n        else {\r\n            return new Matrix2x2(this.Values[0][0] * val, this.Values[0][1] * val, this.Values[1][0] * val, this.Values[1][1] * val);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Returns a Matrix2x2 that is the result of subtracting the current Matrix2x2 by the provided Matrix2x2.\r\n    * @param val The Matrix2x2 to subtract.\r\n    */\r\n    public Subtract(val: Matrix2x2): Matrix2x2;\r\n    /**\r\n    * Returns a Matrix2x2 that is the result of subtracting the current Matrix2x2 by the provided number.\r\n    * @param val The number to subtract.\r\n    */\r\n    public Subtract(val: number): Matrix2x2;\r\n    public Subtract(val: any): Matrix2x2 {\r\n        if (val._type === \"Matrix2x2\") {\r\n            return new Matrix2x2(this.Values[0][0] - val.Values[0][0], this.Values[0][1] - val.Values[0][1], this.Values[1][0] - val.Values[1][0], this.Values[1][1] - val.Values[1][1]);\r\n        }\r\n        else {\r\n            return new Matrix2x2(this.Values[0][0] - val, this.Values[0][1] - val, this.Values[1][0] - val, this.Values[1][1] - val);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Returns a Matrix2x2 that is the result of subtracting the current Matrix2x2 from the provided Matrix2x2.\r\n    * @param val The Matrix2x2 to subtract from.\r\n    */\r\n    public SubtractFrom(val: Matrix2x2): Matrix2x2;\r\n    /**\r\n    * Returns a Matrix2x2 that is the result of subtracting the current Matrix2x2 from the provided number.\r\n    * @param val The number to subtract from.\r\n    */\r\n    public SubtractFrom(val: number): Matrix2x2;\r\n    public SubtractFrom(val: any): Matrix2x2 {\r\n        if (val._type === \"Matrix2x2\") {\r\n            return new Matrix2x2(val.Values[0][0] - this.Values[0][0], val.Values[0][1] - this.Values[0][1], val.Values[1][0] - this.Values[1][0], val.Values[1][1] - this.Values[1][1]);\r\n        }\r\n        else {\r\n            return new Matrix2x2(val - this.Values[0][0], val - this.Values[0][1], val - this.Values[1][0], val - this.Values[1][1]);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Returns a Matrix2x2 that is the result of dividing the current Matrix2x2 by the provided Matrix2x2.\r\n    * @param val The Matrix2x2 to divide.\r\n    */\r\n    public Divide(val: Matrix2x2): Matrix2x2;\r\n    /**\r\n    * Returns a Matrix2x2 that is the result of dividing the current Matrix2x2 by the provided number.\r\n    * @param val The number to divide.\r\n    */\r\n    public Divide(val: number): Matrix2x2;\r\n    public Divide(val: any): Matrix2x2 {\r\n        if (val._type === \"Matrix2x2\") {\r\n            return new Matrix2x2(this.Values[0][0] / val.Values[0][0], this.Values[0][1] / val.Values[0][1], this.Values[1][0] / val.Values[1][0], this.Values[1][1] / val.Values[1][1]);\r\n        }\r\n        else {\r\n            return new Matrix2x2(this.Values[0][0] / val, this.Values[0][1] / val, this.Values[1][0] / val, this.Values[1][1] / val);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Returns a Matrix2x2 that is the result of dividing the current Matrix2x2 from the provided Matrix2x2.\r\n    * @param val The Matrix2x2 to divide from.\r\n    */\r\n    public DivideFrom(val: Matrix2x2): Matrix2x2;\r\n    /**\r\n    * Returns a Matrix2x2 that is the result of dividing the current Matrix2x2 from the provided number.\r\n    * @param val The number to divide from.\r\n    */\r\n    public DivideFrom(val: number): Matrix2x2;\r\n    public DivideFrom(val: any): Matrix2x2 {\r\n        if (val._type === \"Matrix2x2\") {\r\n            return new Matrix2x2(val.Values[0][0] / this.Values[0][0], val.Values[0][1] / this.Values[0][1], val.Values[1][0] / this.Values[1][0], val.Values[1][1] / this.Values[1][1]);\r\n        }\r\n        else {\r\n            return new Matrix2x2(val / this.Values[0][0], val / this.Values[0][1], val / this.Values[1][0], val / this.Values[1][1]);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Returns a Vector2d that has been transformed by the current Matrix2x2.\r\n    * @param vector The vector to transform.\r\n    */\r\n    public Transform(vector: Vector2d): Vector2d {\r\n        return new Vector2d(this.Values[0][0] * vector.X + this.Values[0][1] * vector.Y, this.Values[1][0] * vector.X + this.Values[1][1] * vector.Y);\r\n    }\r\n\r\n    /**\r\n    * Returns the transpose of the current Matrix2x2.\r\n    */\r\n    public Transpose(): Matrix2x2 {\r\n        return new Matrix2x2(this.Values[0][0], this.Values[1][0], this.Values[0][1], this.Values[1][1]);\r\n    }\r\n\r\n    /**\r\n    * Returns the determinant of the current Matrix2x2.\r\n    */\r\n    public Determinant(): number {\r\n        return this.Values[0][0] * this.Values[1][1] - this.Values[0][1] * this.Values[1][0];\r\n    }\r\n\r\n    /**\r\n    * Returns the inverse of the current Matrix2x2.\r\n    */\r\n    public Inverse(): Matrix2x2 {\r\n        return new Matrix2x2(this.Values[1][1], -this.Values[0][1], -this.Values[1][0], this.Values[0][0]).Multiply(1 / this.Determinant());\r\n    }\r\n\r\n    /**\r\n    * Returns a Matrix2x2 that has identical rows and columns as the current Matrix2x2.\r\n    */\r\n    public Clone(): Matrix2x2 {\r\n        return new Matrix2x2(this.Values[0][0], this.Values[0][1], this.Values[1][0], this.Values[1][1]);\r\n    }\r\n\r\n    /**\r\n    * Determines whether this Matrix2x2 has the same row and column values as the provided Matrix2x2.\r\n    * @param matrix The Matrix2x2 to compare the current Matrix2x2 to.\r\n    */\r\n    public Equivalent(matrix: Matrix2x2): boolean {\r\n        return this.Values[0][0] === matrix.Values[0][0] && this.Values[0][1] === matrix.Values[0][1] && this.Values[1][0] === matrix.Values[1][0] && this.Values[1][1] === matrix.Values[1][1];\r\n    }\r\n\r\n    /**\r\n    * Overridden toString method to display Matrix2x2 in easy to read format: \"[topLeft, topRight] [botLeft, botRight]\"\r\n    */\r\n    public toString(): string {\r\n        return this.Values[0].toString() + \" \" + this.Values[1].toString();\r\n    }\r\n\r\n    /**\r\n    * Creates a scaling matrix based off the provided Vector2d.\r\n    * @param vector The vector used to determine the X and Y scaling values.\r\n    */\r\n    public static Scale(vector: Vector2d): Matrix2x2 {\r\n        return new Matrix2x2(vector.X, 0, 0, vector.Y);\r\n    }\r\n}\r\n","import * as eg from \"../../../endgate/endgate\";\r\nimport { IBulletConfiguration, IGameConfiguration, IShipConfiguration, IMapConfiguration, IScreenConfiguration, ILeaderboardConfiguration, IHealthPackConfiguration, IAbilityConfiguration, IShipMovementControllerConfiguration, IConfigurationManager } from \"../Server/IConfigurationDefinitions\";\r\nimport { Ship } from \"../Ships/Ship\";\r\nimport { ShipMovementController } from \"../Ships/ShipMovementController\";\r\nimport { ShipFireController } from \"../Ships/ShipFireController\";\r\nimport { ShipLifeController } from \"../Ships/ShipLifeController\";\r\nimport { Boost } from \"../Ships/Abilities/Boost\";\r\nimport { Map } from \"../Space/Map\";\r\nimport { GameScreen } from \"../GameScreen\";\r\nimport { Bullet } from \"../Bullets/Bullet\";\r\nimport { HealthPack } from \"../Powerups/HealthPack\";\r\nimport { LeaderboardManager } from \"../HUD/LeaderboardManager\";\r\nimport { DeathScreen } from \"../HUD/DeathScreen\";\r\nimport { LatencyResolver } from \"../User/LatencyResolver\";\r\n\r\nexport class ConfigurationManager {\r\n    public bulletConfig: IBulletConfiguration | undefined;\r\n    public gameConfig: IGameConfiguration | undefined;\r\n    public shipConfig: IShipConfiguration | undefined;\r\n    public mapConfig: IMapConfiguration | undefined;\r\n    public screenConfig: IScreenConfiguration | undefined;\r\n    public leaderboardConfig: ILeaderboardConfiguration | undefined;\r\n    public healthPackConfig: IHealthPackConfiguration | undefined;\r\n    public abilityConfig: IAbilityConfiguration | undefined;\r\n    public shipMovementControllerConfig: IShipMovementControllerConfiguration | undefined;\r\n\r\n    constructor(configuration: IConfigurationManager) {\r\n        // Update the prototypes from the config\r\n        Ship.SIZE = new eg.Size2d(configuration.shipConfig.WIDTH, configuration.shipConfig.HEIGHT);\r\n        Ship.DAMAGE_INCREASE_RATE = configuration.shipConfig.DAMAGE_INCREASE_RATE;\r\n\r\n        ShipFireController.MIN_FIRE_RATE = eg.TimeSpan.FromMilliseconds(configuration.shipConfig.MIN_FIRE_RATE);\r\n\r\n        ShipMovementController.DRAG_AREA = configuration.shipMovementControllerConfig.DRAG_AREA;\r\n        ShipMovementController.DRAG_COEFFICIENT = configuration.shipMovementControllerConfig.DRAG_COEFFICIENT;\r\n        ShipMovementController.ENGINE_POWER = configuration.shipMovementControllerConfig.ENGINE_POWER;\r\n        ShipMovementController.MASS = configuration.shipMovementControllerConfig.MASS;\r\n        ShipMovementController.ROTATE_SPEED = configuration.shipMovementControllerConfig.ROTATE_SPEED * .0174532925; // Convert to radians\r\n\r\n        ShipLifeController.START_LIFE = configuration.shipConfig.START_LIFE;\r\n\r\n        Boost.DURATION = eg.TimeSpan.FromMilliseconds(configuration.abilityConfig.BOOST_DURATION);\r\n        Boost.SPEED_INCREASE = configuration.abilityConfig.BOOST_SPEED_INCREASE;\r\n\r\n        Map.SIZE = new eg.Size2d(configuration.mapConfig.WIDTH, configuration.mapConfig.HEIGHT);\r\n        Map.BARRIER_DEPRECATION = configuration.mapConfig.BARRIER_DEPRECATION;\r\n\r\n        GameScreen.MAX_SCREEN_HEIGHT = configuration.screenConfig.MAX_SCREEN_HEIGHT;\r\n        GameScreen.MAX_SCREEN_WIDTH = configuration.screenConfig.MAX_SCREEN_WIDTH;\r\n        GameScreen.MIN_SCREEN_HEIGHT = configuration.screenConfig.MIN_SCREEN_HEIGHT;\r\n        GameScreen.MIN_SCREEN_WIDTH = configuration.screenConfig.MIN_SCREEN_WIDTH;\r\n        GameScreen.SCREEN_BUFFER_AREA = configuration.screenConfig.SCREEN_BUFFER_AREA;\r\n\r\n        Bullet.BULLET_DIE_AFTER = eg.TimeSpan.FromMilliseconds(configuration.gameConfig.BULLET_DIE_AFTER);\r\n        Bullet.SIZE = new eg.Size2d(configuration.bulletConfig.WIDTH, configuration.bulletConfig.HEIGHT);\r\n\r\n        HealthPack.SIZE = new eg.Size2d(configuration.healthPackConfig.WIDTH, configuration.healthPackConfig.HEIGHT);\r\n        HealthPack.LIFE_SPAN = eg.TimeSpan.FromMilliseconds(configuration.healthPackConfig.LIFE_SPAN);\r\n\r\n        LeaderboardManager.LEADERBOARD_SIZE = configuration.leaderboardConfig.LEADERBOARD_SIZE;\r\n\r\n        DeathScreen.RESPAWN_TIMER = eg.TimeSpan.FromSeconds(configuration.gameConfig.RESPAWN_TIMER);\r\n\r\n        $.extend(this, configuration);\r\n        LatencyResolver.REQUEST_PING_EVERY = configuration.gameConfig.REQUEST_PING_EVERY;\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\nimport { IShipData } from \"../Server/IPayloadDefinitions\";\r\nimport { ShipGraphic } from \"./Graphics/ShipGraphic\";\r\nimport { ShipMovementController } from \"./ShipMovementController\";\r\nimport { ShipAbilityHandler } from \"./Abilities/AbilityHandlers/ShipAbilityHandler\";\r\nimport { ShipAnimationHandler } from \"./Animations/ShipAnimationHandler\";\r\nimport { ShipLifeController } from \"./ShipLifeController\";\r\nimport { ShipLevelManager } from \"./Levels/ShipLevelManager\";\r\n\r\nexport class Ship extends eg.Collision.Collidable {\r\n    public static SIZE: eg.Size2d = new eg.Size2d(75);\r\n    public static DAMAGE_INCREASE_RATE: number = .1;\r\n\r\n    public ID: number;\r\n    public Graphic: ShipGraphic;\r\n    public MovementController: ShipMovementController;\r\n    public AbilityHandler: ShipAbilityHandler;\r\n    public AnimationHandler: ShipAnimationHandler;\r\n    public LifeController: ShipLifeController;\r\n    public LevelManager: ShipLevelManager;\r\n\r\n    private _destroyed: boolean;\r\n\r\n    constructor(payload: IShipData, contentManager: eg.Content.ContentManager) {\r\n        super();\r\n        this._destroyed = false;\r\n        this.OnExplosion = new eg.EventHandler();\r\n\r\n        this.ID = -1;\r\n\r\n        this.LifeController = new ShipLifeController(payload);\r\n        this.LevelManager = new ShipLevelManager(payload);\r\n\r\n        this.Graphic = new ShipGraphic(payload.Name, !!payload.UserControlled, this.LevelManager, this.LifeController, payload.MovementController.Position, payload.MovementController.Rotation, Ship.SIZE, contentManager);\r\n\r\n        // Going to use the rectangle to \"hold\" all the other graphics\r\n        this.Bounds = this.Graphic.GetDrawBounds();\r\n\r\n        this.MovementController = new ShipMovementController(new Array<eg.IMoveable>(this.Bounds, this.Graphic));\r\n        this.MovementController.UserControlled = !!payload.UserControlled;\r\n\r\n        this.AbilityHandler = new ShipAbilityHandler(this);\r\n        this.AnimationHandler = new ShipAnimationHandler(this, contentManager);\r\n\r\n        this.LoadPayload(payload, true);\r\n\r\n        this.Graphic.RotateShip(this.MovementController.Rotation);\r\n    }\r\n\r\n    public OnExplosion: eg.EventHandler;\r\n\r\n    public Update(gameTime: eg.GameTime): void {\r\n        this.AbilityHandler.Update(gameTime);\r\n        this.MovementController.Update(gameTime);\r\n        this.AnimationHandler.Update(gameTime);\r\n\r\n        // Updates rotation\r\n        this.Graphic.RotateShip(this.MovementController.Rotation);\r\n        this.Graphic.Update(gameTime);\r\n    }\r\n\r\n    public LoadPayload(payload: IShipData, forceMovement?: boolean): void {\r\n        this.ID = payload.ID;\r\n        this.MovementController.LoadPayload(payload.MovementController, forceMovement);\r\n        this.LifeController.LoadPayload(payload);\r\n        this.LevelManager.LoadPayload(payload);\r\n        this.AbilityHandler.LoadPayload(payload.Abilities);\r\n    }\r\n\r\n    public Destroy(explode: boolean = false): void {\r\n        if (!this._destroyed) {\r\n            this._destroyed = true;\r\n\r\n            this.MovementController.Dispose();\r\n\r\n            if (!explode) {\r\n                this.Graphic.Dispose();\r\n                this.Dispose();\r\n            } else {\r\n                // We rely on the completion of the explosion to finish disposing the bounds and graphic\r\n                this.OnExplosion.Trigger();\r\n            }\r\n        }\r\n    }\r\n}","import * as eg from \"../../../../endgate/endgate\";\r\nimport { ShipBodyGraphic } from \"./ShipBodyGraphic\";\r\nimport { ShipDamageGraphic } from \"./ShipDamageGraphic\";\r\nimport { ShipLifeGraphic } from \"./ShipLifeGraphic\";\r\nimport { ShipStatusTextGraphic } from \"./ShipStatusTextGraphic\";\r\nimport { ShipNameGraphic } from \"./ShipNameGraphic\";\r\nimport { ShipLevelManager } from \"../Levels/ShipLevelManager\";\r\nimport { ShipLifeController } from \"../ShipLifeController\";\r\n\r\nexport class ShipGraphic extends eg.Graphics.Rectangle {\r\n    public Body: ShipBodyGraphic;\r\n    private _damageGraphic: ShipDamageGraphic;\r\n    private _lifeBar: ShipLifeGraphic | undefined;\r\n    private _statusGraphic: ShipStatusTextGraphic;\r\n    private _nameGraphic: ShipNameGraphic | undefined;\r\n\r\n    constructor(name: string, userControlled: boolean, levelManager: ShipLevelManager, lifeController: ShipLifeController, position: eg.Vector2d, rotation: number, size: eg.Size2d, contentManager: eg.Content.ContentManager) {\r\n        // The Graphic color is transparent because all graphics that represent a ship will be added as a child.\r\n        super(position.X, position.Y, size.Width, size.Height, eg.Graphics.Color.Transparent);            \r\n\r\n        this.Body = new ShipBodyGraphic(levelManager);\r\n        this.RotateShip(rotation);\r\n        this._damageGraphic = new ShipDamageGraphic(lifeController, contentManager);\r\n        this._statusGraphic = new ShipStatusTextGraphic(levelManager, lifeController);\r\n\r\n        this.AddChild(this.Body);\r\n        this.AddChild(this._statusGraphic);\r\n        this.Body.AddChild(this._damageGraphic);\r\n\r\n        if (!userControlled) {\r\n            this._lifeBar = new ShipLifeGraphic(lifeController);\r\n            this._nameGraphic = new ShipNameGraphic(name);\r\n\r\n            this.AddChild(this._lifeBar);\r\n            this.AddChild(this._nameGraphic);\r\n        }\r\n    }\r\n\r\n    public Status(text: string, size: number, color: eg.Graphics.Color, fadeDuration?: eg.TimeSpan, reverseDirection?: boolean): void {\r\n        this._statusGraphic.Status(text, size, color, fadeDuration, reverseDirection);\r\n    }\r\n\r\n    public AddChildToShip(child: eg.Graphics.Graphic2d): void {\r\n        this.Body.AddChild(child);\r\n    }\r\n\r\n    public RotateShip(newRotation: number): void {\r\n        this.Body.Rotation = newRotation;\r\n    }\r\n\r\n    public HideShip(): void {\r\n        if (this._lifeBar) {\r\n            this._lifeBar.Visible = false;\r\n\r\n            if (this._nameGraphic) {\r\n                this._nameGraphic.Visible = false;\r\n            }\r\n        }\r\n\r\n        this.Body.Visible = false;\r\n    }\r\n\r\n    public Update(gameTime: eg.GameTime): void {\r\n        this._statusGraphic.Update(gameTime);\r\n    }\r\n}","import * as eg from \"../../../../endgate/endgate\";\r\nimport { ShipLevelManager } from \"../Levels/ShipLevelManager\";\r\n\r\nexport class ShipBodyGraphic extends eg.Graphics.Sprite2d {\r\n    private static _bodyGraphics: Array<eg.Graphics.ImageSource>;\r\n\r\n    constructor(levelManager: ShipLevelManager) {\r\n        super(0, 0, ShipBodyGraphic._bodyGraphics[Math.min(levelManager.Level, 13)]);\r\n\r\n        levelManager.OnLevelChange.Bind((newLevel: number) => {\r\n            this.Image = this.DetermineBody(levelManager);\r\n        });\r\n    }\r\n\r\n    private DetermineBody(levelManager: ShipLevelManager): eg.Graphics.ImageSource {\r\n        return ShipBodyGraphic._bodyGraphics[Math.min(levelManager.Level, 13)];\r\n    }\r\n\r\n    // Made as a static so we don't have to construct the ship bodies every time a new ship is created.\r\n    public static LoadShipBodies(contentManager: eg.Content.ContentManager): void {\r\n        ShipBodyGraphic._bodyGraphics = new Array<eg.Graphics.ImageSource>();\r\n\r\n        ShipBodyGraphic._bodyGraphics[1] = ShipBodyGraphic._bodyGraphics[2] = contentManager.GetImage(\"Ship1\");\r\n        ShipBodyGraphic._bodyGraphics[3] = ShipBodyGraphic._bodyGraphics[4] = contentManager.GetImage(\"Ship3\");\r\n        ShipBodyGraphic._bodyGraphics[5] = ShipBodyGraphic._bodyGraphics[6] = contentManager.GetImage(\"Ship5\");\r\n        ShipBodyGraphic._bodyGraphics[7] = contentManager.GetImage(\"Ship7\");\r\n        ShipBodyGraphic._bodyGraphics[8] = contentManager.GetImage(\"Ship8\");\r\n        ShipBodyGraphic._bodyGraphics[9] = contentManager.GetImage(\"Ship9\");\r\n        ShipBodyGraphic._bodyGraphics[10] = ShipBodyGraphic._bodyGraphics[11] = contentManager.GetImage(\"Ship10\");\r\n        ShipBodyGraphic._bodyGraphics[12] = contentManager.GetImage(\"Ship12\");\r\n        ShipBodyGraphic._bodyGraphics[13] = contentManager.GetImage(\"Ship10\");\r\n    }\r\n}","import * as eg from \"../../../../endgate/endgate\";\r\nimport { ShipLifeController } from \"../ShipLifeController\";\r\nimport { Ship } from \"../Ship\";\r\n\r\nexport class ShipDamageGraphic extends eg.Graphics.Rectangle {\r\n    private static DAMAGE_TIERS: Array<number> = [1, 3, 5, 7];\r\n\r\n    private _damageTiers: Array<eg.Graphics.Sprite2d>;\r\n\r\n    constructor(lifeController: ShipLifeController, contentManager: eg.Content.ContentManager) {\r\n        var damageTier: number;\r\n\r\n        super(0, 0, Ship.SIZE.Width, Ship.SIZE.Height, eg.Graphics.Color.Transparent);\r\n\r\n        this._damageTiers = new Array<eg.Graphics.Sprite2d>();\r\n\r\n        for (var i = 0; i < ShipDamageGraphic.DAMAGE_TIERS.length; i++) {\r\n            damageTier = ShipDamageGraphic.DAMAGE_TIERS[i];\r\n\r\n            this._damageTiers[damageTier] = new eg.Graphics.Sprite2d(0, 0, contentManager.GetImage(\"ShipDamage\" + damageTier));\r\n            this._damageTiers[damageTier].ZIndex = i;\r\n            this._damageTiers[damageTier].Visible = false;\r\n            this.AddChild(this._damageTiers[damageTier]);\r\n        }\r\n\r\n        lifeController.OnLifeChange.Bind((currentHealth: number, maxHealth: number) => {\r\n            var damageImage: number = Math.floor((1 - currentHealth / maxHealth) * 10) - 2,\r\n                damageTier: number;\r\n\r\n            if (damageImage > 0) {                    \r\n                for (var i = 0; i < ShipDamageGraphic.DAMAGE_TIERS.length; i++) {\r\n                    damageTier = ShipDamageGraphic.DAMAGE_TIERS[i];\r\n\r\n                    if (damageTier <= damageImage) {\r\n                        this._damageTiers[damageTier].Visible = true;\r\n                    } else {\r\n                        this._damageTiers[damageTier].Visible = false;\r\n                    }\r\n                }\r\n            }\r\n            else { // Not enough damage, turn all damage images off\r\n                for (var i = 0; i < ShipDamageGraphic.DAMAGE_TIERS.length; i++) {\r\n                    damageTier = ShipDamageGraphic.DAMAGE_TIERS[i];\r\n\r\n                    this._damageTiers[damageTier].Visible = false;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public Update(gameTime: eg.GameTime): void {\r\n\r\n    }\r\n}","import * as eg from \"../../../../endgate/endgate\";\r\nimport { ShipLifeController } from \"../ShipLifeController\";\r\nimport { Ship } from \"../Ship\";\r\n\r\nexport class ShipLifeGraphic extends eg.Graphics.Rectangle {\r\n    public static BACKGROUND_COLOR: eg.Graphics.Color = eg.Graphics.Color.FromHex(\"7F767D\");\r\n    public static BORDER_COLOR: eg.Graphics.Color = eg.Graphics.Color.Black;\r\n    public static Y_OFFSET: number = 15;\r\n    public static SHIP_WIDTH_PARTIAL: number = .8;\r\n    public static HEIGHT: number = 5;\r\n\r\n    private _overlay: eg.Graphics.Rectangle;\r\n    private _lifeController: ShipLifeController;\r\n\r\n    constructor(lifeController: ShipLifeController) {\r\n        var width = Ship.SIZE.Width * ShipLifeGraphic.SHIP_WIDTH_PARTIAL;\r\n\r\n        super(0, Ship.SIZE.HalfHeight + ShipLifeGraphic.Y_OFFSET, width, ShipLifeGraphic.HEIGHT, ShipLifeGraphic.BACKGROUND_COLOR);\r\n\r\n        this._lifeController = lifeController;\r\n\r\n        this.Border(1, ShipLifeGraphic.BORDER_COLOR);\r\n\r\n        this._overlay = new eg.Graphics.Rectangle(0, 0, width, ShipLifeGraphic.HEIGHT, this.OverlayColor());\r\n\r\n        this._lifeController.OnLifeChange.Bind((health: number, maxHealth: number) => {\r\n            this.UpdateGraphic(health, maxHealth);\r\n        });\r\n\r\n        this.UpdateGraphic(lifeController.Health, lifeController.MaxHealth);\r\n\r\n        this.AddChild(this._overlay);\r\n    }\r\n\r\n    private UpdateGraphic(health: number, maxHealth: number): void {\r\n        var healthPercentage: number = health / maxHealth;\r\n\r\n        this._overlay.Color = this.OverlayColor();\r\n        this._overlay.Size.Width = healthPercentage * (this.Size.Width);\r\n        this._overlay.Position.X = -(this.Size.Width - this._overlay.Size.Width) * .5;\r\n    }\r\n\r\n    private OverlayColor(): eg.Graphics.Color {\r\n        var healthPercentage: number = this._lifeController.HealthPercent;\r\n\r\n        if (healthPercentage <= ShipLifeController.BAD_THRESHOLD) {\r\n            return ShipLifeController.BAD_COLOR;\r\n        } else if (healthPercentage <= ShipLifeController.HURT_THRESHOLD) {\r\n            return ShipLifeController.HURT_COLOR;\r\n        } else {\r\n            return ShipLifeController.GOOD_COLOR;\r\n        }\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\nimport { LifeController } from \"../Common/LifeController\";\r\nimport { IShipData } from \"../Server/IPayloadDefinitions\";\r\n\r\nexport class ShipLifeController extends LifeController {\r\n    public static START_LIFE: number = 100;\r\n    public static BAD_COLOR: eg.Graphics.Color = eg.Graphics.Color.FromHex(\"#ED1E79\");\r\n    public static HURT_COLOR: eg.Graphics.Color = eg.Graphics.Color.FromHex(\"#FF931E\");\r\n    public static GOOD_COLOR: eg.Graphics.Color = eg.Graphics.Color.FromHex(\"#7AC943\");\r\n    public static BAD_THRESHOLD: number = .3;\r\n    public static HURT_THRESHOLD: number = .6;\r\n\r\n    constructor(payload: IShipData) {\r\n        super(payload.LifeController.Health, payload.MaxLife);\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\nimport { IShipData } from \"../Server/IPayloadDefinitions\";\r\n\r\nexport class LifeController {\r\n    public Alive: boolean;\r\n    public Health: number;\r\n    public MaxHealth: number;\r\n\r\n    constructor(health: number, maxHealth: number) {\r\n        this.Alive = true;\r\n        this.Health = health;\r\n        this.MaxHealth = maxHealth;\r\n        this.OnLifeChange = new eg.EventHandler2<number, number>();\r\n    }\r\n\r\n    public OnLifeChange: eg.EventHandler2<number, number>;\r\n\r\n    public get HealthPercent(): number {\r\n        return this.Health / this.MaxHealth;\r\n    }\r\n\r\n    public LoadPayload(payload: IShipData): void {\r\n        this.Alive = payload.LifeController.Alive;\r\n        if (this.Health !== payload.LifeController.Health || this.MaxHealth !== payload.MaxLife) {\r\n            this.Health = payload.LifeController.Health;\r\n            this.MaxHealth = payload.MaxLife;\r\n\r\n            this.OnLifeChange.Trigger(this.Health, this.MaxHealth);\r\n        }\r\n    }\r\n}","import * as eg from \"../../../../endgate/endgate\";\r\nimport { StatusText } from \"./StatusText\";\r\nimport { ShipLevelManager } from \"../Levels/ShipLevelManager\";\r\nimport { ShipLifeController } from \"../ShipLifeController\";\r\n\r\nexport class ShipStatusTextGraphic extends eg.Graphics.Circle {\r\n    public static HEALTH_INCREASE_COLOR: eg.Graphics.Color = eg.Graphics.Color.FromRGB(122, 201, 67);\r\n    public static HEALTH_DECREASE_COLOR: eg.Graphics.Color = eg.Graphics.Color.FromRGB(237, 30, 121);\r\n    public static EXPERIENCE_CHANGE_COLOR: eg.Graphics.Color = eg.Graphics.Color.FromRGB(250, 182, 250);\r\n    public static HEALTH_INCREASE_SIZE: number = 40;\r\n    public static HEALTH_DECREASE_SIZE: number = 30;\r\n    public static EXPERIENCE_INCREASE_SIZE: number = 40;\r\n    public static EXPERIENCE_DECREASE_SIZE: number = 40;\r\n    public static EXPERIENCE_FADE_DURATION: eg.TimeSpan = eg.TimeSpan.FromSeconds(3);\r\n\r\n    private static _statusRemoval: (id: number, statuses: { [id: number]: StatusText }) => void = (id: number, statuses: { [id: number]: StatusText }) => {\r\n        statuses[id].Dispose();\r\n        delete statuses[id];\r\n    };\r\n\r\n    private _statuses: { [id: number]: StatusText };\r\n    private _statusIds: number;\r\n    private _lastHealth: number;\r\n    private _lastLevel: number;\r\n    private _lastExperience: number;\r\n    private _lastExperienceToNextLevel: number;\r\n\r\n    constructor(levelManager: ShipLevelManager, lifeController: ShipLifeController) {\r\n        super(0, 0, 0, eg.Graphics.Color.Transparent);\r\n\r\n        this._statusIds = 0;\r\n        this._statuses = {};\r\n\r\n        this._lastHealth = lifeController.Health;\r\n        this._lastLevel = levelManager.Level;\r\n        this._lastExperience = levelManager.Experience;\r\n        this._lastExperienceToNextLevel = levelManager.ExperienceToNextLevel;\r\n\r\n        lifeController.OnLifeChange.Bind((health: number, maxHealth: number) => {\r\n            var diff = health - this._lastHealth;\r\n\r\n            if (levelManager.Level === this._lastLevel && diff !== 0) {\r\n                if (diff < 0) {\r\n                    this.Status(diff.toString(), ShipStatusTextGraphic.HEALTH_DECREASE_SIZE, ShipStatusTextGraphic.HEALTH_DECREASE_COLOR);\r\n                } else {\r\n                    this.Status(\"+\" + diff.toString(), ShipStatusTextGraphic.HEALTH_INCREASE_SIZE, ShipStatusTextGraphic.HEALTH_INCREASE_COLOR);\r\n                }\r\n\r\n                this._lastHealth = health;\r\n            }\r\n        });\r\n\r\n        levelManager.OnExperienceChange.Bind((experience) => {\r\n            if (typeof this._lastExperience === \"undefined\") {\r\n                this._lastExperience = experience;\r\n                this._lastExperienceToNextLevel = levelManager.ExperienceToNextLevel;\r\n            } else {\r\n                var experienceChange: number = experience - this._lastExperience;;\r\n\r\n                if (levelManager.Level !== this._lastLevel) {\r\n                    experienceChange += this._lastExperienceToNextLevel;\r\n                    this._lastLevel = levelManager.Level;\r\n                }\r\n\r\n                if (experienceChange < 0) {\r\n                    this.Status(experienceChange.toString() + \" xp\", ShipStatusTextGraphic.EXPERIENCE_DECREASE_SIZE, ShipStatusTextGraphic.EXPERIENCE_CHANGE_COLOR, ShipStatusTextGraphic.EXPERIENCE_FADE_DURATION, true);\r\n                } else {\r\n                    this.Status(\"+\" + experienceChange.toString() + \" xp\", ShipStatusTextGraphic.EXPERIENCE_INCREASE_SIZE, ShipStatusTextGraphic.EXPERIENCE_CHANGE_COLOR, ShipStatusTextGraphic.EXPERIENCE_FADE_DURATION, true);\r\n                }\r\n\r\n                this._lastExperience = experience;\r\n                this._lastExperienceToNextLevel = levelManager.ExperienceToNextLevel;\r\n            }\r\n        });\r\n    }\r\n\r\n    public Status(text: string, size: number, color: eg.Graphics.Color, fadeDuration?: eg.TimeSpan, reverseDirection?: boolean): void {\r\n        var status: StatusText = new StatusText(text, size, color, fadeDuration, reverseDirection),\r\n            id: number = this._statusIds++;\r\n\r\n        status.OnDisposed.Bind((status) => {\r\n            status.Dispose();\r\n            delete this._statuses[id];\r\n        });\r\n\r\n        this._statuses[id] = status;\r\n        this.AddChild(status);\r\n    }\r\n\r\n    public Update(gameTime: eg.GameTime): void {\r\n        for (var id in this._statuses) {\r\n            this._statuses[id].Update(gameTime);\r\n        }\r\n    }\r\n\r\n    public Dispose(): void {\r\n    }\r\n}","import * as eg from \"../../../../endgate/endgate\";\r\n\r\nexport class StatusText extends eg.Graphics.Text2d {\r\n    public static MOVE_Y_RANGE: eg.Particles.Range<number> = new eg.Particles.Range<number>(-50, -200);\r\n    public static MOVE_X_RANGE: eg.Particles.Range<number> = new eg.Particles.Range<number>(-50, 50);\r\n    public static DEFAULT_FADE_DURATION: eg.TimeSpan = eg.TimeSpan.FromSeconds(1);\r\n\r\n    private _movementTween: eg.Tweening.Vector2dTween;\r\n    private _fadeTween: eg.Tweening.NumberTween;\r\n    private _active: boolean;\r\n\r\n    constructor(text: string, size: number, color: eg.Graphics.Color, fadeDuration: eg.TimeSpan = StatusText.DEFAULT_FADE_DURATION, reverseDirection: boolean = false) {\r\n        super(0, 0, text, color);\r\n\r\n        var directionMultipler = reverseDirection ? -1 : 1;\r\n\r\n        this.FontSettings.FontSize = size + \"px\";\r\n        this.FontSettings.FontFamily = eg.Graphics.FontFamily.Verdana;\r\n        this.FontSettings.FontWeight = \"bold\";\r\n\r\n        this._movementTween = new eg.Tweening.Vector2dTween(this.Position, new eg.Vector2d(directionMultipler * eg.Particles.Range.RandomNumber(StatusText.MOVE_X_RANGE), directionMultipler * eg.Particles.Range.RandomNumber(StatusText.MOVE_Y_RANGE)), fadeDuration, eg.TweeningFunctions.Cubic.EaseOut);\r\n        this._fadeTween = new eg.Tweening.NumberTween(100, 0, fadeDuration, eg.TweeningFunctions.Cubic.EaseOut);\r\n        this._active = false;\r\n\r\n        this._movementTween.OnChange.Bind((newPosition: eg.Vector2d) => {\r\n            this.Position = newPosition;\r\n        });\r\n\r\n        this._fadeTween.OnChange.Bind((fade: number) => {\r\n            this.Opacity = fade / 100;\r\n        });\r\n\r\n        this._movementTween.OnComplete.Bind((movementTween: eg.Tweening.Vector2dTween) => {\r\n            this.Dispose();\r\n        });\r\n\r\n        this._movementTween.Play();\r\n        this._fadeTween.Play();\r\n    }\r\n\r\n    public Update(gameTime: eg.GameTime): void {\r\n        this._movementTween.Update(gameTime);\r\n        this._fadeTween.Update(gameTime);\r\n    }\r\n\r\n    public Dispose(): void {\r\n        if (!this._active) {\r\n            this._active = true;\r\n\r\n            this._movementTween.Dispose();\r\n            this._fadeTween.Dispose();\r\n\r\n            super.Dispose();\r\n        }\r\n    }\r\n}","import * as eg from \"../../../../endgate/endgate\";\r\nimport { Ship } from \"../Ship\";\r\n\r\nexport class ShipNameGraphic extends eg.Graphics.Text2d {\r\n    public static FONT_SIZE: string = \"15px\";\r\n    public static Y_OFFSET: number = 33;\r\n    public static NAME_COLOR: eg.Graphics.Color = eg.Graphics.Color.White;\r\n\r\n    constructor(name: string) {\r\n        super(0, Ship.SIZE.HalfHeight + ShipNameGraphic.Y_OFFSET, name, ShipNameGraphic.NAME_COLOR);\r\n\r\n        this.FontSettings.FontSize = ShipNameGraphic.FONT_SIZE;\r\n        this.FontSettings.FontFamily = eg.Graphics.FontFamily.Arial;\r\n        this.FontSettings.FontWeight = \"bold\";\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\nimport { IMoving } from \"./IMoving\";\r\nimport { ShipInterpolationManager } from \"./ShipInterpolationManager\";\r\nimport { IShipMovementControllerData } from \"../Server/IPayloadDefinitions\";\r\n\r\nexport class ShipMovementController extends eg.MovementControllers.MovementController {\r\n    public static MASS: number = 50;\r\n    public static ENGINE_POWER: number = 110000;\r\n    public static DRAG_AREA: number = 5;\r\n    public static DRAG_COEFFICIENT: number = .2;\r\n    public static ROTATE_SPEED: number = Math.PI;\r\n    public static MOVING_DIRECTIONS: string[] = [\"RotatingLeft\", \"RotatingRight\", \"Forward\", \"Backward\"];        \r\n\r\n    public Moving: IMoving;\r\n    public Mass: number;\r\n    public Power: number;\r\n    public Forces: eg.Vector2d;\r\n    public Controllable: boolean;\r\n    public UserControlled: boolean;\r\n    private _acceleration: eg.Vector2d;        \r\n    private _trackedMoveables: Array<eg.IMoveable>;\r\n    private _interpolationManager: ShipInterpolationManager;\r\n\r\n    constructor(movables: Array<eg.IMoveable>) {\r\n        super(movables);\r\n\r\n        this._trackedMoveables = movables;\r\n\r\n        this.Mass = ShipMovementController.MASS;\r\n        this.Power = ShipMovementController.ENGINE_POWER;\r\n        this.Forces = eg.Vector2d.Zero;\r\n        this.Controllable = true;\r\n        this._acceleration = eg.Vector2d.Zero;\r\n        this.UserControlled = true;\r\n\r\n        this.Moving = {\r\n            Forward: false,\r\n            Backward: false,\r\n            RotatingLeft: false,\r\n            RotatingRight: false\r\n        };\r\n\r\n        this._interpolationManager = new ShipInterpolationManager(this);\r\n\r\n        this.OnMove = new eg.EventHandler1<eg.MovementControllers.IMoveEvent>();\r\n    }\r\n\r\n    public OnMove: eg.EventHandler1<eg.MovementControllers.IMoveEvent>;\r\n\r\n    public LoadPayload(payload: IShipMovementControllerData, forceMovement?: boolean): void {\r\n        if (!forceMovement) {\r\n            this._interpolationManager.LoadPayload(payload);\r\n        } else {\r\n            this.Position = payload.Position;\r\n            this.Rotation = payload.Rotation;\r\n        }\r\n\r\n        if (!this.UserControlled || forceMovement) {\r\n            this.Mass = payload.Mass;\r\n            this.Forces = payload.Forces;\r\n            this.Velocity = payload.Velocity;\r\n            this.Moving = payload.Moving;\r\n        }\r\n    }\r\n\r\n    public IsMovingInDirection(direction: string): boolean {\r\n        // @ts-ignore\r\n        return this.Moving[direction] || false;\r\n    }\r\n\r\n    public StartMoving(direction: string): void {\r\n        this.Move(direction, true);\r\n    }\r\n\r\n    public StopMoving(direction: string): void {\r\n        this.Move(direction, false);\r\n    }\r\n\r\n    public StopAllMovement(): void {\r\n        for (var i = ShipMovementController.MOVING_DIRECTIONS.length - 1; i >= 0; i--) {\r\n            // @ts-ignore\r\n            this.Moving[ShipMovementController.MOVING_DIRECTIONS[i]] = false;\r\n        }\r\n    }\r\n\r\n    public ApplyForce(force: eg.Vector2d): void {\r\n        this.Forces = this.Forces.Add(force);\r\n    }\r\n\r\n    public Update(gameTime: eg.GameTime): void {\r\n        var rotationIncrementor: number,\r\n            direction: eg.Vector2d = new eg.Vector2d(Math.cos(this.Rotation), Math.sin(this.Rotation)),\r\n            dragForce: eg.Vector2d,\r\n            velocityLength: number;\r\n\r\n        this._interpolationManager.Update(gameTime);\r\n\r\n        if (!this._interpolationManager.Interpolating) {\r\n            this._acceleration = this.Forces.Divide(this.Mass);\r\n\r\n            this.Position = this.Position.Add(this.Velocity.Multiply(gameTime.Elapsed.Seconds).Add(this._acceleration.Multiply(gameTime.Elapsed.Seconds * gameTime.Elapsed.Seconds)));\r\n            this.Velocity = this.Velocity.Add(this._acceleration.Multiply(gameTime.Elapsed.Seconds));\r\n            velocityLength = this.Velocity.Length();\r\n\r\n            // Stop moving if the \"speed\" is less than 10\r\n            if (velocityLength < 10) {\r\n                this.Velocity = eg.Vector2d.Zero;\r\n            } else if (velocityLength > 3000) // Hack\r\n            {\r\n                this.Velocity = direction.Multiply(600);\r\n            }\r\n\r\n            this._acceleration = eg.Vector2d.Zero;\r\n            this.Forces = eg.Vector2d.Zero;\r\n\r\n            dragForce = this.Velocity.Multiply(.5).Multiply(this.Velocity.Abs()).Multiply(ShipMovementController.DRAG_COEFFICIENT * ShipMovementController.DRAG_AREA * -1);\r\n\r\n            if (this.Moving.Forward) {\r\n                this.ApplyForce(direction.Multiply(this.Power));\r\n            }\r\n            if (this.Moving.Backward) {\r\n                this.ApplyForce(direction.Multiply(this.Power * -1));\r\n            }\r\n\r\n            this.ApplyForce(dragForce);\r\n\r\n            rotationIncrementor = gameTime.Elapsed.Seconds * ShipMovementController.ROTATE_SPEED;\r\n\r\n            if (this.Moving.RotatingLeft) {\r\n                this.Rotation -= rotationIncrementor;\r\n            }\r\n            if (this.Moving.RotatingRight) {\r\n                this.Rotation += rotationIncrementor;\r\n            }                \r\n        }\r\n\r\n        for (var i = 0; i < this._trackedMoveables.length; i++) {\r\n            this._trackedMoveables[i].Position = this.Position;\r\n        }\r\n    }\r\n\r\n    public Move(direction: string, startMoving: boolean): void {\r\n        if (this.Controllable) {\r\n            // @ts-ignore\r\n            if (typeof this.Moving[direction] !== \"undefined\") {\r\n                // @ts-ignore\r\n                this.Moving[direction] = startMoving;\r\n                this.OnMove.Trigger(<eg.MovementControllers.IMoveEvent>{\r\n                    Direction: direction,\r\n                    StartMoving: startMoving\r\n                });\r\n            }\r\n            else {\r\n                throw new Error(direction + \" is an unknown direction.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    public Dispose(): void {\r\n        // Make all active functions no-op\r\n        this.Update = () => { };\r\n        this.LoadPayload = () => { };\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\nimport { IShipMovementControllerData } from \"../Server/IPayloadDefinitions\";\r\nimport { ShipMovementController } from \"./ShipMovementController\";\r\nimport { Game } from \"../Game\";\r\n\r\nexport class ShipInterpolationManager implements eg.IUpdateable {\r\n    // Buffer X payloads\r\n    public static PAYLOAD_BUFFER: number = 2;\r\n\r\n    public Interpolating: boolean;\r\n\r\n    private _positionInterpolation: eg.Tweening.Vector2dTween;\r\n    private _rotationInterpolation: eg.Tweening.NumberTween;\r\n    private _interpolationDuration: eg.TimeSpan;\r\n    private _payloadBuffer: Array<IShipMovementControllerData>;\r\n\r\n    constructor(private _movementController: ShipMovementController) {\r\n        if (Game.GameConfiguration.gameConfig) {\r\n            this._interpolationDuration = eg.TimeSpan.FromMilliseconds(Game.GameConfiguration.gameConfig.DRAW_INTERVAL * 2);\r\n        }\r\n        else {\r\n            this._interpolationDuration = eg.TimeSpan.FromMilliseconds(60);\r\n        }\r\n\r\n        this.Interpolating = false;\r\n\r\n        this._positionInterpolation = new eg.Tweening.Vector2dTween(eg.Vector2d.Zero, eg.Vector2d.Zero, this._interpolationDuration, eg.TweeningFunctions.Linear.EaseNone);\r\n        this._rotationInterpolation = new eg.Tweening.NumberTween(0, 0, this._interpolationDuration, eg.TweeningFunctions.Linear.EaseNone);\r\n\r\n        this._positionInterpolation.OnChange.Bind((newPosition: eg.Vector2d) => {\r\n            this._movementController.Position = newPosition;\r\n        });\r\n        this._rotationInterpolation.OnChange.Bind((newRotation: number) => {\r\n            this._movementController.Rotation = newRotation;\r\n        });\r\n        this._rotationInterpolation.OnComplete.Bind((rotationTween: eg.Tweening.NumberTween) => {\r\n            this.Interpolating = false;\r\n            this.Interpolate();\r\n        });\r\n\r\n        this._payloadBuffer = new Array<IShipMovementControllerData>();\r\n    }\r\n\r\n    public LoadPayload(payload: IShipMovementControllerData): void {\r\n        if (!this._movementController.UserControlled) {\r\n            this.BufferPayload(payload);\r\n\r\n            this.Interpolate();\r\n        }\r\n    }\r\n\r\n    public Update(gameTime: eg.GameTime): void {\r\n        this._positionInterpolation.Update(gameTime);\r\n        this._rotationInterpolation.Update(gameTime);\r\n    }\r\n\r\n    private BufferPayload(payload: IShipMovementControllerData): void {\r\n        if (this._payloadBuffer.length === ShipInterpolationManager.PAYLOAD_BUFFER) {\r\n            this._payloadBuffer.pop();\r\n        }\r\n\r\n        this._payloadBuffer.push(payload);\r\n    }\r\n\r\n    private StartInterpolationPayload(payload: IShipMovementControllerData | undefined): void {\r\n        if (!payload) {\r\n            return;\r\n        }\r\n        \r\n        this._positionInterpolation.From = this._movementController.Position;\r\n        this._positionInterpolation.To = payload.Position;\r\n        this._rotationInterpolation.From = this._movementController.Rotation;\r\n        this._rotationInterpolation.To = payload.Rotation;\r\n\r\n        // console.log(\"Interpolating \" + this._positionInterpolation.From.Distance(this._positionInterpolation.To) + \" pixels over \" + this._positionInterpolation.Duration.Milliseconds + \" ms.\");\r\n        // console.log(\"Interpolating \" + Math.abs(this._rotationInterpolation.From - this._rotationInterpolation.To) * 57.2957795  + \" degrees over \" + this._rotationInterpolation.Duration.Milliseconds + \" ms.\");\r\n\r\n        this._positionInterpolation.Restart();\r\n        this._rotationInterpolation.Restart();\r\n\r\n        this.Interpolating = true;\r\n    }\r\n\r\n    private Interpolate(): void {\r\n        if (this._payloadBuffer.length > 0) {\r\n            this.StartInterpolationPayload(this._payloadBuffer.shift());\r\n        }\r\n    }\r\n}","import * as eg from \"../../../../../endgate/endgate\";\r\nimport { AbilityHandler } from \"./AbilityHandler\";\r\nimport { Boost } from \"../Boost\";\r\nimport { MapBoundary } from \"../../../Space/MapBoundary\";\r\nimport { IAbilityData } from \"../../../Server/IPayloadDefinitions\";\r\nimport { Ship } from \"../../Ship\";\r\n\r\nexport class ShipAbilityHandler extends AbilityHandler {\r\n    public Boost: Boost;\r\n\r\n    constructor(myShip: Ship) {\r\n        var boost: Boost = new Boost(myShip.MovementController);\r\n        super([boost]);\r\n\r\n        this.Boost = boost;\r\n\r\n        myShip.OnCollision.Bind((data: eg.Collision.CollisionData) => {\r\n            if (data.With instanceof MapBoundary) {\r\n                this.Boost.Deactivate();\r\n            }\r\n        });\r\n    }\r\n\r\n    public LoadPayload(payload: IAbilityData): void {\r\n        if (payload.Boost && !this.Boost.Active) {\r\n            this.Boost.Activate();\r\n        } else if (!payload.Boost) {\r\n            this.Boost.Deactivate();\r\n        }\r\n    }\r\n}","import * as eg from \"../../../../../endgate/endgate\";\r\n\r\nimport { Ability } from \"../Ability\";\r\n\r\nexport class AbilityHandler {\r\n    private _abilityList: { [s: string]: Ability; } = {};\r\n\r\n    constructor(aList: Array<Ability>) {\r\n        for (var i = aList.length - 1; i >= 0; i--) {\r\n            this._abilityList[aList[i].Name] = aList[i];\r\n        }\r\n    }\r\n\r\n    public Abilities(): { [s: string]: Ability; } {\r\n        return this._abilityList;\r\n    }\r\n\r\n    public Ability(abilityName: string): Ability {\r\n        return this._abilityList[abilityName];\r\n    }\r\n\r\n    public AddAbility(ability: Ability): void {\r\n        this._abilityList[ability.Name] = ability;\r\n    }\r\n\r\n    public Activate(abilityName: string): boolean {\r\n        if (this._abilityList[abilityName]) {\r\n            this._abilityList[abilityName].Activate();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public Deactivate(abilityName: string): boolean {\r\n        if (this._abilityList[abilityName] && this._abilityList[abilityName].Active) {\r\n            this._abilityList[abilityName].Deactivate();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public UpdateAbilities(aList: any): void {\r\n        for (var abilityName in aList) {\r\n            var dataActive = aList[abilityName],\r\n                myActive = this._abilityList[abilityName].Active;\r\n\r\n            if (dataActive && !myActive) {\r\n                this.Activate(abilityName);\r\n            }\r\n            else if (!dataActive && myActive) {\r\n                this.Deactivate(abilityName);\r\n            }\r\n        }\r\n    }\r\n\r\n    public Update(gameTime: eg.GameTime): void {\r\n        for (var key in this._abilityList) {\r\n            this._abilityList[key].Update(gameTime);\r\n        }\r\n    }\r\n}","import * as eg from \"../../../../endgate/endgate\";\r\nimport { MovementAbility } from \"./MovementAbility\";\r\nimport { ShipMovementController } from \"../ShipMovementController\";\r\nexport class Boost extends MovementAbility {\r\n    public static NAME: string = \"Boost\";\r\n    public static SPEED_INCREASE: number = 3; // Updated by server configuration value\r\n    public static DURATION: eg.TimeSpan = eg.TimeSpan.FromSeconds(3); // Updated by server configuration value\r\n\r\n    constructor(private _movementController: ShipMovementController) {\r\n        super(Boost.NAME, _movementController);\r\n\r\n        this.OnStart = new eg.EventHandler();\r\n        this.OnStop = new eg.EventHandler();\r\n    }\r\n\r\n    public OnStart: eg.EventHandler;\r\n    public OnStop: eg.EventHandler;\r\n\r\n    public Activate(): void {\r\n        this._movementController.StopAllMovement();\r\n        this._movementController.Moving.Forward = true;            \r\n        this._movementController.Controllable = false;\r\n\r\n        if (!this.Active) {\r\n            this.MultiplySpeedBy(Boost.SPEED_INCREASE);\r\n            this.OnStart.Trigger();\r\n        }\r\n\r\n        super.Activate();\r\n    }\r\n\r\n    public Deactivate(): void {\r\n        if (this.Active) {\r\n            this.ResetSpeed();\r\n            super.Deactivate();\r\n            this._movementController.Moving.Forward = false;\r\n            this._movementController.Controllable = true;\r\n            this.OnStop.Trigger();\r\n        }\r\n    }\r\n\r\n    public Update(gameTime: eg.GameTime): void {\r\n        if (this.Active && eg.TimeSpan.DateSpan((<Date>this.ActivatedAt), gameTime.Now).Milliseconds >= Boost.DURATION.Milliseconds) {\r\n            this.Deactivate();\r\n        }\r\n    }\r\n}","import { ShipMovementController } from \"../ShipMovementController\";\r\nimport { Ability } from \"./Ability\";\r\n\r\nexport class MovementAbility extends Ability {\r\n    private _initialPower: number;\r\n\r\n    constructor(name: string, public MovementController: ShipMovementController) {\r\n        super(name);\r\n\r\n        this._initialPower = MovementController.Power;\r\n    }\r\n\r\n    public IncreaseSpeedBy(amount: number): void {\r\n        this.MovementController.Power += amount;\r\n    }\r\n\r\n    public MultiplySpeedBy(amount: number): void {\r\n        this.MovementController.Power *= amount;\r\n    }\r\n\r\n    public DecreaseSpeedBy(amount: number): void {\r\n        this.MovementController.Power -= amount;\r\n    }\r\n\r\n    public ResetSpeed(): void {\r\n        this.MovementController.Power = this._initialPower;\r\n    }\r\n}","import * as eg from \"../../../../endgate/endgate\";\r\n\r\nexport class Ability {\r\n    public Active: boolean;\r\n    public ActivatedAt: Date | null;\r\n\r\n    constructor(public Name: string) {\r\n        this.Active = false;\r\n        this.ActivatedAt = null;\r\n    }\r\n\r\n    public Activate(): void {\r\n        this.Active = true;\r\n        this.ActivatedAt = new Date();\r\n    }\r\n\r\n    public Deactivate(): void {\r\n        this.Active = false;\r\n        this.ActivatedAt = null;\r\n    }\r\n\r\n    // Meant to be overridden\r\n    public Update(gameTime: eg.GameTime): void { }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\nimport { Map } from \"../Space/Map\";\r\nimport { Ship } from \"../Ships/Ship\";\r\n\r\nexport class MapBoundary extends eg.Collision.Collidable {\r\n    public static Color: eg.Graphics.Color = eg.Graphics.Color.FromHex(\"#3fa9f5\");\r\n    public static BoundaryWidth: number = 5;\r\n\r\n    public Graphic: eg.Graphics.Line2d;\r\n\r\n    private _bounceMultiplier: eg.Vector2d;\r\n\r\n    constructor(from: eg.Vector2d, to: eg.Vector2d) {\r\n        super(new eg.Graphics.Line2d(from.X, from.Y, to.X, to.Y, 1, MapBoundary.Color).GetDrawBounds());\r\n\r\n        this.Graphic = new eg.Graphics.Line2d(from.X, from.Y, to.X, to.Y, 1, MapBoundary.Color);\r\n        this.Graphic.LineWidth = MapBoundary.BoundaryWidth;\r\n\r\n        // Left or right\r\n        if (from.X - to.X === 0) {\r\n            this._bounceMultiplier = new eg.Vector2d(-Map.BARRIER_DEPRECATION, Map.BARRIER_DEPRECATION);\r\n        } else { // Top or bottom\r\n            this._bounceMultiplier = new eg.Vector2d(Map.BARRIER_DEPRECATION, -Map.BARRIER_DEPRECATION);\r\n        }\r\n    }\r\n\r\n    public Collided(data: eg.Collision.CollisionData): void {\r\n        if (data.With instanceof Ship) {\r\n            this.HandleShipCollision(<Ship>data.With);\r\n        }\r\n\r\n        // TODO: Add bullet\r\n    }\r\n\r\n    public Dispose(): void {\r\n        super.Dispose();\r\n        this.Graphic.Dispose();\r\n    }\r\n\r\n    private HandleShipCollision(ship: Ship): void {\r\n        var bounceMultiplier: eg.Vector2d;\r\n\r\n        ship.MovementController.StopMoving(\"Forward\");\r\n        ship.MovementController.StopMoving(\"Backward\");\r\n        ship.AnimationHandler.StopAllAnimations();\r\n\r\n        this.RepositionShipInBounds(ship);\r\n\r\n        // Reverse velocity, aka bounce\r\n        ship.MovementController.Forces = ship.MovementController.Forces.Multiply(this._bounceMultiplier);\r\n        ship.MovementController.Velocity = ship.MovementController.Velocity.Multiply(this._bounceMultiplier);\r\n    }\r\n\r\n    // Ugly\r\n    private RepositionShipInBounds(ship: Ship): void {\r\n        // Re-position to be in-bounds\r\n        if (ship.MovementController.Position.X - Ship.SIZE.HalfWidth <= 1) {\r\n            ship.MovementController.Position.X = Ship.SIZE.HalfWidth + 3;\r\n        } else if (ship.MovementController.Position.X + Ship.SIZE.HalfWidth >= Map.SIZE.Width - 1) {\r\n            ship.MovementController.Position.X = Map.SIZE.Width - Ship.SIZE.HalfWidth - 3;\r\n        }\r\n\r\n        if (ship.MovementController.Position.Y - Ship.SIZE.HalfHeight <= 1) {\r\n            ship.MovementController.Position.Y = Ship.SIZE.HalfHeight + 3;\r\n        } else if (ship.MovementController.Position.Y + Ship.SIZE.HalfHeight >= Map.SIZE.Height - 1) {\r\n            ship.MovementController.Position.Y = Map.SIZE.Height - Ship.SIZE.HalfHeight - 3;\r\n        }\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\nimport { MapBoundary } from \"./MapBoundary\";\r\nimport { AreaRenderer } from \"./AreaRenderer\";\r\nimport { ServerAdapter } from \"../Server/ServerAdapter\";\r\n\r\nexport class Map {\r\n    public static SIZE: eg.Size2d;\r\n    public static BARRIER_DEPRECATION: number;\r\n\r\n    private _backgroundTiles: Array<eg.Graphics.Sprite2d>;\r\n    private _boundaries: Array<MapBoundary>;\r\n    public AreaRenderer: AreaRenderer | undefined;\r\n\r\n    constructor(private _scene: eg.Rendering.Scene2d, private _collisionManager: eg.Collision.CollisionManager, private _contentManager: eg.Content.ContentManager, private _keyboard: eg.Input.KeyboardHandler, serverAdapter: ServerAdapter) {\r\n        this._boundaries = new Array<MapBoundary>();\r\n        this._backgroundTiles = new Array<eg.Graphics.Sprite2d>();\r\n\r\n        this.BuildBackground();\r\n        this.BuildBoundaries();\r\n        this.BuildAreas();\r\n\r\n        serverAdapter.OnMapResize.Bind((newSize: eg.Size2d) => {\r\n            Map.SIZE = newSize;\r\n            this.BuildBackground();\r\n            this.BuildBoundaries();\r\n\r\n            if (this.AreaRenderer) {\r\n                this.AreaRenderer.OnMapResize(newSize);\r\n            }\r\n        });\r\n    }\r\n\r\n    private BuildBackground(): void {\r\n        var source: eg.Graphics.ImageSource = this._contentManager.GetImage(\"StarBackground\"),\r\n            build = () => {\r\n                // Add 2 to give a buffer on both sides of the map\r\n                var tileCount: number = (Map.SIZE.Width / source.ClipSize.Width) + 2,\r\n                    templateTile: eg.Graphics.Sprite2d = new eg.Graphics.Sprite2d(0, 0, source, source.ClipSize.Width, source.ClipSize.Height),\r\n                    tile: eg.Graphics.Sprite2d;\r\n\r\n                templateTile.ZIndex = -2;\r\n\r\n                // Clean up any existing tiles so that we can create new ones (also used to resize the map).\r\n                for (var i = 0; i < this._backgroundTiles.length; i++) {\r\n                    this._backgroundTiles[i].Dispose();\r\n                }\r\n\r\n                this._backgroundTiles = new Array<eg.Graphics.Sprite2d>();\r\n\r\n                for (var i = 0; i < tileCount; i++) {\r\n                    for (var j = 0; j < tileCount; j++) {\r\n                        tile = templateTile.Clone();\r\n                        tile.Position.X = j * source.ClipSize.Width - source.ClipSize.HalfWidth;\r\n                        tile.Position.Y = i * source.ClipSize.Height - source.ClipSize.HalfHeight;\r\n                        this._scene.Add(tile);\r\n                        this._backgroundTiles.push(tile);\r\n                    }\r\n                }\r\n            };\r\n\r\n        if (source.IsLoaded()) {\r\n            build();\r\n        } else {\r\n            source.OnLoaded.Bind(build);\r\n        }\r\n    }\r\n\r\n    private BuildBoundaries(): void {\r\n        var corners: Array<eg.Vector2d> = new Array<eg.Vector2d>(\r\n            new eg.Vector2d(0, 0),\r\n            new eg.Vector2d(Map.SIZE.Width, 0),\r\n            new eg.Vector2d(Map.SIZE.Width, Map.SIZE.Height),\r\n            new eg.Vector2d(0, Map.SIZE.Height)),\r\n            boundary: MapBoundary;\r\n\r\n        for (var i = 0; i < this._boundaries.length; i++) {\r\n            this._boundaries[i].Dispose();\r\n        }\r\n\r\n        this._boundaries = new Array<MapBoundary>();\r\n\r\n        for (var i = 0; i < corners.length; i++) {\r\n            boundary = new MapBoundary(new eg.Vector2d(corners[i].X, corners[i].Y), new eg.Vector2d(corners[(i + 1) % corners.length].X, corners[(i + 1) % corners.length].Y));\r\n            boundary.Graphic.ZIndex = -1;\r\n            this._collisionManager.Monitor(boundary, true);\r\n            this._scene.Add(boundary.Graphic);\r\n            this._boundaries.push(boundary);\r\n        }\r\n    }\r\n\r\n    private BuildAreas(): void {\r\n        this.AreaRenderer = new AreaRenderer(this._scene, this._keyboard);\r\n        this.AreaRenderer.OnMapResize(Map.SIZE);\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\nimport { Area } from \"./Area\";\r\n\r\nexport class AreaRenderer {\r\n    public static AREA_BOX_COLOR: eg.Graphics.Color = eg.Graphics.Color.FromHex(\"#304665\");\r\n    public static AREA_TEXT_COLOR: eg.Graphics.Color = eg.Graphics.Color.FromHex(\"#3fa9f5\");\r\n    public static AREA_TEXT_MARGE: number = 17;\r\n    public static KEYBOARD_MAPPING: string = \"m\";\r\n    public static AREA_LETTERS: string[] = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\r\n\r\n    private _areas: Array<eg.Graphics.Rectangle>;\r\n    private _active: boolean;\r\n    private _areaSize: eg.Size2d;\r\n    private _mapSize: eg.Size2d;\r\n\r\n    constructor(private _scene: eg.Rendering.Scene2d, keyboard: eg.Input.KeyboardHandler) {\r\n        this._active = true;\r\n        this._areas = new Array<eg.Graphics.Rectangle>();\r\n        this._areaSize = eg.Size2d.Zero;\r\n        this._mapSize = eg.Size2d.Zero;\r\n\r\n        keyboard.OnCommandPress(AreaRenderer.KEYBOARD_MAPPING, () => {\r\n            this._active = !this._active;\r\n\r\n            this.UpdateVisible();\r\n        });\r\n\r\n        // IE is the only browser that can handle the performance, therefore this check sees if we're NOT an ie\r\n        if (!(!!(navigator.userAgent.match(/Trident/) && !navigator.userAgent.match(/MSIE/)))) {\r\n            this.Hide();\r\n        }\r\n    }\r\n\r\n    public OnMapResize(newSize: eg.Size2d): void {\r\n        this._mapSize = newSize;\r\n        this._areaSize = new eg.Size2d(Math.max(Math.round(newSize.Width / AreaRenderer.AREA_LETTERS.length), 1000));\r\n\r\n        // On every map resize we need to rebuild the sectors so that they fit within the map\r\n        this.BuildSectors();\r\n    }\r\n\r\n    public AreaFromPosition(position: eg.Vector2d): string {\r\n        var letter: string = AreaRenderer.AREA_LETTERS[Math.max(Math.floor(position.X / this._areaSize.Width), 0)],\r\n            sectorNumber: number = Math.max(Math.ceil(position.Y / this._areaSize.Height), 1);\r\n\r\n        return letter + sectorNumber.toString();\r\n    }\r\n\r\n    public Show(): void {\r\n        this._active = true;\r\n        this.UpdateVisible();\r\n    }\r\n\r\n    public Hide(): void {\r\n        this._active = false;\r\n        this.UpdateVisible();\r\n    }\r\n\r\n    private BuildSectors(): void {\r\n        var gridCount: number = this._mapSize.Width / this._areaSize.Width,\r\n            locationOffset: number = this._areaSize.HalfWidth,\r\n            area: Area;\r\n\r\n        if (gridCount % 1 !== 0) {\r\n            throw new Error(\"Area size does not divide evenly into the map size.\");\r\n        }\r\n\r\n        // Remove any existing areas so we can build new\r\n        for (var i = 0; i < this._areas.length; i++) {\r\n            this._areas[i].Dispose();\r\n        }\r\n\r\n        this._areas = new Array<eg.Graphics.Rectangle>();\r\n\r\n        for (var i = 0; i < gridCount; i++) {\r\n            for (var j = 0; j < gridCount; j++) {\r\n                area = new Area(locationOffset + this._areaSize.Width * j, locationOffset + this._areaSize.Width * i, this._areaSize.Width, AreaRenderer.AREA_LETTERS[j] + (i + 1));\r\n                area.ZIndex = -1;\r\n                this._areas.push(area);\r\n                this._scene.Add(area);\r\n            }\r\n        }\r\n\r\n        this.UpdateVisible();\r\n    }\r\n\r\n    private UpdateVisible(): void {\r\n        for (var i = 0; i < this._areas.length; i++) {\r\n            this._areas[i].Visible = this._active;\r\n        }\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\n\r\nexport class Area extends eg.Graphics.Rectangle {\r\n    public static BOX_COLOR: eg.Graphics.Color = eg.Graphics.Color.FromHex(\"#304665\");\r\n    public static TEXT_COLOR: eg.Graphics.Color = eg.Graphics.Color.FromHex(\"#3fa9f5\");\r\n    public static TEXT_MARGIN: number = 20;\r\n\r\n    constructor(x: number, y: number, size: number, private _area: string) {\r\n        super(x, y, size, size, eg.Graphics.Color.Transparent);\r\n\r\n        this.Border(2, Area.BOX_COLOR);\r\n\r\n        this.BuildTextCorners();\r\n    }\r\n\r\n    private BuildTextCorners(): void {\r\n        var locationOffset: number = this.Size.HalfWidth - Area.TEXT_MARGIN,\r\n            text: eg.Graphics.Text2d;\r\n\r\n        text = new eg.Graphics.Text2d(-locationOffset, -locationOffset, this._area, Area.TEXT_COLOR);\r\n        text.Align = \"left\";\r\n        text.FontSettings.FontSize = \"18px\";\r\n        text.FontSettings.FontFamily = eg.Graphics.FontFamily.Calibri;\r\n        this.AddChild(text);\r\n\r\n        text = text.Clone();\r\n        text.Position = new eg.Vector2d(-locationOffset, +locationOffset);\r\n        this.AddChild(text);\r\n\r\n        text = text.Clone();\r\n        text.Align = \"right\";\r\n        text.Position = new eg.Vector2d(locationOffset, -locationOffset);\r\n        this.AddChild(text);\r\n\r\n        text = text.Clone();\r\n        text.Position = new eg.Vector2d(locationOffset, locationOffset);\r\n        this.AddChild(text);\r\n    }\r\n}","import * as eg from \"../../../../endgate/endgate\";\r\nimport { ShipThrustAnimation } from \"./ShipThrustAnimation\";\r\nimport { ShipBoostAnimation } from \"./ShipBoostAnimation\";\r\nimport { ShipDeathAnimation } from \"./ShipDeathAnimation\";\r\nimport { Ship } from \"../Ship\";\r\n\r\nexport class ShipAnimationHandler {\r\n    public static FULL_THRUST_AFTER: eg.TimeSpan = eg.TimeSpan.FromMilliseconds(400);\r\n\r\n    private _thrustAnimation: ShipThrustAnimation;\r\n    private _boostAnimation: ShipBoostAnimation;\r\n    private _deathAnimation: ShipDeathAnimation;\r\n\r\n    constructor(private _ship: Ship, private _contentManager: eg.Content.ContentManager) {\r\n        var thrustSpriteSheet: eg.Graphics.ImageSource = this._contentManager.GetImage(\"Thrust\"),\r\n            thrustStartSpriteSheet: eg.Graphics.ImageSource = this._contentManager.GetImage(\"ThrustStart\");\r\n\r\n        this._thrustAnimation = new ShipThrustAnimation(this._contentManager);\r\n        this._boostAnimation = new ShipBoostAnimation(this._contentManager);\r\n        this._deathAnimation = new ShipDeathAnimation(this._contentManager);\r\n\r\n        this._ship.Graphic.AddChildToShip(this._thrustAnimation);\r\n        this._ship.Graphic.AddChildToShip(this._boostAnimation);\r\n        this._ship.Graphic.AddChild(this._deathAnimation);\r\n\r\n        this._ship.AbilityHandler.Boost.OnStart.Bind(() => {\r\n            this._thrustAnimation.Stop();\r\n            this._boostAnimation.Play();\r\n        });\r\n\r\n        this._ship.AbilityHandler.Boost.OnStop.Bind(() => {\r\n            this._boostAnimation.Stop();\r\n        });\r\n\r\n        this._ship.OnExplosion.Bind(() => {\r\n            this._thrustAnimation.Visible = false;\r\n            this._boostAnimation.Visible = false;\r\n            this._ship.Graphic.HideShip();\r\n\r\n            this._deathAnimation.Play();    \r\n        });\r\n\r\n        this._deathAnimation.OnComplete.Bind(() => {\r\n            this._ship.Dispose();\r\n            this._ship.Graphic.Dispose();\r\n        });\r\n    }\r\n\r\n    public StopAllAnimations(): void {\r\n        this._thrustAnimation.Stop();\r\n        this._boostAnimation.Stop();\r\n    }\r\n\r\n    public Update(gameTime: eg.GameTime): void {\r\n        var thrustIsPlaying: boolean = this._thrustAnimation.IsPlaying();\r\n\r\n        if (!thrustIsPlaying && this._ship.MovementController.IsMovingInDirection(\"Forward\") && !this._ship.AbilityHandler.Boost.Active) {\r\n            this._thrustAnimation.Play();\r\n        } else if (thrustIsPlaying && !this._ship.MovementController.IsMovingInDirection(\"Forward\")) {\r\n            this._thrustAnimation.Stop();\r\n        }\r\n\r\n        this._thrustAnimation.Update(gameTime);\r\n        this._boostAnimation.Update(gameTime);\r\n        this._deathAnimation.Update(gameTime);\r\n    }\r\n}","import * as eg from \"../../../../endgate/endgate\";\r\nimport { Ship } from \"../Ship\";\r\n\r\nexport class ShipThrustAnimation extends eg.Graphics.Sprite2d {\r\n    public static FRAME_SIZE: eg.Size2d = new eg.Size2d(52, 50);\r\n    public static FRAME_COUNT: number = 18;\r\n    public static FPS: number = 18;\r\n\r\n    private _thrustStartSpriteSheet: eg.Graphics.ImageSource;\r\n    private _thrustSpriteSheet: eg.Graphics.ImageSource;\r\n    private _thrustAnimator: eg.Graphics.SpriteAnimation;\r\n    private _thrustStartAnimator: eg.Graphics.SpriteAnimation;\r\n\r\n    constructor(contentManager: eg.Content.ContentManager) {\r\n        super(-Ship.SIZE.HalfWidth - ShipThrustAnimation.FRAME_SIZE.HalfWidth, 0, contentManager.GetImage(\"ThrustStart\"), ShipThrustAnimation.FRAME_SIZE.Width, ShipThrustAnimation.FRAME_SIZE.Height);\r\n        \r\n        this._thrustStartSpriteSheet = contentManager.GetImage(\"ThrustStart\");\r\n        this._thrustSpriteSheet = contentManager.GetImage(\"Thrust\");\r\n\r\n        this._thrustStartAnimator = new eg.Graphics.SpriteAnimation(this._thrustStartSpriteSheet, ShipThrustAnimation.FPS, ShipThrustAnimation.FRAME_SIZE, ShipThrustAnimation.FRAME_COUNT);\r\n        this._thrustAnimator = new eg.Graphics.SpriteAnimation(this._thrustSpriteSheet, ShipThrustAnimation.FPS, ShipThrustAnimation.FRAME_SIZE, ShipThrustAnimation.FRAME_COUNT);\r\n\r\n        this._thrustStartAnimator.OnComplete.Bind(() => {\r\n            this.Image = this._thrustSpriteSheet;\r\n            this._thrustAnimator.Play(true);\r\n        });\r\n\r\n        this.Visible = false;\r\n    }\r\n\r\n    public Play(): void {\r\n        this.Image = this._thrustStartSpriteSheet;\r\n        this._thrustStartAnimator.Play();\r\n        this.Visible = true;\r\n    }\r\n\r\n    public IsPlaying(): boolean {\r\n        return this._thrustAnimator.IsPlaying() || this._thrustStartAnimator.IsPlaying();\r\n    }\r\n\r\n    public Stop(): void {\r\n        this._thrustStartAnimator.Stop();\r\n        this._thrustAnimator.Stop();\r\n        this.Visible = false;\r\n    }\r\n\r\n    public Update(gameTime: eg.GameTime): void {\r\n        this._thrustStartAnimator.Update(gameTime);\r\n        this._thrustAnimator.Update(gameTime);\r\n    }\r\n}","import * as eg from \"../../../../endgate/endgate\";\r\nimport { Animation } from \"../../Common/Animation\"\r\nimport { Ship } from \"../Ship\";\r\n\r\nexport class ShipBoostAnimation extends Animation {\r\n    public static FRAME_SIZE: eg.Size2d = new eg.Size2d(102, 50);\r\n    public static FRAME_COUNT: number = 10;\r\n    public static FPS: number = 12;\r\n\r\n    constructor(contentManager: eg.Content.ContentManager) {\r\n        super(new eg.Vector2d(-Ship.SIZE.HalfWidth - ShipBoostAnimation.FRAME_SIZE.HalfWidth, -2), contentManager.GetImage(\"Boost\"), ShipBoostAnimation.FPS, ShipBoostAnimation.FRAME_SIZE, ShipBoostAnimation.FRAME_COUNT);\r\n        this.Visible = false;\r\n    }\r\n\r\n    public Play(): void {\r\n        this.Visible = true;\r\n        super.Play(true);\r\n    }\r\n\r\n    public Stop(): void {            \r\n        this.Visible = false;\r\n        super.Stop();\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\n\r\nexport class Animation extends eg.Graphics.Sprite2d {\r\n    private _animator: eg.Graphics.SpriteAnimation;\r\n\r\n    constructor(position: eg.Vector2d, spriteSheet: eg.Graphics.ImageSource, fps: number, frameSize: eg.Size2d, frameCount: number) {\r\n        super(position.X, position.Y, spriteSheet, frameSize.Width, frameSize.Height);\r\n\r\n        this._animator = new eg.Graphics.SpriteAnimation(spriteSheet, fps, frameSize, frameCount);\r\n        this._animator.Step(1);\r\n    }\r\n\r\n    public get OnComplete(): eg.EventHandler {\r\n        return this._animator.OnComplete;\r\n    }\r\n\r\n    public Play(repeat: boolean = false): void {\r\n        this._animator.Play(repeat);\r\n    }\r\n\r\n    public Stop(): void {\r\n        this._animator.Stop();\r\n    }\r\n\r\n    public Update(gameTime: eg.GameTime): void {\r\n        this._animator.Update(gameTime);\r\n    }\r\n}","import * as eg from \"../../../../endgate/endgate\";\r\nimport { Animation } from \"../../Common/Animation\"\r\n\r\nexport class ShipDeathAnimation extends Animation {\r\n    public static FRAME_SIZE: eg.Size2d = new eg.Size2d(128, 128);\r\n    public static FRAME_COUNT: number = 30;\r\n    public static FPS: number = 25;\r\n\r\n    constructor(contentManager: eg.Content.ContentManager) {\r\n        super(eg.Vector2d.Zero, contentManager.GetImage(\"ShipExplosion\"), ShipDeathAnimation.FPS, ShipDeathAnimation.FRAME_SIZE, ShipDeathAnimation.FRAME_COUNT);\r\n        this.Rotation = (Math.random() * (Math.PI * 100)) / 100;\r\n        this.Visible = false;\r\n    }\r\n\r\n    public Play(): void {\r\n        this.Visible = true;\r\n        super.Play();\r\n    }\r\n}","import * as eg from \"../../../../endgate/endgate\";\r\nimport { IShipData } from \"../../Server/IPayloadDefinitions\";\r\n\r\nexport class ShipLevelManager {\r\n    public Level: number;\r\n    public Experience: number;\r\n    public ExperienceToNextLevel: number;\r\n\r\n    constructor(payload: IShipData) {\r\n        this.Level = payload.Level;\r\n        this.Experience = 0;\r\n        this.ExperienceToNextLevel = 1000000;\r\n        this.OnLevelChange = new eg.EventHandler1<number>();\r\n        this.OnExperienceChange = new eg.EventHandler2<number, number>();\r\n    }\r\n\r\n    public OnLevelChange: eg.EventHandler1<number>;\r\n    public OnExperienceChange: eg.EventHandler2<number, number>;\r\n\r\n    public LoadPayload(payload: IShipData): void {\r\n        if (payload.Level != this.Level) {\r\n            this.Level = payload.Level;\r\n            this.OnLevelChange.Trigger(this.Level);\r\n        }\r\n    }\r\n\r\n    public UpdateExperience(experience: number, experienceToNextLevel: number): void {\r\n        if (experience !== this.Experience || experienceToNextLevel !== this.ExperienceToNextLevel) {\r\n            this.Experience = experience;\r\n            this.ExperienceToNextLevel = experienceToNextLevel;\r\n            this.OnExperienceChange.Trigger(experience, experienceToNextLevel);\r\n        }\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\n\r\nexport class ShipFireController {\r\n    public static MIN_FIRE_RATE: eg.TimeSpan;\r\n\r\n    constructor(keyboard: eg.Input.KeyboardHandler, onFire: (fireMethod: string) => void) {\r\n        var autoFireHandle: number,\r\n            firedAt: number = 0,\r\n            singleFireMode: boolean = true,\r\n            lastShot: number = 0;\r\n\r\n        keyboard.OnCommandDown(\" \", () => {\r\n            var timeSinceFired: number;\r\n\r\n            firedAt = new Date().getTime();\r\n\r\n            if (singleFireMode) {\r\n                timeSinceFired = firedAt - lastShot;\r\n\r\n                if (timeSinceFired > ShipFireController.MIN_FIRE_RATE.Milliseconds) {\r\n                    lastShot = firedAt;\r\n                    onFire(\"Fire\");\r\n                }\r\n\r\n                autoFireHandle = (<any>setTimeout(function () {\r\n                    singleFireMode = false;\r\n                    onFire(\"StartFire\");\r\n                }, ShipFireController.MIN_FIRE_RATE.Milliseconds));\r\n            } else {\r\n                onFire(\"StartFire\");\r\n            }\r\n        });\r\n        keyboard.OnCommandUp(\" \", () => {\r\n            var timeFireReleased: number;\r\n\r\n            clearTimeout(autoFireHandle);\r\n            timeFireReleased = new Date().getTime();\r\n\r\n            if (!singleFireMode) {\r\n                lastShot = timeFireReleased;\r\n                onFire(\"StopFire\");\r\n            }\r\n\r\n            singleFireMode = timeFireReleased - firedAt < ShipFireController.MIN_FIRE_RATE.Milliseconds;\r\n        });\r\n    }\r\n}","import * as eg from \"../../endgate/endgate\"\r\nimport * as JQuery from \"jquery\";\r\nimport { delay } from \"./Utilities/UtilityFunctions\";\r\nimport { ServerAdapter } from \"./Server/ServerAdapter\";\r\n\r\nexport class GameScreen {\r\n    private _gameHUDHeight: number = (<number>$(\"#gameHUD\").height());\r\n\r\n    // Initially set to really high, this will be changed by the configuration\r\n    public static MAX_SCREEN_WIDTH: number = 10000;\r\n    public static MAX_SCREEN_HEIGHT: number = 10000;\r\n    public static MIN_SCREEN_WIDTH: number = -1;\r\n    public static MIN_SCREEN_HEIGHT: number = -1;\r\n    public static SCREEN_BUFFER_AREA: number = 200;\r\n\r\n    public Viewport: eg.Size2d;\r\n\r\n    constructor(private _gameCanvas: JQuery, private _popUpHolder: JQuery, private _serverAdapter: ServerAdapter) {\r\n        this.Viewport = this.UpdateViewport();\r\n        this.OnResize = new eg.EventHandler1<eg.Size2d>();\r\n        this.OnResizeComplete = new eg.EventHandler();\r\n\r\n        $(window).resize(() => {\r\n            // Wait till window has officially finished resizing (wait a quarter second).\r\n            delay(() => {\r\n                this.ScreenResizeEvent();\r\n            }, 250);\r\n        });\r\n\r\n        this.ForceResizeCheck();\r\n    }\r\n\r\n    public OnResize: eg.EventHandler1<eg.Size2d>;\r\n    public OnResizeComplete: eg.EventHandler;\r\n\r\n    public ForceResizeCheck(): void {\r\n        this.ScreenResizeEvent();\r\n    }\r\n\r\n    private UpdateGameCanvas(): void {\r\n        this._gameCanvas.attr(\"width\", this.Viewport.Width);\r\n        this._gameCanvas.attr(\"height\", this.Viewport.Height);\r\n\r\n        if (this._popUpHolder) {\r\n            this._popUpHolder.css(\"width\", this.Viewport.Width);\r\n            this._popUpHolder.css(\"height\", this.Viewport.Height);\r\n        }\r\n    }\r\n\r\n    private UpdateScreen(): void {\r\n        this.Viewport = this.UpdateViewport();\r\n\r\n        this.UpdateGameCanvas();\r\n\r\n        this.SendNewViewportToServer();\r\n        this.OnResize.Trigger(this.Viewport);\r\n    }\r\n\r\n    private ScreenResizeEvent(): void {\r\n        this.UpdateScreen();\r\n        setTimeout(() => {\r\n            this.UpdateScreen();\r\n            this.OnResizeComplete.Trigger();\r\n        }, 1500); // Re-calculate in-case there were scrollbars\r\n    }\r\n\r\n    public UpdateViewport(): eg.Size2d {\r\n        return new eg.Size2d(\r\n            Math.max(Math.min((<number>$(window).width()), GameScreen.MAX_SCREEN_WIDTH), GameScreen.MIN_SCREEN_WIDTH),\r\n            Math.max(Math.min((<number>$(window).height()) - this._gameHUDHeight, GameScreen.MAX_SCREEN_HEIGHT), GameScreen.MIN_SCREEN_HEIGHT)\r\n            );\r\n    }\r\n\r\n    public SendNewViewportToServer(): void {\r\n        this._serverAdapter.Connection.invoke(\"changeViewport\", this.Viewport.Width, this.Viewport.Height);\r\n    }\r\n    }","export function StandardDeviation(arr: number[]): number {\r\n    var average: number = Average(arr),\r\n        sum: number = 0;\r\n\r\n    for (var i = 0; i < arr.length; i++) {\r\n        sum += Math.pow(arr[i] - average, 2);\r\n    }\r\n\r\n    return Math.sqrt(sum / (arr.length - 1));\r\n}\r\n\r\nexport function Average(arr: number[]): number {\r\n    var sum: number = 0;\r\n    for (var i = 0; i < arr.length; i++) {\r\n        sum += arr[i];\r\n    }\r\n\r\n    return sum / arr.length;\r\n}\r\n\r\nexport var delay = (function () {\r\n    var timer: number = 0;\r\n    return function (callback: Function, ms: number) {\r\n        clearTimeout(timer);\r\n        timer = setTimeout(callback, ms);\r\n    };\r\n})();\r\n\r\n(<any>jQuery.fn).flash = function (color: string, duration: number) {\r\n    this.stop(true);\r\n    var current = this.css('backgroundColor');\r\n    this.animate({ backgroundColor: 'rgb(' + color + ')' }, duration / 2)\r\n        .animate({ backgroundColor: current }, duration / 2);\r\n}","import * as eg from \"../../../endgate/endgate\";\r\nimport { BulletGraphic } from \"./BulletGraphic\";\r\nimport { BulletMovementController } from \"./BulletMovementController\";\r\nimport { BulletAnimationHandler } from \"./Animations/BulletAnimationHandler\";\r\nimport { IBulletData } from \"../Server/IPayloadDefinitions\";\r\n\r\nexport class Bullet extends eg.Collision.Collidable {\r\n    public static SIZE: eg.Size2d = new eg.Size2d(13);\r\n    public static BULLET_DIE_AFTER: eg.TimeSpan = eg.TimeSpan.FromSeconds(2);\r\n\r\n    public ID: number;\r\n    public Graphic: BulletGraphic;\r\n    public MovementController: BulletMovementController;\r\n    public AnimationHandler: BulletAnimationHandler;\r\n\r\n    private _spawnedAt: number;\r\n    private _destroyed: boolean;\r\n\r\n    constructor(payload: IBulletData, contentManager: eg.Content.ContentManager) {\r\n        super();\r\n        // Going to use the rectangle to \"hold\" all the other graphics\r\n        this.Graphic = new BulletGraphic(payload.MovementController.Position, Bullet.SIZE, contentManager);\r\n\r\n        this.ID = -1;\r\n        this.Bounds = this.Graphic.GetDrawBounds();\r\n\r\n        this.OnExplosion = new eg.EventHandler();\r\n        this.MovementController = new BulletMovementController(new Array<eg.IMoveable>(this.Bounds, this.Graphic), payload.MovementController);\r\n        this.AnimationHandler = new BulletAnimationHandler(this, contentManager);            \r\n\r\n        this._spawnedAt = new Date().getTime();\r\n        this._destroyed = false;\r\n\r\n        this.LoadPayload(payload);\r\n    }\r\n\r\n    public OnExplosion: eg.EventHandler;\r\n\r\n    public Update(gameTime: eg.GameTime): void {\r\n        this.MovementController.Update(gameTime);\r\n        this.AnimationHandler.Update(gameTime);\r\n\r\n        // Bullets been alive too long\r\n        if ((new Date().getTime() - this._spawnedAt) >= Bullet.BULLET_DIE_AFTER.Milliseconds) {\r\n            this.Destroy(false);\r\n        }\r\n    }\r\n\r\n    public LoadPayload(payload: IBulletData): void {\r\n        this.ID = payload.ID;            \r\n        this.MovementController.LoadPayload(payload.MovementController);\r\n\r\n        // Ensure that our position matches the movement controllers position\r\n        this.Bounds.Position = this.Graphic.Position = this.MovementController.Position;\r\n    }\r\n\r\n    public Destroy(explode: boolean = true): void {\r\n        if (!this._destroyed) {\r\n            this._destroyed = true;    \r\n\r\n            this.MovementController.Dispose();                            \r\n\r\n            if (!explode) {\r\n                this.Graphic.Dispose();\r\n                this.Dispose();\r\n            } else {\r\n                // We rely on the completion of the explosion to finish disposing the bounds and graphic\r\n                this.OnExplosion.Trigger();\r\n            }\r\n        }\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\n\r\nexport class BulletGraphic extends eg.Graphics.Rectangle {\r\n    private _bulletBody: eg.Graphics.Sprite2d;\r\n\r\n    constructor(position: eg.Vector2d, size: eg.Size2d, contentManager: eg.Content.ContentManager) {\r\n        // The Graphic color is transparent because all graphics that represent a ship will be added as a child.\r\n        super(position.X, position.Y, size.Width, size.Height, eg.Graphics.Color.Transparent);\r\n\r\n        this._bulletBody = new eg.Graphics.Sprite2d(0, 0, contentManager.GetImage(\"Bullet\"));\r\n        this.AddChild(this._bulletBody);\r\n    }\r\n\r\n    public HideBullet(): void {\r\n        this._bulletBody.Visible = false;\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\nimport { IMovementControllerData } from \"../Server/IPayloadDefinitions\";\r\n\r\nexport class BulletMovementController extends eg.MovementControllers.MovementController {\r\n    constructor(movables: Array<eg.IMoveable>, payload: IMovementControllerData) {\r\n        super(movables);\r\n\r\n        this.LoadPayload(payload);\r\n    }\r\n\r\n    public LoadPayload(payload: IMovementControllerData): void {\r\n        this.Position = payload.Position;\r\n        this.Velocity = payload.Velocity;\r\n    }\r\n\r\n    public Update(gameTime: eg.GameTime): void {\r\n        this.Position = this.Position.Add(this.Velocity.Multiply(gameTime.Elapsed.Seconds));\r\n\r\n        super.Update(gameTime);\r\n    }\r\n\r\n    public Dispose(): void {\r\n        // Make all active functions no-op\r\n        this.Update = () => { };\r\n        this.LoadPayload = () => { };\r\n    }\r\n}","import * as eg from \"../../../../endgate/endgate\";\r\nimport { BulletExplosionAnimation } from \"./BulletExplosionAnimation\";\r\nimport { Bullet } from \"../Bullet\";\r\n\r\nexport class BulletAnimationHandler {\r\n    private _explosionAnimation: BulletExplosionAnimation;\r\n\r\n    constructor(private _bullet: Bullet, private _contentManager: eg.Content.ContentManager) {\r\n        this._explosionAnimation = new BulletExplosionAnimation(this._contentManager);\r\n\r\n        this._explosionAnimation.OnComplete.Bind(() => {\r\n            this._bullet.Dispose();\r\n            this._bullet.Graphic.Dispose();\r\n        });\r\n\r\n        this._bullet.OnExplosion.Bind(() => {\r\n            this._bullet.Graphic.HideBullet();\r\n            this._explosionAnimation.Play();\r\n        });\r\n\r\n        this._bullet.Graphic.AddChild(this._explosionAnimation);\r\n    }\r\n\r\n    public Update(gameTime: eg.GameTime): void {\r\n        this._explosionAnimation.Update(gameTime);\r\n    }\r\n}","import * as eg from \"../../../../endgate/endgate\";\r\nimport { Animation } from \"../../Common/Animation\";\r\n\r\nexport class BulletExplosionAnimation extends Animation {\r\n    public static FRAME_SIZE: eg.Size2d = new eg.Size2d(64, 64);\r\n    public static FRAME_COUNT: number = 24;\r\n    public static FPS: number = 24;\r\n\r\n    constructor(contentManager: eg.Content.ContentManager) {\r\n        super(eg.Vector2d.Zero, contentManager.GetImage(\"BulletExplosion\"), BulletExplosionAnimation.FPS, BulletExplosionAnimation.FRAME_SIZE, BulletExplosionAnimation.FRAME_COUNT);\r\n        this.Rotation = (Math.random() * (Math.PI * 100)) / 100;\r\n        this.Visible = false;\r\n    }\r\n\r\n    public Play(): void {\r\n        this.Visible = true;\r\n        super.Play();\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\nimport { Powerup } from \"./Powerup\";\r\nimport { IPowerupData } from \"../Server/IPayloadDefinitions\";\r\nimport { HealthPackGraphic } from \"./Graphics/HealthPackGraphic\";\r\n\r\nexport class HealthPack extends Powerup {\r\n    public static SIZE: eg.Size2d = new eg.Size2d(50);\r\n    public static LIFE_SPAN: eg.TimeSpan = eg.TimeSpan.FromSeconds(6);\r\n\r\n    private _spawnedAt: Date;\r\n\r\n    constructor(payload: IPowerupData, contentManager: eg.Content.ContentManager) {\r\n        super(payload, new HealthPackGraphic(payload.MovementController.Position, contentManager));\r\n\r\n        this._spawnedAt = new Date();            \r\n    }\r\n\r\n    public Update(gameTime: eg.GameTime): void {\r\n        if (eg.TimeSpan.DateSpan(this._spawnedAt, gameTime.Now).Milliseconds >= HealthPack.LIFE_SPAN.Milliseconds) {\r\n            this.Destroy();\r\n            return;\r\n        }\r\n\r\n        (<HealthPackGraphic>this.Graphic).Update(gameTime);\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\nimport { IPowerupData } from \"../Server/IPayloadDefinitions\";\r\n\r\nexport class Powerup extends eg.Collision.Collidable {\r\n    public ID: number;\r\n    public Graphic: eg.Graphics.Graphic2d;\r\n\r\n    private _destroyed: boolean;\r\n\r\n    constructor(payload: IPowerupData, graphic: eg.Graphics.Graphic2d) {\r\n        super(graphic.GetDrawBounds());\r\n\r\n        this.ID = payload.ID;\r\n        this.Graphic = graphic;\r\n        this._destroyed = false;\r\n    }\r\n\r\n    public LoadPayload(payload: IPowerupData): void {\r\n        this.Bounds.Position = this.Graphic.Position = payload.MovementController.Position;\r\n    }\r\n\r\n    public Update(gameTime: eg.GameTime): void {\r\n    }\r\n\r\n    public Destroy(): void {\r\n        if (!this._destroyed) {\r\n            this._destroyed = true;\r\n\r\n            this.Dispose();\r\n            this.Graphic.Dispose();\r\n        }\r\n    }\r\n}","import * as eg from \"../../../../endgate/endgate\";\r\nimport { Animation } from \"../../Common/Animation\";\r\nimport { HealthPack } from \"../HealthPack\";\r\n\r\nexport class HealthPackGraphic extends Animation {\r\n    public static FRAME_COUNT: number = 18;\r\n    public static FPS: number = 18;\r\n\r\n    constructor(position: eg.Vector2d, contentManager: eg.Content.ContentManager) {\r\n        super(position, contentManager.GetImage(\"HealthPack\"), HealthPackGraphic.FPS, HealthPack.SIZE, HealthPackGraphic.FRAME_COUNT);\r\n\r\n        this.Play(true);\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\nimport { ILeaderboardEntryData } from \"../Server/IPayloadDefinitions\";\r\nimport { ServerAdapter } from \"../Server/ServerAdapter\";\r\n\r\nexport class LeaderboardManager {\r\n    public static LEADERBOARD_SIZE: number;\r\n\r\n    private _leaderboardHolder: JQuery = $(\"#leaderboardHolder, #doublePopupHolder\");\r\n    private _leaderboard: JQuery = $(\"#leaderboard\");\r\n    private _popUpHolder: JQuery = $(\"#popUpHolder\");\r\n    private _gameCover: JQuery = $(\"#GameCover\");\r\n    private _myRanking: JQuery = $(\"#myRanking\");\r\n    private _leaderboardRows: JQuery[] = [];\r\n\r\n    public LeaderboardUp: boolean = false;\r\n\r\n    constructor(private _myShipId: number, private _keyboard: eg.Input.KeyboardHandler, private _serverAdapter: ServerAdapter) {\r\n        this.initializeLeaderboardRows();\r\n        this.applyKeyboardShortcuts();\r\n\r\n        this._serverAdapter.OnLeaderboardUpdate.Bind((leaderboardData: ILeaderboardEntryData[]) => {\r\n            this.bindToLeaderboard(leaderboardData);\r\n        });\r\n    }\r\n\r\n    private initializeLeaderboardRows(): void {\r\n        var tempRow: JQuery = $(\"#leaderboard .row\");\r\n\r\n        this._leaderboardRows.push(tempRow);\r\n\r\n        for (var i = 0; i < LeaderboardManager.LEADERBOARD_SIZE - 1; i++) {\r\n            var rowCopy: JQuery = tempRow.clone();\r\n            this._leaderboardRows.push(rowCopy);\r\n            this._leaderboard.append(rowCopy);\r\n        }\r\n    }\r\n\r\n    private bindToLeaderboard(data: ILeaderboardEntryData[]): void {\r\n        for (var i = 0; i < data.length; i++) {\r\n            var row: JQuery = $(this._leaderboardRows[i]);\r\n\r\n            if (data[i].ID === this._myShipId) {\r\n                if (data[i].Photo.length === 0) {\r\n                    data[i].Photo = \"Images/HUD/You_Default.png\";\r\n                }\r\n                row.addClass(\"highlight\");\r\n            }\r\n            else {\r\n                row.removeClass(\"highlight\");\r\n            }\r\n\r\n            // Bind photo separately becase it's bound to the src\r\n            var photoEle: JQuery = row.find(\".lbPhoto\");\r\n            if (data[i].Photo.length === 0) {\r\n                data[i].Photo = \"Images/HUD/KilledBy_Default.png\";\r\n            }\r\n\r\n            if (photoEle.attr(\"src\") !== data[i].Photo) {\r\n                photoEle.attr(\"src\", data[i].Photo);\r\n            }\r\n\r\n            // Delete the photo and ID from the data because we don't want them to be bound with the rest of the data\r\n            delete data[i].Photo;\r\n            delete data[i].ID;\r\n\r\n            for (var key in data[i]) {\r\n                // @ts-ignore\r\n                row.find(\".lb\" + key).html(data[i][key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Create shortcuts\r\n    private applyKeyboardShortcuts(): void {\r\n        this._keyboard.OnCommandPress(\"l\", () => {\r\n            this.toggleLeaderboard();\r\n        });            \r\n\r\n        $(\"#GlobalRanking\").click(() => {\r\n            this.toggleLeaderboard();\r\n        });\r\n    }\r\n\r\n    private toggleLeaderboard(): void {\r\n        if (!this.LeaderboardUp) {\r\n            this.showLeaderboard();\r\n        } else {\r\n            this.hideLeaderboard();\r\n        }\r\n    }\r\n\r\n    private showLeaderboard(): void {\r\n        // Go left is turned on when the ship dies.  We want the Leaderboard to float along side the death\r\n        // screen when we're in the \"dead\" state.\r\n        if (!this._leaderboard.hasClass('goLeft')) {\r\n            this.LeaderboardUp = true;\r\n            this._leaderboardHolder.css(\"display\", \"block\");\r\n            this._popUpHolder.fadeIn(350);\r\n            this._gameCover.fadeIn(350);\r\n            this._serverAdapter.Connection.invoke(\"readyForLeaderboardPayloads\");\r\n        }\r\n    }\r\n\r\n    private hideLeaderboard(): void {\r\n        if (!this._leaderboard.hasClass('goLeft')) {\r\n            this.LeaderboardUp = false;\r\n            this._popUpHolder.fadeOut(200, () => {\r\n                this._leaderboardHolder.css(\"display\", \"none\");\r\n            });\r\n            this._gameCover.fadeOut(200);\r\n            this._serverAdapter.Connection.invoke(\"stopLeaderboardPayloads\");\r\n        }\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\nimport { IPayloadData } from \"../Server/IPayloadDefinitions\";\r\n\r\nexport class DeathScreen {\r\n    public static RESPAWN_TIMER: eg.TimeSpan;\r\n\r\n    private _randomQuotes: string[][];\r\n    private _fadeIns: JQuery = $(\"#HUDBarCover, #GameCover, #popUpHolder\");\r\n    private _respawnTime: JQuery = $(\"#RespawnTime\");\r\n    private _killedByName: JQuery = $(\"#KilledByNameSmall, #KilledByNameLarge\");\r\n    private _killedByPhoto: JQuery = $(\"#KilledByPhotoSmall, #KilledByPhotoLarge\");\r\n    private _doublePopupHolder: JQuery = $(\"#doublePopupHolder\");\r\n    private _popupWindows: JQuery = $(\"#leaderboardHolder, #deathScreenHolder\");\r\n    private _topLineQuote: JQuery = $(\"#topLineQuote\");\r\n    private _botLineQuote: JQuery = $(\"#botLineQuote\");\r\n\r\n    constructor() {\r\n        this._randomQuotes = [\r\n            [\"HAS LEFT A DENT IN YOUR EGO.\", \"(HOPE NOBODY SAW THAT)\"],\r\n            [\"JUST DOMINATED YOU.\", \"OUCH!\"],\r\n            [\"SUCKS TO BE YOU!\", \"\"],\r\n            [\"...\", \"REALLY?\"],\r\n            [\"YOU ALRIGHT?\", \"THAT MUST HAVE HURT.\"],\r\n            [\"SAID TO TELL YOUR MOTHER\", \"HELLO!\"],\r\n            [\"TIS BUT A SCRATCH\", \"\"],\r\n            [\"BOOM...\", \"HEADSHOT!\"],\r\n            [\"CAN'T LET YOU DO THAT STARFOX\", \"\"],\r\n            [\"PLAYTIME IS OVER!\", \"\"],\r\n            [\"YOU MISSED!\", \"YOU MAY NEED GLASSES\"],\r\n            [\"YOU'RE GOOD...\", \"BUT I'M BETTER.\"],\r\n            [\"TOO SLOW...\", \"MY GRAMAH DRIVES FASTER THAN THAT!\"],\r\n            [\"TOASTERS...\", \"BLAME THE TOASTERS!\"],\r\n            [\"=(\", \"\"]\r\n        ];\r\n    }\r\n\r\n    public LoadPayload(payload: IPayloadData): void {\r\n        if (payload.KilledByName) {\r\n            this.YouDied(payload.KilledByName, payload.KilledByPhoto);\r\n        }\r\n    }\r\n\r\n    private YouDied(by: string, byPhoto: string): void {\r\n        var quote: number = Math.floor(Math.random() * this._randomQuotes.length);\r\n\r\n        this._topLineQuote[0].innerHTML = this._randomQuotes[quote][0];\r\n        this._botLineQuote[0].innerHTML = this._randomQuotes[quote][1];\r\n\r\n        this._killedByName.text(by);\r\n        this._killedByPhoto.attr(\"src\", byPhoto);\r\n\r\n        this._popupWindows.css(\"display\", \"block\");\r\n        this._doublePopupHolder.css(\"display\", \"block\");\r\n\r\n        this._popupWindows.addClass(\"goLeft\");\r\n\r\n        this._fadeIns.fadeIn(1000);\r\n        this._respawnTime[0].innerHTML = DeathScreen.RESPAWN_TIMER.Seconds.toString();\r\n\r\n        var interval = setInterval(() => {\r\n            var left: number = parseInt(this._respawnTime[0].innerHTML) - 1;\r\n            this._respawnTime[0].innerHTML = left.toString();\r\n\r\n            if (left === 0) {\r\n                clearInterval(interval);\r\n                this._fadeIns.fadeOut(1000, () => {\r\n                    this._popupWindows.css(\"display\", \"none\");\r\n                    this._doublePopupHolder.css(\"display\", \"none\");\r\n                    this._popupWindows.removeClass(\"goLeft\");\r\n                });\r\n            }\r\n        }, 1000);\r\n    }\r\n}","import { StandardDeviation, Average } from \"../Utilities/UtilityFunctions\";\r\nimport { ServerAdapter } from \"../Server/ServerAdapter\";\r\n\r\nexport class LatencyResolver {\r\n    public static REQUEST_PING_EVERY: number = 5;\r\n    public static PING_DATA_POINTS: number = 100;\r\n\r\n    public Latency: string;\r\n\r\n    private _tryCount: number;\r\n    private _requestedAt: Date | null;\r\n    private _pingData: Array<number>;\r\n\r\n    constructor(serverAdapter: ServerAdapter) {\r\n        this._tryCount = 0;\r\n        this._requestedAt = null;\r\n        this._pingData = new Array<number>();\r\n        this.Latency = \"...\";\r\n\r\n        serverAdapter.OnPingRequest.Bind(() => {\r\n            if (this._requestedAt) {\r\n                this.AddData(new Date().getTime() - this._requestedAt.getTime());\r\n                this._requestedAt = null;\r\n            }\r\n        });\r\n    }\r\n\r\n    public TryRequestPing(): boolean {\r\n        if (++this._tryCount % LatencyResolver.REQUEST_PING_EVERY === 0) {\r\n            this._requestedAt = new Date();\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private AddData(timeElapsed: number): void {\r\n        if (this._pingData.length === LatencyResolver.PING_DATA_POINTS) {\r\n            this._pingData.shift();\r\n        }\r\n\r\n        this._pingData.push(timeElapsed);\r\n\r\n        this.UpdateLatency();\r\n    }\r\n\r\n    private UpdateLatency(): void {\r\n        var validItemCount: number = 0,\r\n            totalValue: number = 0,\r\n            standardDeviation: number = StandardDeviation(this._pingData),\r\n            baseAverage: number = Average(this._pingData);\r\n\r\n        for (var i = 0; i < this._pingData.length; i++) {\r\n            if (Math.abs(this._pingData[i] - baseAverage) <= standardDeviation) {\r\n                validItemCount++;\r\n                totalValue += this._pingData[i];\r\n            }\r\n        }\r\n\r\n        if (validItemCount > 0) {\r\n            this.Latency = Math.round(totalValue / validItemCount).toString() + \"ms\";\r\n        }\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\nimport { UserShipManager } from \"../User/UserShipManager\";\r\nimport { Ship } from \"./Ship\";\r\nimport { IPayloadData, IShipData } from \"../Server/IPayloadDefinitions\";\r\n\r\nexport class ShipManager implements eg.IUpdateable {\r\n    public UserShipManager: UserShipManager | undefined;\r\n\r\n    private _ships: { [id: number]: Ship };\r\n\r\n    constructor(private _viewport: eg.Bounds.BoundingRectangle, private _scene: eg.Rendering.Scene2d, private _collisionManager: eg.Collision.CollisionManager, private _contentManager: eg.Content.ContentManager) {\r\n        this._ships = {};\r\n    }\r\n\r\n    public Initialize(userShipManager: UserShipManager): void {\r\n        this.UserShipManager = userShipManager;\r\n    }\r\n\r\n    public UpdateViewport(viewport: eg.Size2d): void {\r\n        this._viewport.Size = viewport;\r\n    }\r\n\r\n    public GetShip(id: number): Ship {\r\n        return this._ships[id];\r\n    }\r\n\r\n    public RemoveShip(shipID: number): void {\r\n        delete this._ships[shipID];\r\n    }\r\n\r\n    public LoadPayload(payload: IPayloadData): void {\r\n        var shipPayload: Array<IShipData> = payload.Ships,\r\n            ship: IShipData;\r\n\r\n        for (var i = 0; i < shipPayload.length; i++) {\r\n            ship = shipPayload[i];\r\n\r\n            if (!this._ships[ship.ID]) {\r\n                if (this.UserShipManager && ship.ID === this.UserShipManager.ControlledShipId) {\r\n                    ship.UserControlled = true;\r\n                } else {\r\n                    ship.UserControlled = false;\r\n                }\r\n\r\n                this._ships[ship.ID] = new Ship(ship, this._contentManager);\r\n                this._collisionManager.Monitor(this._ships[ship.ID]);\r\n                this._scene.Add(this._ships[ship.ID].Graphic);\r\n\r\n                this._ships[ship.ID].OnDisposed.Bind((ship) => {\r\n                    delete this._ships[(<Ship>ship).ID];\r\n                });\r\n            } else {\r\n                this._ships[ship.ID].LoadPayload(ship);\r\n            }\r\n\r\n            if (ship.Disposed) {\r\n                this._ships[ship.ID].Destroy(!ship.LifeController.Alive);\r\n            }\r\n        }\r\n\r\n        if (this.UserShipManager) {\r\n            this.UserShipManager.LoadPayload(payload);\r\n        }\r\n    }\r\n\r\n    public Update(gameTime: eg.GameTime): void {\r\n        // Update positions first\r\n        for (var id in this._ships) {\r\n            this._ships[id].Update(gameTime);\r\n        }\r\n\r\n        if (this.UserShipManager) {\r\n            this.UserShipManager.Update(gameTime);\r\n        }\r\n\r\n        // Check for \"in-bounds\" to see what ships we should destroy\r\n        for (var id in this._ships) {\r\n            if (!this._ships[id].Bounds.IntersectsRectangle(this._viewport)) {\r\n                this._ships[id].Destroy();\r\n            }\r\n        }\r\n    }\r\n}\r\n","import * as eg from \"../../../endgate/endgate\";\r\nimport { Bullet } from \"./Bullet\";\r\nimport { IPayloadData, IBulletData } from \"../Server/IPayloadDefinitions\";\r\n\r\nexport class BulletManager {\r\n    private _bullets: { [id: number]: Bullet };\r\n\r\n    constructor(private _viewport: eg.Bounds.BoundingRectangle, private _scene: eg.Rendering.Scene2d, private _contentManager: eg.Content.ContentManager) {\r\n        this._bullets = {};\r\n    }\r\n\r\n    public UpdateViewport(viewport: eg.Size2d): void {\r\n        this._viewport.Size = viewport;\r\n    }\r\n\r\n    public LoadPayload(payload: IPayloadData): void {\r\n        var bulletPayload: Array<IBulletData> = payload.Bullets,\r\n            bullet: IBulletData;\r\n\r\n        for (var i = 0; i < bulletPayload.length; i++) {\r\n            bullet = bulletPayload[i];\r\n\r\n            if (!this._bullets[bullet.ID]) {\r\n                this._bullets[bullet.ID] = new Bullet(bullet, this._contentManager);\r\n                this._scene.Add(this._bullets[bullet.ID].Graphic);\r\n\r\n                this._bullets[bullet.ID].OnDisposed.Bind((bullet: any) => {\r\n                    delete this._bullets[(<Bullet>bullet).ID];\r\n                });\r\n            } else {\r\n                this._bullets[bullet.ID].LoadPayload(bullet);\r\n            }\r\n\r\n            if (bullet.Disposed) {\r\n                if (bullet.Collided) {\r\n                    this._bullets[bullet.ID].MovementController.Position = bullet.CollidedAt;\r\n                }\r\n\r\n                this._bullets[bullet.ID].Destroy(bullet.Collided);\r\n            }\r\n        }\r\n    }\r\n\r\n    public Update(gameTime: eg.GameTime): void {\r\n        // Update positions first\r\n        for (var id in this._bullets) {\r\n            this._bullets[id].Update(gameTime);\r\n        }\r\n\r\n        // Update positions first\r\n        for (var id in this._bullets) {\r\n            // Check for \"in-bounds\" to see what bullets we should destroy\r\n            if (!this._bullets[id].Bounds.IntersectsRectangle(this._viewport)) {\r\n                this._bullets[id].Destroy(false);\r\n            }\r\n        }\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\nimport { IPayloadData, IPowerupData } from \"../Server/IPayloadDefinitions\";\r\nimport { HealthPack } from \"./HealthPack\";\r\nimport { Powerup } from \"./Powerup\";\r\n\r\nexport class PowerupManager {\r\n    private _powerups: { [id: number]: Powerup; };\r\n\r\n    constructor(private _viewport: eg.Bounds.BoundingRectangle, private _scene: eg.Rendering.Scene2d, private _contentManager: eg.Content.ContentManager) {\r\n        this._powerups = {};\r\n    }\r\n\r\n    public LoadPayload(payload: IPayloadData): void {\r\n        var powerupPayload: Array<IPowerupData> = payload.Powerups,\r\n            powerup: IPowerupData;\r\n\r\n        for (var i = 0; i < powerupPayload.length; i++) {\r\n            powerup = powerupPayload[i];\r\n\r\n            if (!this._powerups[powerup.ID]) {\r\n                if (powerup.Type === 1) {\r\n                    this._powerups[powerup.ID] = new HealthPack(powerup, this._contentManager);\r\n                }\r\n\r\n                this._scene.Add(this._powerups[powerup.ID].Graphic);\r\n\r\n                this._powerups[powerup.ID].OnDisposed.Bind((powerup) => {\r\n                    delete this._powerups[(<Powerup>powerup).ID];\r\n                });\r\n            } else {\r\n                this._powerups[powerup.ID].LoadPayload(powerup);\r\n            }\r\n\r\n            if (powerup.Disposed) {\r\n                this._powerups[powerup.ID].Destroy();\r\n            }\r\n        }\r\n    }\r\n\r\n    public Update(gameTime: eg.GameTime): void {\r\n        // Update positions first\r\n        for (var id in this._powerups) {\r\n            this._powerups[id].Update(gameTime);\r\n        }\r\n\r\n        // Update positions first\r\n        for (var id in this._powerups) {\r\n            // Check for \"in-bounds\" to see what powerups we should destroy\r\n            if (!this._powerups[id].Bounds.IntersectsRectangle(this._viewport)) {\r\n                this._powerups[id].Destroy();\r\n            }\r\n        }\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\nimport { ServerGhost } from \"./ServerGhost\";\r\nimport { GameInformer } from \"./GameInformer\";\r\nimport { UpdateRate } from \"./UpdateRate\";\r\nimport { DrawRate } from \"./DrawRate\";\r\nimport { PayloadRate } from \"./PayloadRate\";\r\nimport { ConnectionMonitor } from \"./ConnectionMonitor\";\r\nimport { Game } from \"../Game\";\r\nimport { ServerAdapter } from \"../Server/ServerAdapter\";\r\nimport { IPayloadData } from \"../Server/IPayloadDefinitions\";\r\n\r\nexport class DebugManager {\r\n    public static DEBUG_FLAG: string = \"debug\";\r\n\r\n    private _serverGhost: ServerGhost | undefined;\r\n    private _gameInformer: GameInformer | undefined;\r\n    private _updateRate: UpdateRate | undefined;\r\n    private _drawRate: DrawRate | undefined;\r\n    private _payloadRate: PayloadRate | undefined;\r\n    private _connectionMonitor: ConnectionMonitor | undefined;\r\n    private _debugMode: boolean;\r\n\r\n    constructor(myShipId: number, game: Game, serverAdapter: ServerAdapter) {\r\n        // @ts-ignore\r\n        this._debugMode = this.GetUrlVars()[DebugManager.DEBUG_FLAG] === \"true\";\r\n\r\n        if (this._debugMode) {\r\n            this._serverGhost = new ServerGhost(myShipId, game.Scene, game.Content);\r\n            this._gameInformer = new GameInformer(game.Scene);\r\n            this._updateRate = new UpdateRate(this._gameInformer, game);\r\n            this._drawRate = new DrawRate(this._gameInformer);\r\n            this._payloadRate = new PayloadRate(this._gameInformer);\r\n            this._connectionMonitor = new ConnectionMonitor(this._gameInformer, serverAdapter);\r\n        }\r\n    }\r\n\r\n    public LoadPayload(payload: IPayloadData): void {\r\n        if (this._debugMode && this._payloadRate && this._serverGhost) {\r\n            this._payloadRate.LoadPayload(payload);\r\n            this._serverGhost.LoadPayload(payload.Ships);\r\n        }\r\n    }\r\n\r\n    public Update(gameTime: eg.GameTime): void {\r\n        if (this._debugMode && this._updateRate && this._drawRate && this._payloadRate && this._gameInformer && this._serverGhost) {\r\n            this._updateRate.Update(gameTime);\r\n            this._drawRate.Update(gameTime);\r\n            this._payloadRate.Update(gameTime);\r\n            this._gameInformer.Update(gameTime);\r\n            this._serverGhost.Update(gameTime);\r\n        }\r\n    }\r\n\r\n    public Draw(context: CanvasRenderingContext2D): void {\r\n        if (this._debugMode && this._drawRate) {\r\n            this._drawRate.Draw(context);\r\n        }\r\n    }\r\n\r\n    private GetUrlVars() {\r\n        var vars = [],\r\n            hash,\r\n            hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');\r\n\r\n        for (var i = 0; i < hashes.length; i++) {\r\n            hash = hashes[i].split('=');\r\n            \r\n            // @ts-ignore\r\n            vars.push(hash[0]);\r\n            // @ts-ignore\r\n            vars[hash[0]] = hash[1];\r\n        }\r\n\r\n        return vars;\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\nimport { Ship } from \"../Ships/Ship\";\r\nimport { IShipData } from \"../Server/IPayloadDefinitions\";\r\n\r\nexport class ServerGhost implements eg.IUpdateable {\r\n    private _ghost: Ship | undefined;\r\n\r\n    constructor(private _myShipId: number, private _scene: eg.Rendering.Scene2d, private _content: eg.Content.ContentManager) {\r\n    }\r\n\r\n    public LoadPayload(payload: Array<IShipData>): void {\r\n        var shipPayload: IShipData;\r\n\r\n        for (var i = 0; i < payload.length; i++) {\r\n            shipPayload = payload[i];\r\n\r\n            if (shipPayload.ID === this._myShipId) {\r\n                if (!this._ghost) {\r\n                    this._ghost = new Ship(shipPayload, this._content);\r\n                    this._ghost.MovementController.UserControlled = false;\r\n                    this._ghost.Graphic.Body.Opacity = .5;\r\n                    this._scene.Add(this._ghost.Graphic);\r\n                } else {\r\n                    this._ghost.LoadPayload(shipPayload);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public Update(gameTime: eg.GameTime): void {\r\n        if (this._ghost) {\r\n            this._ghost.Update(gameTime);\r\n        }\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\n\r\nexport class GameInformer {\r\n    public static ITEM_OFFSET: number = 3;\r\n    public static PADDING: number = 15;\r\n    public static MAX_TEXT_SIZE: eg.Size2d = new eg.Size2d(250, 20);\r\n    public static TITLE_TEXT_COLOR: eg.Graphics.Color = eg.Graphics.Color.White;\r\n    public static HOLDER_BACGROUND_COLOR: eg.Graphics.Color = eg.Graphics.Color.Gray;\r\n    public static TITLE_TEXT_SIZE: number = 13;\r\n    public static VALUE_TEXT_SIZE: number = 12;\r\n    public static TEXT_FONT: eg.Graphics.FontFamily = eg.Graphics.FontFamily.Verdana;\r\n\r\n    private _yOffset: number;\r\n    private _holder: eg.Graphics.Rectangle;\r\n\r\n    constructor(private _scene: eg.Rendering.Scene2d) {\r\n        this._yOffset = GameInformer.PADDING;\r\n        this._holder = new eg.Graphics.Rectangle(0, 0, 0, 0, GameInformer.HOLDER_BACGROUND_COLOR);\r\n        this._holder.Opacity = .3;\r\n        this._holder.Border(2, eg.Graphics.Color.White);\r\n\r\n        this.RepositionHolder();\r\n\r\n        this._scene.Add(this._holder);\r\n    }\r\n\r\n    public AddTextualInformation(title: string): eg.Graphics.Text2d {\r\n        var textBounds = new eg.Bounds.BoundingRectangle(eg.Vector2d.Zero, GameInformer.MAX_TEXT_SIZE),\r\n            titleGraphic: eg.Graphics.Text2d = new eg.Graphics.Text2d(GameInformer.PADDING, this._yOffset + textBounds.Size.HalfHeight, title + \": \", GameInformer.TITLE_TEXT_COLOR),\r\n            valueGraphic: eg.Graphics.Text2d,\r\n            currentHolderSize: eg.Size2d = this._holder.Size.Clone(),\r\n            sizeDifference: eg.Size2d,\r\n            currentChildren = this._holder.GetChildren();\r\n\r\n        titleGraphic.FontSettings.FontWeight = \"bold\";\r\n        titleGraphic.Align = \"left\";\r\n        titleGraphic.FontSettings.FontSize = GameInformer.TITLE_TEXT_SIZE + \"px\";\r\n        titleGraphic.FontSettings.FontFamily = GameInformer.TEXT_FONT;\r\n\r\n        this.ResizeHolder(textBounds);\r\n\r\n        sizeDifference = this._holder.Size.Subtract(currentHolderSize).Multiply(.5);\r\n\r\n        for (var i = 0; i < currentChildren.length; i++) {\r\n            currentChildren[i].Position = currentChildren[i].Position.Subtract(sizeDifference);\r\n        }\r\n\r\n        titleGraphic.Position = titleGraphic.Position.Subtract(this._holder.Size.Multiply(.5));\r\n\r\n        valueGraphic = new eg.Graphics.Text2d(titleGraphic.Position.X + GameInformer.MAX_TEXT_SIZE.Width * 2 / 3 - GameInformer.PADDING, titleGraphic.Position.Y, \"\");\r\n        valueGraphic.Align = \"left\";\r\n        valueGraphic.FontSettings.FontSize = GameInformer.VALUE_TEXT_SIZE + \"px\";\r\n        valueGraphic.FontSettings.FontFamily = GameInformer.TEXT_FONT;\r\n\r\n        this._holder.AddChild(titleGraphic);\r\n        this._holder.AddChild(valueGraphic);\r\n\r\n        return valueGraphic;\r\n    }\r\n\r\n    public AddInformation(graphic: eg.Graphics.Graphic2d): void {\r\n        var bounds = <eg.Bounds.BoundingRectangle>graphic.GetDrawBounds();\r\n\r\n        graphic.Position.Y = this._yOffset + bounds.Size.HalfHeight;\r\n        graphic.Position.X = GameInformer.PADDING + bounds.Size.HalfWidth;\r\n\r\n        this.ResizeHolder(bounds);\r\n\r\n        graphic.Position = graphic.Position.Subtract(this._holder.Size.Multiply(.5));\r\n\r\n        this._holder.AddChild(graphic);\r\n    }\r\n\r\n    public Update(gameTime: eg.GameTime): void {\r\n        this.RepositionHolder();\r\n    }\r\n\r\n    private RepositionHolder(): void {\r\n        var cameraTR = this._scene.Camera.TopRight;\r\n\r\n        this._holder.Position.X = cameraTR.X - this._holder.Size.HalfWidth;\r\n        this._holder.Position.Y = cameraTR.Y + this._holder.Size.HalfHeight;\r\n    }\r\n\r\n    private ResizeHolder(target: eg.Bounds.BoundingRectangle): void {\r\n        var targetFullWidth: number = target.Size.Width + GameInformer.PADDING * 2;\r\n\r\n        this._holder.Size.Width = targetFullWidth;\r\n\r\n        this._yOffset += target.Size.Height + GameInformer.ITEM_OFFSET;\r\n\r\n        this._holder.Size.Height = this._yOffset + GameInformer.PADDING - GameInformer.ITEM_OFFSET;\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\nimport { RateMonitor } from \"./RateMonitor\";\r\nimport { GameInformer } from \"./GameInformer\";\r\n\r\nexport class UpdateRate extends RateMonitor {\r\n    public static TITLE: string = \"Update Rate\"\r\n\r\n    constructor(informer: GameInformer, game: eg.Game) {\r\n        super(UpdateRate.TITLE, informer, game.Configuration.UpdateRate);\r\n    }\r\n\r\n    public Update(gameTime: eg.GameTime): void {\r\n        this.MarkRate();\r\n\r\n        super.Update(gameTime);\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\nimport { GameInformer } from \"./GameInformer\";\r\nimport { UpdateRate } from \"./UpdateRate\";\r\n\r\nexport class RateMonitor {\r\n    public static TEXT_COLOR: eg.Graphics.Color = eg.Graphics.Color.White;\r\n    public static CALCULATE_EVERY: eg.TimeSpan = eg.TimeSpan.FromSeconds(1);\r\n\r\n    private _textNode: eg.Graphics.Text2d;\r\n    private _count: number;\r\n    private _lastCalculatedAt: Date;\r\n\r\n    constructor(title: string, informer: GameInformer, private _targetRate: number) {\r\n        this._textNode = informer.AddTextualInformation(title);\r\n\r\n        this._textNode.Color = RateMonitor.TEXT_COLOR;\r\n        this._textNode.Text = \"...\";\r\n\r\n        this._lastCalculatedAt = new Date();\r\n        this._count = 0;\r\n    }\r\n\r\n    public MarkRate(): void {\r\n        this._count++;\r\n    }\r\n\r\n    public Update(gameTime: eg.GameTime): void {\r\n        if (eg.TimeSpan.DateSpan(this._lastCalculatedAt, gameTime.Now).Seconds >= UpdateRate.CALCULATE_EVERY.Seconds) {\r\n            this._textNode.Text = this._count.toString() + \"  |  \" + Math.round((this._count / this._targetRate) * 100).toString() + \"%\";\r\n\r\n            this._count = 0;\r\n            this._lastCalculatedAt = gameTime.Now;\r\n        }\r\n    }\r\n}","import { RateMonitor } from \"./RateMonitor\";\r\nimport { GameInformer } from \"./GameInformer\";\r\n\r\nexport class DrawRate extends RateMonitor {\r\n    public static TITLE: string = \"Draw Rate\"\r\n\r\n    constructor(informer: GameInformer) {\r\n        super(DrawRate.TITLE, informer, 60);\r\n    }\r\n\r\n    public Draw(context: CanvasRenderingContext2D): void {\r\n        this.MarkRate();\r\n    }\r\n}","import { Game } from \"../Game\";\r\nimport { RateMonitor } from \"./RateMonitor\";\r\nimport { GameInformer } from \"./GameInformer\";\r\nimport { IGameConfiguration } from \"../Server/IConfigurationDefinitions\";\r\nimport { IPayloadData } from \"../Server/IPayloadDefinitions\";\r\n\r\nexport class PayloadRate extends RateMonitor {\r\n    public static TITLE: string = \"Payload Rate\"\r\n\r\n    constructor(informer: GameInformer) {\r\n        super(PayloadRate.TITLE, informer, 1000 / (<IGameConfiguration>Game.GameConfiguration.gameConfig).DRAW_INTERVAL);\r\n    }\r\n\r\n    public LoadPayload(payload: IPayloadData): void {\r\n        this.MarkRate();\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\nimport { GameInformer } from \"./GameInformer\";\r\nimport { ServerAdapter } from \"../Server/ServerAdapter\";\r\nimport { HubConnection } from \"@aspnet/signalr\";\r\n\r\nenum ConnectionState {\r\n    Connecting = 0,\r\n    Connected = 1,\r\n    Reconnecting = 2,\r\n    Disconnected = 4\r\n}\r\n\r\nexport class ConnectionMonitor {\r\n    public static TITLE: string = \"Connection State\";\r\n    // public static STATE_MAP: { [state: string]: eg.Graphics.Color } = {\r\n    //     Connecting: eg.Graphics.Color.Gray,\r\n    //     Connected: eg.Graphics.Color.LightGreen,\r\n    //     Reconnecting: eg.Graphics.Color.LightGoldenRodYellow,\r\n    //     Disconnected: eg.Graphics.Color.Red\r\n    // };\r\n\r\n    private _connection: HubConnection;\r\n    private _textNode: eg.Graphics.Text2d;\r\n\r\n    constructor(informer: GameInformer, serverAdapter: ServerAdapter) {\r\n        this._textNode = informer.AddTextualInformation(ConnectionMonitor.TITLE);\r\n        this._textNode.FontSettings.FontWeight = \"bold\";\r\n\r\n        this._connection = serverAdapter.Connection;\r\n\r\n        this.UpdateText();\r\n    }\r\n\r\n    private UpdateText(): void {\r\n        this._textNode.Color = this.DetermineColor();\r\n        this._textNode.Text = this.GetStateText();\r\n    }\r\n\r\n    private DetermineColor(): eg.Graphics.Color {\r\n        return eg.Graphics.Color.LightGreen;\r\n    }\r\n\r\n    private GetStateText(): string {\r\n        return ConnectionState[(<any>this._connection).state]\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\nimport { IPayloadData } from \"../Server/IPayloadDefinitions\";\r\nimport { ShipStatMonitor } from \"./ShipStatMonitor\";\r\nimport { HealthMonitor } from \"./HealthMonitor\";\r\nimport { ExperienceMonitor } from \"./ExperienceMonitor\";\r\nimport { RankingsManager } from \"./RankingsManager\";\r\nimport { EnvironmentMonitor } from \"./EnvironmentMonitor\";\r\nimport { LeaderboardManager } from \"./LeaderboardManager\";\r\nimport { DeathScreen } from \"./DeathScreen\";\r\nimport { NotificationManager } from \"./NotificationManager\";\r\nimport { UserInformationManager } from \"./UserInformationManager\";\r\nimport { Chat } from \"./Chat\";\r\nimport { ShipManager } from \"../Ships/ShipManager\";\r\nimport { AreaRenderer } from \"../Space/AreaRenderer\";\r\nimport { ServerAdapter } from \"../Server/ServerAdapter\";\r\nimport { IClientInitialization } from \"../Server/IClientInitialization\";\r\nimport { Ship } from \"../Ships/Ship\";\r\n\r\nexport class HUDManager {\r\n    private _gameHUD: JQuery = $(\"#gameHUD\");\r\n    private _doublePopupHolder: JQuery = $(\"#doublePopupHolder\");\r\n    private _gameHUDHeight: number;\r\n    private _locationStats: JQuery = $(\"#LocationStatisticsHolder\");\r\n    private _shipStats: JQuery = $(\"#StatisticHolder\");\r\n    private _logout: JQuery = $(\"#logout\");\r\n    private _shipStatMonitor: ShipStatMonitor;\r\n    private _shipHealthMonitor: HealthMonitor;\r\n    private _shipExperienceMonitor: ExperienceMonitor;\r\n    private _rankingsManager: RankingsManager;\r\n    private _environmentMonitor: EnvironmentMonitor;\r\n    private _leaderboardManager: LeaderboardManager;\r\n    private _deathScreen: DeathScreen;\r\n    private _notificationManager: NotificationManager;\r\n    private _userInformationManager: UserInformationManager;\r\n    private _chat: Chat;\r\n    private _myShipId: number;\r\n\r\n    constructor(initialization: IClientInitialization, private _shipManager: ShipManager, areaRenderer: AreaRenderer, keyboard: eg.Input.KeyboardHandler, serverAdapter: ServerAdapter) {\r\n        this._myShipId = initialization.ShipID;\r\n        this._gameHUDHeight = (<number>this._gameHUD.height());\r\n        this._shipStatMonitor = new ShipStatMonitor();\r\n        this._shipHealthMonitor = new HealthMonitor();\r\n        this._shipExperienceMonitor = new ExperienceMonitor();\r\n        this._rankingsManager = new RankingsManager();\r\n        this._environmentMonitor = new EnvironmentMonitor(areaRenderer, this._shipManager.UserShipManager);\r\n        this._leaderboardManager = new LeaderboardManager(this._myShipId, keyboard, serverAdapter);\r\n        this._deathScreen = new DeathScreen();\r\n        this._notificationManager = new NotificationManager(serverAdapter);\r\n        this._userInformationManager = new UserInformationManager(initialization.UserInformation);\r\n        this._chat = new Chat(initialization.UserInformation, serverAdapter);\r\n\r\n        this._logout.click(() => {\r\n            // Clear cookies\r\n            var c = document.cookie.split(\";\");\r\n            for (var i = 0; i < c.length; i++) {\r\n                var e = c[i].indexOf(\"=\");\r\n                var n = e > -1 ? c[i].substr(0, e) : c[i];\r\n                document.cookie = n + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT\";\r\n            }\r\n\r\n            window.location.reload(true);\r\n        });\r\n    }\r\n\r\n    public OnScreenResize(newViewport: eg.Size2d): void {\r\n        this._gameHUD.css(\"width\", newViewport.Width);\r\n        this._gameHUD.css(\"height\", this._gameHUDHeight);\r\n        this._gameHUD.css(\"top\", newViewport.Height);\r\n        this._shipHealthMonitor.OnScreenResize();\r\n        this.CenterDoublePopup(newViewport);\r\n\r\n        // Remove or Add HUD objects\r\n        if (newViewport.Width <= 1370) {\r\n            this._locationStats.css(\"display\", \"none\");\r\n        }\r\n        else {\r\n            this._locationStats.css(\"display\", \"block\");\r\n        }\r\n\r\n        // Remove or Add HUD objects\r\n        if (newViewport.Width <= 1177) {\r\n            this._shipStats.css(\"display\", \"none\");\r\n        }\r\n        else {\r\n            this._shipStats.css(\"display\", \"block\");\r\n        }\r\n    }\r\n\r\n    public CenterDoublePopup(newViewport: eg.Size2d): void {\r\n        // The left is handled by the css\r\n        this._doublePopupHolder.css(\"top\", (newViewport.Height / 2) -(<number>this._doublePopupHolder.height()) / 2);\r\n    }\r\n\r\n    public LoadPayload(payload: IPayloadData): void {\r\n        this._rankingsManager.LoadPayload(payload);\r\n        this._environmentMonitor.LoadPayload(payload);\r\n        this._deathScreen.LoadPayload(payload);\r\n        this._notificationManager.LoadPayload(payload);\r\n    }\r\n\r\n    public Update(gameTime: eg.GameTime): void {\r\n        var ship: Ship = this._shipManager.GetShip(this._myShipId);\r\n\r\n        if (ship) {\r\n            this._shipStatMonitor.Update(ship);\r\n            this._shipHealthMonitor.Update(ship);\r\n            this._shipExperienceMonitor.Update(ship);\r\n            this._environmentMonitor.Update(ship);\r\n            this._rankingsManager.Update(ship);\r\n        }\r\n    }\r\n}","import { Ship } from \"../Ships/Ship\";\r\nimport { ShipLifeController } from \"../Ships/ShipLifeController\";\r\n\r\nexport class ShipStatMonitor {\r\n    private _lastSpeed: number;\r\n    private _lastIncreasedLife: number;\r\n    private _lastDamage: number;\r\n\r\n    private _speedHolder: JQuery = $(\"#Speed\");\r\n    private _healthHolder: JQuery = $(\"#IncreasedHealth\");\r\n    private _damageHolder: JQuery = $(\"#IncreasedDamage\");\r\n\r\n    constructor() {\r\n        this._lastSpeed = 0;\r\n        this._lastIncreasedLife = 0;\r\n        this._lastDamage = 0;\r\n    }\r\n\r\n    public Update(ship: Ship): void {\r\n        var speed = Math.round(Math.sqrt(Math.pow(ship.MovementController.Velocity.X, 2) + Math.pow(ship.MovementController.Velocity.Y, 2))),\r\n            increasedLife = ship.LifeController.MaxHealth - ShipLifeController.START_LIFE,\r\n            increasedDamage = Math.round((ship.LevelManager.Level - 1) * Ship.DAMAGE_INCREASE_RATE * 10) / 10;\r\n\r\n        if (this._lastSpeed !== speed) {\r\n            this._speedHolder[0].innerHTML = speed.toString();\r\n            this._lastSpeed = speed;\r\n        }\r\n\r\n        if (this._lastIncreasedLife !== increasedLife) {\r\n            this._healthHolder[0].innerHTML = increasedLife.toString();\r\n            this._lastIncreasedLife = increasedLife;\r\n        }\r\n\r\n        if (this._lastDamage !== increasedDamage) {\r\n            this._damageHolder[0].innerHTML = increasedDamage.toString();\r\n            this._lastDamage = increasedDamage;\r\n        }\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\nimport { ShipLifeController } from \"../Ships/ShipLifeController\";\r\nimport { Ship } from \"../Ships/Ship\";\r\n\r\nexport class HealthMonitor {\r\n    public static ANIMATE_SPEED: number = 500;\r\n\r\n    private _maxHealth: number = ShipLifeController.START_LIFE;\r\n    private _lastHealth: number;\r\n    private _currentHealthBar: JQuery = $(\"#Health\");\r\n    private _currentHealthHeart: JQuery = $(\"#HealthHeart\");\r\n    private _whiteHeartIndicator: JQuery = $(\"#WhiteHealthHeart\");\r\n    private _healthHolder: JQuery = $(\"#HealthHolder\");\r\n    private _healthText: JQuery = $(\"#HealthText\");\r\n    private _gameWrapper: JQuery = $(\"#gameWrapper\");\r\n    private _halfHeartWidth: number;\r\n    private _whiteHeartVisible: boolean = true;\r\n\r\n    constructor() {\r\n        this._lastHealth = 0;\r\n        this._halfHeartWidth = .5 * (<number>this._currentHealthHeart.width());\r\n    }\r\n\r\n    public OnScreenResize(): void {\r\n        this._lastHealth = -1;\r\n    }\r\n\r\n    public Update(ship: Ship): void {\r\n        if (ship.LifeController.Health !== this._lastHealth) {\r\n            this._maxHealth = ship.LifeController.MaxHealth;\r\n            // If we're taking damage\r\n            if (ship.LifeController.Health < this._lastHealth) {\r\n                if (ship.LifeController.Health <= 0) {\r\n                    this._whiteHeartIndicator.fadeOut(HealthMonitor.ANIMATE_SPEED);\r\n                    this._whiteHeartVisible = false;\r\n                }\r\n            }\r\n            else {\r\n                if (!this._whiteHeartVisible) {\r\n                    this._whiteHeartVisible = true;\r\n                    this._whiteHeartIndicator.fadeIn(HealthMonitor.ANIMATE_SPEED);\r\n                }\r\n            }\r\n\r\n            this._lastHealth = ship.LifeController.Health;\r\n            this._healthText[0].innerHTML = this._lastHealth + \"/\" + this._maxHealth;\r\n            this._currentHealthBar.stop(true);\r\n            this._currentHealthHeart.stop(true);\r\n\r\n            var lifePercentage: number = ship.LifeController.HealthPercent,\r\n                holderWidth: number = (<number>this._healthHolder.width()),\r\n                heartLeft: number = Math.min(Math.max((holderWidth * lifePercentage) - this._halfHeartWidth, 0), holderWidth - 2 * this._halfHeartWidth),\r\n                barColor: eg.Graphics.Color;\r\n\r\n            this._currentHealthHeart.removeClass(\"good hurt bad\");\r\n\r\n            if (lifePercentage <= ShipLifeController.BAD_THRESHOLD) {\r\n                this._currentHealthHeart.addClass(\"bad\");\r\n                barColor = ShipLifeController.BAD_COLOR;\r\n            }\r\n            else if (lifePercentage <= ShipLifeController.HURT_THRESHOLD) {\r\n                this._currentHealthHeart.addClass(\"hurt\");\r\n                barColor = ShipLifeController.HURT_COLOR;\r\n            }\r\n            else {\r\n                this._currentHealthHeart.addClass(\"good\");\r\n                barColor = ShipLifeController.GOOD_COLOR;\r\n            }\r\n\r\n            this._currentHealthHeart.animate({ left: heartLeft }, HealthMonitor.ANIMATE_SPEED, \"easeOutExpo\");\r\n            this._currentHealthBar.animate({ width: (lifePercentage * 100) + '%', backgroundColor: barColor }, HealthMonitor.ANIMATE_SPEED, \"easeOutExpo\");\r\n        }\r\n    }\r\n}\r\n","import * as eg from \"../../../endgate/endgate\";\r\nimport { Ship } from \"../Ships/Ship\";\r\n\r\nexport class ExperienceMonitor {\r\n    public static ANIMATE_SPEED: number = 500;\r\n\r\n    private _lastExperience: number;\r\n    private _lastLevel: number;\r\n    private _lastExperienceToNextLevel: number;\r\n    private _currentExperience: JQuery = $(\"#Experience\");\r\n    private _experienceBar: JQuery = $(\"#ExperienceBar\");\r\n    private _currentLevel: JQuery = $(\"#Level\");\r\n    private _levelNotification: JQuery = $(\"#levelNotification\");\r\n    private _currentLevelNotification: JQuery = $(\"#CurrentLevel_Notification\");\r\n    private _popupHolder: JQuery = $(\"#popUpHolder\");\r\n\r\n    constructor() {\r\n        this._lastExperience = 0;\r\n        this._lastLevel = -1;\r\n        this._lastExperienceToNextLevel = 0;\r\n    }\r\n\r\n    public Update(ship: Ship): void {\r\n        var that: ExperienceMonitor = this;\r\n\r\n        if (ship.LevelManager.Experience !== this._lastExperience || ship.LevelManager.Level !== this._lastLevel) {\r\n            var experienceIncrease, experiencePercentage;\r\n\r\n            // If the level has changed we need to animate a full bar to then re-fill\r\n            if (ship.LevelManager.Level !== this._lastLevel) {\r\n                experienceIncrease = this._lastExperienceToNextLevel - this._lastExperience + ship.LevelManager.Experience;\r\n\r\n                this._experienceBar.css('width', '0%'); // Reset to 0 so when we animate we're animating forward, not backward\r\n                this._popupHolder.css(\"display\", \"block\");\r\n                this._currentLevelNotification[0].innerHTML = ship.LevelManager.Level.toString();\r\n                this._levelNotification.animate({ top: 0 }, 1000).delay(3000).animate({ top: -234 }, 1000, function () {\r\n                    that._popupHolder.css(\"display\", \"none\");\r\n                });\r\n            }\r\n            else {\r\n                experienceIncrease = ship.LevelManager.Experience - this._lastExperience;\r\n            }\r\n\r\n            this._currentExperience[0].innerHTML = ship.LevelManager.Experience + \"/\" + ship.LevelManager.ExperienceToNextLevel;\r\n\r\n            experiencePercentage = (ship.LevelManager.Experience / ship.LevelManager.ExperienceToNextLevel) * 100;                \r\n\r\n            this._currentExperience.stop(true);\r\n            this._currentExperience.animate({ color: \"#FFFFFF\" }, ExperienceMonitor.ANIMATE_SPEED).animate({ color: \"#7F7F7F\" }, ExperienceMonitor.ANIMATE_SPEED);\r\n\r\n            this._experienceBar.animate({ width: (experiencePercentage) + '%' }, ExperienceMonitor.ANIMATE_SPEED, \"easeOutExpo\");\r\n\r\n            this._lastLevel = ship.LevelManager.Level;\r\n            this._lastExperience = ship.LevelManager.Experience;\r\n            this._lastExperienceToNextLevel = ship.LevelManager.ExperienceToNextLevel;\r\n\r\n            this._currentLevel[0].innerHTML = ship.LevelManager.Level.toString();\r\n        }\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\nimport { IPayloadData } from \"../Server/IPayloadDefinitions\";\r\nimport { Ship } from \"../Ships/Ship\";\r\n\r\nexport class RankingsManager {\r\n    public static KO_FADE_DURATION: eg.TimeSpan = eg.TimeSpan.FromSeconds(3);\r\n\r\n    private _myPosition: number = 0; // Initially set to a very high value so we flash green on leaderboard position first update\r\n    private _globalRanking: JQuery = $(\"#GlobalRanking\");\r\n    private _globalRankingLB: JQuery = $(\"#GlobalRankingLB\");\r\n    private _killsEle: JQuery = $(\"#Kills\");\r\n    private _deathsEle: JQuery = $(\"#Deaths\");\r\n    private _kdRatioEle: JQuery = $(\"#KDRatio\");\r\n    private _lastKills: number;\r\n    private _lastDeaths: number;\r\n    private _lastOutOf: number;\r\n    private _koStatusCount: number;\r\n    private _initialLoad: boolean;\r\n\r\n    constructor() {\r\n        this._koStatusCount = this._lastKills = 0;\r\n        this._initialLoad = true;\r\n        this._lastDeaths = 0;\r\n        this._lastOutOf = 0;\r\n    }\r\n\r\n    public LoadPayload(payload: IPayloadData): void {\r\n        this.UpdateLeaderboard(payload.LeaderboardPosition, payload.ShipsInWorld);\r\n        this.UpdateKillsDeaths(payload.Kills, payload.Deaths);\r\n    }\r\n\r\n    public Update(ship: Ship): void {\r\n        if (this._initialLoad) {\r\n            this._initialLoad = false;\r\n            this._koStatusCount = 0;\r\n            return;\r\n        }\r\n\r\n        while (this._koStatusCount !== 0) {                \r\n            ship.Graphic.Status(\"K.O.\", 50, eg.Graphics.Color.White, RankingsManager.KO_FADE_DURATION);\r\n\r\n            this._koStatusCount--;\r\n        }\r\n    }\r\n\r\n    private UpdateLeaderboard(newPosition: number, outOf: number): void {\r\n        if (this._myPosition != newPosition || outOf !== this._lastOutOf) {\r\n            if (this._myPosition && this._myPosition != newPosition) {\r\n                this._globalRanking.stop(true);\r\n                this._globalRanking.animate({ color: \"#FFFFFF\" }, 500).animate({ color: \"#7F7F7F\" }, 500);\r\n            }\r\n\r\n            this._myPosition = newPosition;\r\n            this._lastOutOf = outOf;\r\n\r\n            this._globalRanking[0].innerHTML = this._myPosition.toString();\r\n            this._globalRankingLB[0].innerHTML = this._myPosition + \" of \" + outOf;\r\n        }\r\n    }\r\n\r\n    private UpdateKillsDeaths(kills: number, deaths: number): void {\r\n        if (kills != this._lastKills || deaths != this._lastDeaths) {\r\n            if (kills != this._lastKills) {\r\n                this._koStatusCount = kills - this._lastKills;\r\n                this._killsEle.stop(true);\r\n                this._killsEle.animate({ color: \"#7F7F7F\" }, 500).animate({ color: \"#FFFFFF\" }, 500);\r\n                this._killsEle[0].innerHTML = kills.toString();\r\n            }\r\n\r\n            if (deaths != this._lastDeaths) {\r\n                this._deathsEle.stop(true);\r\n                this._deathsEle.animate({ color: \"#7F7F7F\" }, 500).animate({ color: \"#FFFFFF\" }, 500);\r\n                this._deathsEle[0].innerHTML = deaths.toString();\r\n            }\r\n\r\n            var finalRatio: string;\r\n\r\n            if (deaths === 0 && kills !== 0) {\r\n                finalRatio = \"∞\";\r\n            }\r\n            else if (deaths === 0 && kills === 0) {\r\n                finalRatio = \"\";\r\n            }\r\n            else {\r\n                var kRatio: number,\r\n                    dRatio: number;\r\n\r\n                if (kills <= deaths && kills !== 0) {\r\n                    kRatio = 1;\r\n                    dRatio = Math.round((deaths / kills) * 10) / 10\r\n            }\r\n                else {\r\n                    kRatio = Math.round((kills / deaths) * 10) / 10;\r\n                    dRatio = 1;\r\n                }\r\n\r\n                finalRatio = kRatio + \":\" + dRatio;\r\n            }\r\n\r\n            this._kdRatioEle[0].innerHTML = finalRatio;\r\n\r\n            this._lastKills = kills;\r\n            this._lastDeaths = deaths;\r\n        }\r\n    }\r\n}","import { AreaRenderer } from \"../Space/AreaRenderer\";\r\nimport { UserShipManager } from \"../User/UserShipManager\";\r\nimport { IPayloadData } from \"../Server/IPayloadDefinitions\";\r\nimport { Ship } from \"../Ships/Ship\";\r\n\r\nexport class EnvironmentMonitor {\r\n    private _latency: JQuery = $(\"#Latency\");\r\n    private _worldTargets: JQuery = $(\"#WorldTargets\");\r\n    private _worldBullets: JQuery = $(\"#WorldBullets\");\r\n    private _area: JQuery = $(\"#Area\");\r\n\r\n    constructor(private _areaRenderer: AreaRenderer, private _userShipManager: UserShipManager | undefined) { }\r\n\r\n    public LoadPayload(payload: IPayloadData): void {\r\n        if (this._userShipManager) {\r\n            this._latency[0].innerHTML = this._userShipManager.LatencyResolver.Latency;\r\n        }\r\n        this._worldBullets[0].innerHTML = payload.BulletsInWorld.toString();\r\n        this._worldTargets[0].innerHTML = payload.ShipsInWorld.toString();\r\n    }\r\n\r\n    public Update(ship: Ship): void {\r\n        this._area[0].innerHTML = this._areaRenderer.AreaFromPosition(ship.MovementController.Position).toString();\r\n    }\r\n}","import { ServerAdapter } from \"../Server/ServerAdapter\";\r\nimport { IPayloadData } from \"../Server/IPayloadDefinitions\";\r\n\r\nexport class NotificationManager {\r\n    private controlsNCredits: JQuery = $(\"#ControlsNCredits\");\r\n    private showInfoButton: JQuery = $(\"#ShowInfo\");\r\n    private notificationHolder: JQuery = $(\"#NotificationHolder\");\r\n    private notificationBase: JQuery = $(\".Notification\");\r\n    private notifications: JQuery = $(\"#Notifications\");\r\n    private notificationBaseHeight: number = (<number>$(\".Notification\").height()) + parseInt($(\".Notification\").css(\"margin-bottom\"));\r\n    private controlsNCreditsHeight: number = (<number>$(\"#ControlsNCredits\").height());\r\n    private notificationHalfHeight: number = 50;\r\n    private initialControlsShowFor: number = 7000; // Show the controls info for X milliseconds\r\n    private notifyTime: number = 4000;\r\n\r\n    constructor(serverAdapter: ServerAdapter) {\r\n        this.showInfoButton.click(() => {\r\n            if (this.showInfoButton.hasClass(\"active\")) {\r\n                this.hideInfo();\r\n                this.showInfoButton.removeClass(\"active\");\r\n            } else {\r\n                this.showInfo();\r\n                this.showInfoButton.addClass(\"active\");\r\n            }\r\n        });\r\n\r\n        this.showInfoButton.click();\r\n        setTimeout(() => {\r\n            // Only hide if it hasn't been hidden already\r\n            if (this.showInfoButton.hasClass(\"active\")) {\r\n                this.showInfoButton.click();\r\n            }\r\n        }, this.initialControlsShowFor);\r\n\r\n        serverAdapter.OnForcedDisconnct.Bind(() => {\r\n            this.Notify(\"You have been disconnected for being Idle too long.  Refresh the page to play again.\", true);\r\n\r\n            serverAdapter.Stop();\r\n        });\r\n\r\n        serverAdapter.OnControlTransferred.Bind(() => {\r\n            this.Notify(\"You have been disconnected!  The control for your ship has been transferred to your other login.\", true);\r\n\r\n            serverAdapter.Stop();\r\n        });\r\n    }\r\n\r\n    private showInfo(): void {\r\n        this.notificationHolder.css(\"display\", \"block\");\r\n        this.notificationHolder.css(\"top\", parseInt(this.notificationHolder.css(\"top\")) - this.controlsNCreditsHeight);\r\n        this.controlsNCredits.fadeIn(1000);\r\n    }\r\n\r\n    private hideInfo(): void {\r\n        this.controlsNCredits.fadeOut(1000, () => {\r\n            this.notificationHolder.css(\"top\", parseInt(this.notificationHolder.css(\"top\")) + this.controlsNCreditsHeight);\r\n            this.notificationHolder.css(\"display\", \"none\");\r\n        });\r\n    }\r\n\r\n    public LoadPayload(payload: IPayloadData): void {\r\n        if (payload.Notification) {\r\n            this.Notify(payload.Notification, false);\r\n        }\r\n    }\r\n\r\n    public Notify(message: string, stayUp: boolean): void {\r\n        var newNotification: JQuery = this.notificationBase.clone(),\r\n            notificationText: JQuery = newNotification.find(\"p\");\r\n\r\n        notificationText[0].innerHTML = message;\r\n\r\n        this.notifications.append(newNotification);\r\n\r\n        this.notificationHolder.css(\"display\", \"block\");\r\n\r\n        this.notificationHolder.css(\"top\", parseInt(this.notificationHolder.css(\"top\")) - this.notificationBaseHeight);\r\n\r\n        newNotification.fadeIn(1000, () => {\r\n            if (!stayUp) {\r\n                setTimeout(() => {\r\n                    newNotification.fadeOut(1000, () => {\r\n                        newNotification.remove();\r\n                        this.notificationHolder.css(\"top\", parseInt(this.notificationHolder.css(\"top\")) + this.notificationBaseHeight);\r\n                        this.notificationHolder.css(\"display\", \"none\");\r\n                    });\r\n                }, this.notifyTime)\r\n        }\r\n        });\r\n\r\n        var textHeightHalf: number = (<number>notificationText.height()) / 2;\r\n\r\n        notificationText.css(\"top\", this.notificationHalfHeight - textHeightHalf);\r\n    }\r\n}","import { IUserInformation } from \"../Server/IUserInformation\";\r\n\r\nexport class UserInformationManager {\r\n    private _displayName: JQuery = $(\"#DisplayName\");\r\n    private _displayNameLB: JQuery = $(\"#DisplayNameLB\");\r\n    private _you: JQuery = $(\"#You\");\r\n    private _youLB: JQuery = $(\"#YouLB\");\r\n\r\n    constructor(userInformation: IUserInformation) {\r\n        this._displayName.text(userInformation.Name);\r\n        this._displayNameLB.text(userInformation.Name);\r\n        this._you.attr(\"src\", userInformation.Photo);\r\n        this._youLB.attr(\"src\", userInformation.Photo);\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\nimport { IUserInformation } from \"../Server/IUserInformation\";\r\nimport { ServerAdapter } from \"../Server/ServerAdapter\";\r\n\r\nexport enum ChatMessageType {\r\n    User = 0,\r\n    System = 1\r\n}\r\n\r\nexport class ChatMessage {\r\n    constructor(public From: string, public Message: string, public Type: ChatMessageType) { }\r\n}\r\n\r\nexport class Chat {\r\n    private _myShipId: number;\r\n    private _document: JQuery<Document> = $(document);\r\n    private _chatContainer: JQuery = $(\"#chat\");\r\n    private _chatBox: JQuery = $(\"<input>\").attr(\"id\", \"chatbox\").attr(\"type\", \"input\").attr(\"autocomplete\", \"off\");\r\n    private _chatBoxContainer: JQuery = $(\"<li>\");\r\n    private _chatBoxVisible: boolean = false;\r\n    private _colors: string[] = [\r\n        eg.Graphics.Color.Red.toString(),\r\n        eg.Graphics.Color.Orange.toString(),\r\n        eg.Graphics.Color.Yellow.toString(),\r\n        eg.Graphics.Color.Green.toString(),\r\n        eg.Graphics.Color.Blue.toString(),\r\n        eg.Graphics.Color.Purple.toString(),\r\n        eg.Graphics.Color.White.toString(),\r\n        eg.Graphics.Color.Cyan.toString()\r\n    ];\r\n\r\n    private _systemMessageColor: string = eg.Graphics.Color.Yellow.toString();\r\n\r\n    constructor(private _userInformation: IUserInformation, serverAdapter: ServerAdapter) {\r\n        serverAdapter.OnMessageReceived.Bind((chat: ChatMessage) => {\r\n            this.AddMessage(chat);\r\n        });\r\n\r\n        this._myShipId = -1;\r\n        this._chatBoxContainer.append(this._chatBox);\r\n        this._document.keydown((key) => {\r\n            switch (key.keyCode) {\r\n                //if they press enter\r\n                case 13:\r\n                    if (this._chatBoxVisible) {\r\n                        var message = this._chatBox.val();\r\n                        if (message) {\r\n                            this.AddMessage(new ChatMessage(this._userInformation.Name, (<string>message), ChatMessageType.User));\r\n                            serverAdapter.Connection.invoke(\"sendMessage\", message);\r\n                        }\r\n                        this.HideChatBox();\r\n                    } else {\r\n                        this.ShowChatBox();\r\n                    }\r\n\r\n                    this.StopPropogation(key);\r\n                    break;\r\n\r\n                //the letter 't'\r\n                case 84:\r\n                    if (!this._chatBoxVisible) {\r\n                        this.ShowChatBox();\r\n                        this.StopPropogation(key);\r\n                    }\r\n                    //determine status of chat box\r\n                    break;\r\n\r\n                //escape key\r\n                case 27: //close the chat box if open\r\n                    if (this._chatBoxVisible) {\r\n                        this.HideChatBox();\r\n                        this.StopPropogation(key);\r\n                    }\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    private StopPropogation(key: any): void {\r\n        key.preventDefault();\r\n        key.stopPropagation();\r\n    }\r\n\r\n    private ShowChatBox() : void {\r\n        this._chatContainer.append(this._chatBoxContainer);\r\n        this._chatBoxContainer.show();\r\n        this._chatBox.focus();\r\n        this._chatBoxVisible = true;\r\n    }\r\n\r\n    private HideChatBox(): void {\r\n        this._chatBox.val(\"\");\r\n        this._chatBoxContainer.remove();\r\n        this._chatBoxVisible = false;\r\n    }\r\n\r\n    private AddMessage(chatMessage: ChatMessage): void {\r\n\r\n        //User message\r\n        if (chatMessage.Type === ChatMessageType.User) {\r\n            var color = this._colors[this.GetHashCode(chatMessage.From) % this._colors.length],\r\n                playerName = $(\"<span>\").text(chatMessage.From).css(\"color\", color),\r\n                message = $(\"<span>\").append($(\"<div/>\").text(chatMessage.Message).html().replace(/\\\"/g, \"&quot;\"));\r\n\r\n            //only insert new items before the chat box so that the chat box stays at the\r\n            //bottom of the screen and doesn't scroll up.\r\n            if (this._chatBoxVisible) {\r\n                $(\"<li>\")\r\n                    .append(playerName)\r\n                    .append($(\"<span>\").text(\": \"))\r\n                    .append(message)\r\n                    .insertBefore(this._chatBoxContainer);\r\n            } else {\r\n                this._chatContainer.append($(\"<li>\")\r\n                    .append(playerName)\r\n                    .append($(\"<span>\").text(\": \"))\r\n                    .append(message));\r\n            }\r\n        }\r\n\r\n        //System message\r\n        if (chatMessage.Type === ChatMessageType.System) {\r\n            this._chatContainer.append($(\"<li>\")\r\n                .append(chatMessage.Message)\r\n                .css(\"color\", this._systemMessageColor));\r\n        }\r\n\r\n        if (this._chatContainer.children.length > 100) {\r\n            // @ts-ignore\r\n            this._chatContainer.children[0].remove();\r\n        }\r\n    }\r\n\r\n    private GetHashCode(name: string): number {\r\n        var hash = 0, i, c, l;\r\n        if (name.length === 0) return hash;\r\n        for (i = 0, l = name.length; i < l; i++) {\r\n            c = name.charCodeAt(i);\r\n            hash = ((hash << 5) - hash) + c;\r\n            hash |= 0;\r\n        }\r\n        return hash;\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\nimport { LatencyResolver } from \"./LatencyResolver\";\r\nimport { ShipInputController } from \"../Ships/ShipInputController\";\r\nimport { UserCameraController } from \"./UserCameraController\";\r\nimport { ShipManager } from \"../Ships/ShipManager\";\r\nimport { Ship } from \"../Ships/Ship\";\r\nimport { MapBoundary } from \"../Space/MapBoundary\";\r\nimport { ShipMovementController } from \"../Ships/ShipMovementController\";\r\nimport { IPayloadData } from \"../Server/IPayloadDefinitions\";\r\nimport { MathRoundTo } from \"../../../endgate/Extensions/MathExtensions\";\r\nimport { ServerAdapter } from \"../Server/ServerAdapter\";\r\nimport { HubConnection } from \"../../../node_modules/@aspnet/signalr\";\r\n\r\nexport class UserShipManager implements eg.IUpdateable {\r\n    public static SYNC_INTERVAL: eg.TimeSpan = eg.TimeSpan.FromSeconds(1.5);\r\n\r\n    public LatencyResolver: LatencyResolver;\r\n\r\n    private _shipInputController: ShipInputController;\r\n    private _userCameraController: UserCameraController;\r\n    private _connection: HubConnection;\r\n    private _lastSync: Date;\r\n\r\n    constructor(public ControlledShipId: number, private _shipManager: ShipManager, private _collisionManager: eg.Collision.CollisionManager, input: eg.Input.InputManager, private _camera: eg.Rendering.Camera2d, serverAdapter: ServerAdapter) {\r\n        this._connection = serverAdapter.Connection;\r\n        this._userCameraController = new UserCameraController(this.ControlledShipId, this._shipManager, this._camera);\r\n        this._lastSync = new Date();\r\n        this.LatencyResolver = new LatencyResolver(serverAdapter);\r\n\r\n        this._collisionManager.OnCollision.Bind((ship: eg.Collision.Collidable, boundary: eg.Collision.Collidable) => {\r\n            if (ship instanceof Ship && boundary instanceof MapBoundary) {\r\n                if (ship.ID === this.ControlledShipId) {\r\n                    for (var i = ShipMovementController.MOVING_DIRECTIONS.length - 1; i >= 0; i--) {\r\n                        this.Invoke(\"registerMoveStop\", false, this.NewMovementCommand(\"Forward\", false));\r\n                        this.Invoke(\"registerMoveStop\", false, this.NewMovementCommand(\"Backward\", false));\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        this._shipInputController = new ShipInputController(input.Keyboard, (direction: string, startMoving: boolean) => {\r\n            var ship = this._shipManager.GetShip(this.ControlledShipId);\r\n\r\n            if (ship && ship.MovementController.Controllable && ship.LifeController.Alive) {\r\n                if (startMoving) {\r\n                    if (direction === \"Boost\") {\r\n                        this.Invoke(\"registerAbilityStart\", this.LatencyResolver.TryRequestPing(), this.NewAbilityCommand(direction, true));\r\n\r\n                        ship.AbilityHandler.Activate(direction);\r\n                        // Don't want to trigger a server command if we're already moving in the direction\r\n                    } else if (!ship.MovementController.IsMovingInDirection(direction)) {\r\n                        this.Invoke(\"registerMoveStart\", this.LatencyResolver.TryRequestPing(), this.NewMovementCommand(direction, true));\r\n\r\n                        ship.MovementController.Move(direction, startMoving);\r\n                    }\r\n                } else {\r\n                    // Don't want to trigger a server command if we're already moving in the direction\r\n                    if (ship.MovementController.IsMovingInDirection(direction)) {\r\n                        this.Invoke(\"registerMoveStop\", this.LatencyResolver.TryRequestPing(), this.NewMovementCommand(direction, false));\r\n\r\n                        ship.MovementController.Move(direction, startMoving);\r\n                    }\r\n                }\r\n            }\r\n        }, (fireMethod: string) => {\r\n                var hubMethod: string = fireMethod.substr(0, 1).toUpperCase() + fireMethod.substring(1);\r\n\r\n                this._connection.invoke(hubMethod);\r\n            });\r\n    }\r\n\r\n    public LoadPayload(payload: IPayloadData): void {\r\n        var ship: Ship = this._shipManager.GetShip(this.ControlledShipId);\r\n\r\n        if (ship) {\r\n            ship.LevelManager.UpdateExperience(payload.Experience, payload.ExperienceToNextLevel);\r\n        }\r\n    }\r\n\r\n    public Update(gameTime: eg.GameTime): void {\r\n        var ship = this._shipManager.GetShip(this.ControlledShipId);\r\n\r\n        if (ship) {\r\n            if (eg.TimeSpan.DateSpan(this._lastSync, gameTime.Now).Seconds > UserShipManager.SYNC_INTERVAL.Seconds && ship.LifeController.Alive) {\r\n                this._lastSync = gameTime.Now;\r\n                this._connection.invoke(\"syncMovement\", { X: Math.round(ship.MovementController.Position.X - ship.Graphic.Size.HalfWidth), Y: Math.round(ship.MovementController.Position.Y - ship.Graphic.Size.HalfHeight) }, MathRoundTo(ship.MovementController.Rotation * 57.2957795, 2), { X: Math.round(ship.MovementController.Velocity.X), Y: Math.round(ship.MovementController.Velocity.Y) });\r\n            }\r\n\r\n            this._userCameraController.Update(gameTime);\r\n        }\r\n    }\r\n\r\n    private Invoke(method: string, pingBack: boolean, command: IShipCommand): void {\r\n        var ship: Ship = this._shipManager.GetShip(this.ControlledShipId);\r\n\r\n        this._connection.invoke(method, command.Command, { X: Math.round(ship.MovementController.Position.X - ship.Graphic.Size.HalfWidth), Y: Math.round(ship.MovementController.Position.Y - ship.Graphic.Size.HalfHeight) }, MathRoundTo(ship.MovementController.Rotation * 57.2957795, 2), { X: Math.round(ship.MovementController.Velocity.X), Y: Math.round(ship.MovementController.Velocity.Y) }, pingBack);\r\n    }\r\n\r\n    private NewMovementCommand(direction: string, startMoving: boolean): IShipCommand {\r\n        var command: IShipCommand = {\r\n            Command: direction,\r\n            Start: startMoving,\r\n            IsAbility: false\r\n        };\r\n\r\n        return command;\r\n    }\r\n\r\n    private NewAbilityCommand(ability: string, startMoving: boolean): IShipCommand {\r\n        var command: IShipCommand = {\r\n            Command: ability,\r\n            Start: startMoving,\r\n            IsAbility: true\r\n        };\r\n\r\n        return command;\r\n    }\r\n}\r\n\r\ninterface IShipCommand {\r\n    Command: string;\r\n    Start: boolean;\r\n    IsAbility: boolean;\r\n}","import * as eg from \"../../../endgate/endgate\";\r\nimport { ShipFireController } from \"./ShipFireController\";\r\nimport { IMoving } from \"./IMoving\";\r\n\r\nexport class ShipInputController {\r\n    public static DOUBLE_TAP_AFTER: eg.TimeSpan = eg.TimeSpan.FromMilliseconds(350);\r\n\r\n    private _directions: IMoving;\r\n    private _lastBoostTap: Date;\r\n    private _fireController: ShipFireController;\r\n\r\n    constructor(private _keyboard: eg.Input.KeyboardHandler, private _onMove: (direction: string, startMoving: boolean) => void, private _onFire: (fireMethod: string) => void) {\r\n        this._directions = {\r\n            Forward: false,\r\n            Backward: false,\r\n            RotatingLeft: false,\r\n            RotatingRight: false\r\n        };\r\n        this._lastBoostTap = new Date();\r\n\r\n        this.BindKeys([\"w\"], \"OnCommandDown\", \"Forward\", true);\r\n        this.BindKeys([\"d\"], \"OnCommandDown\", \"RotatingRight\", true);\r\n        this.BindKeys([\"s\"], \"OnCommandDown\", \"Backward\", true);\r\n        this.BindKeys([\"a\"], \"OnCommandDown\", \"RotatingLeft\", true);\r\n        this.BindKeys([\"w\"], \"OnCommandUp\", \"Forward\", false);\r\n        this.BindKeys([\"d\"], \"OnCommandUp\", \"RotatingRight\", false);\r\n        this.BindKeys([\"s\"], \"OnCommandUp\", \"Backward\", false);\r\n        this.BindKeys([\"a\"], \"OnCommandUp\", \"RotatingLeft\", false);\r\n\r\n        this._keyboard.OnCommandUp(\"w\", () => {\r\n            var now = new Date();\r\n\r\n            if (eg.TimeSpan.DateSpan(this._lastBoostTap, now).Milliseconds <= ShipInputController.DOUBLE_TAP_AFTER.Milliseconds) {\r\n                this._onMove(\"Boost\", true);\r\n            } else { // no double tap\r\n                this._lastBoostTap = now;\r\n            }\r\n        });\r\n\r\n        this._fireController = new ShipFireController(this._keyboard, this._onFire);\r\n    }\r\n\r\n    private BindKeys(keyList: string[], bindingAction: string, direction: string, startMoving: boolean): void {\r\n        for (var i = 0; i < keyList.length; i++) {\r\n            // @ts-ignore\r\n            this._keyboard[bindingAction](keyList[i], () => {\r\n                // @ts-ignore\r\n                if (this._directions[direction] !== startMoving) {\r\n                    // @ts-ignore\r\n                    this._directions[direction] = startMoving;\r\n                    this._onMove(direction, startMoving);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\nimport { ShipManager } from \"../Ships/ShipManager\";\r\n\r\nexport class UserCameraController implements eg.IUpdateable {\r\n    public static DISTANCE_THRESHOLD: number = 500;\r\n    public static MOVEMENT_TIME: eg.TimeSpan = eg.TimeSpan.FromMilliseconds(500);\r\n\r\n    private _movementTween: eg.Tweening.Vector2dTween;\r\n    private _started: boolean;\r\n\r\n    constructor(private _myShipId: number, private _shipManager: ShipManager, private _camera: eg.Rendering.Camera2d) {\r\n        this._movementTween = new eg.Tweening.Vector2dTween(eg.Vector2d.Zero, eg.Vector2d.Zero, UserCameraController.MOVEMENT_TIME, eg.TweeningFunctions.Exponential.EaseOut);\r\n        this._movementTween.OnChange.Bind((newPosition) => {\r\n            this._camera.Position = newPosition;\r\n        });\r\n\r\n        this._started = false;\r\n    }\r\n\r\n    public Update(gameTime: eg.GameTime): void {\r\n        var ship = this._shipManager.GetShip(this._myShipId),\r\n            distance: number;\r\n\r\n        if (ship) {\r\n            // On the initial start of the game just position the camera directly over the ship\r\n            if (!this._started) {\r\n                this._started = true;\r\n                this._camera.Position = ship.MovementController.Position;\r\n                return;\r\n            }\r\n\r\n            distance = ship.MovementController.Position.Distance(this._camera.Position).Magnitude();\r\n\r\n            if (!this._movementTween.IsPlaying()) {\r\n                if (distance < UserCameraController.DISTANCE_THRESHOLD) {\r\n                    this._camera.Position = ship.MovementController.Position;\r\n                } else {\r\n                    this._movementTween.From = this._camera.Position;\r\n                    this._movementTween.To = ship.MovementController.Position;\r\n                    this._movementTween.Restart();\r\n                }\r\n            } else {\r\n                this._movementTween.To = ship.MovementController.Position;\r\n            }\r\n        }\r\n\r\n        this._movementTween.Update(gameTime);\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\nimport { IPayloadData, ILeaderboardEntryData } from \"./IPayloadDefinitions\";\r\nimport { ChatMessage } from \"../HUD/Chat\";\r\nimport { PayloadDecompressor } from \"./PayloadDecompressor\";\r\nimport { ServerConnectionManager } from \"./ServerConnectionManager\";\r\nimport { IClientInitialization } from \"./IClientInitialization\";\r\nimport { IUserInformation } from \"./IUserInformation\";\r\nimport { HubConnection } from \"../../../node_modules/@aspnet/signalr\";\r\n\r\nexport class ServerAdapter {\r\n    public static NEGOTIATE_RETRIES: number = 3;\r\n    public static RETRY_DELAY: eg.TimeSpan = eg.TimeSpan.FromSeconds(1);\r\n\r\n    public OnPayload: eg.EventHandler1<IPayloadData>;\r\n    public OnLeaderboardUpdate: eg.EventHandler1<Array<ILeaderboardEntryData>>;\r\n    public OnForcedDisconnct: eg.EventHandler;\r\n    public OnControlTransferred: eg.EventHandler;\r\n    public OnPingRequest: eg.EventHandler;\r\n    public OnMapResize: eg.EventHandler1<eg.Size2d>;\r\n    public OnMessageReceived: eg.EventHandler1<ChatMessage>;\r\n\r\n    private _payloadDecompressor: PayloadDecompressor | undefined;\r\n    private _connectionManager: ServerConnectionManager;\r\n\r\n    constructor(public Connection: HubConnection, authCookieName: string) {\r\n        this.OnPayload = new eg.EventHandler1<IPayloadData>();\r\n        this.OnLeaderboardUpdate = new eg.EventHandler1<Array<ILeaderboardEntryData>>();\r\n        this.OnForcedDisconnct = new eg.EventHandler();\r\n        this.OnControlTransferred = new eg.EventHandler();\r\n        this.OnPingRequest = new eg.EventHandler();\r\n        this.OnMapResize = new eg.EventHandler1<eg.Size2d>();\r\n        this.OnMessageReceived = new eg.EventHandler1<ChatMessage>();\r\n\r\n        this._connectionManager = new ServerConnectionManager(authCookieName);\r\n    }\r\n\r\n    public Negotiate(): JQueryPromise<IClientInitialization> {\r\n        let result = $.Deferred();\r\n        \r\n        this.Wire();\r\n\r\n        this.Connection.start().then(() => {\r\n            let userInformation: IUserInformation = this._connectionManager.PrepareRegistration();\r\n            this.TryInitialize(userInformation, (initialization: IClientInitialization) => {\r\n                initialization.UserInformation = userInformation;\r\n                this._payloadDecompressor = new PayloadDecompressor(initialization.CompressionContracts);\r\n\r\n                result.resolve(initialization);\r\n\r\n                this.Connection.invoke(\"readyForPayloads\");\r\n            });\r\n        }, (reason: any) => console.error(\"Failed to negotiate with server inthe adapter: \" + reason));\r\n\r\n        return result.promise();\r\n    }\r\n\r\n    public Stop(): void {\r\n        this.Connection.stop();\r\n    }\r\n\r\n    private TryInitialize(userInformation: IUserInformation, onComplete: (initialization: IClientInitialization) => void, count: number = 0): void {\r\n        this.Connection.invoke(\"initializeClient\", userInformation.RegistrationID).then((initialization: IClientInitialization) => {\r\n            if (!initialization) {\r\n                if (count >= ServerAdapter.NEGOTIATE_RETRIES) {\r\n                    console.log(\"Could not negotiate with server, refreshing the page.\");\r\n                    window.location.reload();\r\n                } else {\r\n                    setTimeout(() => {\r\n                        this.TryInitialize(userInformation, onComplete, count + 1);\r\n                    }, ServerAdapter.RETRY_DELAY.Milliseconds);\r\n                }\r\n            } else {\r\n                onComplete(initialization);\r\n            }\r\n        });\r\n    }\r\n\r\n    private Wire(): void {\r\n        this.Connection.on(\"d\", (payload: any) => {\r\n            if (this._payloadDecompressor) {\r\n                this.OnPayload.Trigger(this._payloadDecompressor.Decompress(payload));\r\n            }\r\n        });\r\n\r\n        this.Connection.on(\"l\", (leaderboardUpdate: any) => {\r\n            if (this._payloadDecompressor) {\r\n                this.OnLeaderboardUpdate.Trigger(this._payloadDecompressor.DecompressLeaderboard(leaderboardUpdate));\r\n            }\r\n        });\r\n\r\n        this.Connection.on(\"disconnect\", () => {\r\n            this.OnForcedDisconnct.Trigger();\r\n        });\r\n\r\n        this.Connection.on(\"controlTransferred\", () => {\r\n            this.OnControlTransferred.Trigger();\r\n        });\r\n\r\n        this.Connection.on(\"pingBack\", () => {\r\n            this.OnPingRequest.Trigger();\r\n        });\r\n\r\n        this.Connection.on(\"mapSizeIncreased\", (size: any) => {\r\n            this.OnMapResize.Trigger(new eg.Size2d(size.Width, size.Height));\r\n        });\r\n\r\n        this.Connection.on(\"chatMessage\", (from: string, message: string, type: number) => {\r\n            this.OnMessageReceived.Trigger(new ChatMessage(from, message, type));\r\n        });\r\n    }\r\n}","import * as eg from \"../../../endgate/endgate\";\r\nimport { ICollidableData, IShipData, IBulletData, ILeaderboardEntryData, IPowerupData, IPayloadData } from \"./IPayloadDefinitions\";\r\nimport { HealthPack } from \"../Powerups/HealthPack\";\r\nimport { Ship } from \"../Ships/Ship\";\r\n\r\nexport class PayloadDecompressor {\r\n    public PayloadContract: any;\r\n    public CollidableContract: any;\r\n    public ShipContract: any;\r\n    public BulletContract: any;\r\n    public LeaderboardEntryContract: any;\r\n    public PowerupContract: any;\r\n\r\n    constructor(contracts: any) {\r\n        this.PayloadContract = contracts.PayloadContract;\r\n        this.CollidableContract = contracts.CollidableContract;\r\n        this.ShipContract = contracts.ShipContract;\r\n        this.BulletContract = contracts.BulletContract;\r\n        this.LeaderboardEntryContract = contracts.LeaderboardEntryContract;\r\n        this.PowerupContract = contracts.PowerupContract;\r\n    }\r\n\r\n    private DecompressCollidable(obj: any[]): ICollidableData {\r\n        return {\r\n            Collided: !!obj[this.CollidableContract.Collided],\r\n            CollidedAt: new eg.Vector2d(obj[this.CollidableContract.CollidedAtX], obj[this.CollidableContract.CollidedAtY]),\r\n            MovementController: {\r\n                Forces: new eg.Vector2d(obj[this.CollidableContract.ForcesX], obj[this.CollidableContract.ForcesY]),\r\n                Mass: obj[this.CollidableContract.Mass],\r\n                Position: new eg.Vector2d(obj[this.CollidableContract.PositionX], obj[this.CollidableContract.PositionY]),\r\n                Rotation: obj[this.CollidableContract.Rotation] * .0174532925,\r\n                Velocity: new eg.Vector2d(obj[this.CollidableContract.VelocityX], obj[this.CollidableContract.VelocityY])\r\n            },\r\n            LifeController: {\r\n                Alive: obj[this.CollidableContract.Alive],\r\n                Health: obj[this.CollidableContract.Health]\r\n            },\r\n            ID: obj[this.CollidableContract.ID],\r\n            Disposed: !!obj[this.CollidableContract.Disposed]\r\n        };\r\n    }\r\n\r\n    private DecompressShip(ship: any): IShipData {\r\n        var result: IShipData = <IShipData>this.DecompressCollidable(ship);\r\n\r\n        result.MovementController.Position = result.MovementController.Position.Add(Ship.SIZE.Multiply(.5));\r\n\r\n        result.MovementController.Moving = {\r\n            RotatingLeft: !!ship[this.ShipContract.RotatingLeft],\r\n            RotatingRight: !!ship[this.ShipContract.RotatingRight],\r\n            Forward: !!ship[this.ShipContract.Forward],\r\n            Backward: !!ship[this.ShipContract.Backward]\r\n        };\r\n\r\n        result.Name = ship[this.ShipContract.Name];\r\n        result.MaxLife = ship[this.ShipContract.MaxLife];\r\n        result.Level = ship[this.ShipContract.Level];\r\n        result.Abilities = {\r\n            Boost: ship[this.ShipContract.Boost]\r\n        };\r\n\r\n        return result;\r\n    }\r\n\r\n    private DecompressBullet(bullet: any): IBulletData {\r\n        var result: IBulletData = <IBulletData>this.DecompressCollidable(bullet);\r\n\r\n        result.DamageDealt = bullet[this.BulletContract.DamageDealt];\r\n\r\n        return result;\r\n    }\r\n\r\n    private DecompressLeaderboardEntry(data: any): ILeaderboardEntryData {\r\n        return {\r\n            Name: data[this.LeaderboardEntryContract.Name],\r\n            Photo: data[this.LeaderboardEntryContract.Photo],\r\n            ID: data[this.LeaderboardEntryContract.ID],\r\n            Level: data[this.LeaderboardEntryContract.Level],\r\n            Kills: data[this.LeaderboardEntryContract.Kills],\r\n            Deaths: data[this.LeaderboardEntryContract.Deaths],\r\n            Position: 0\r\n        };\r\n    }\r\n\r\n    private DecompressPowerup(data: any): IPowerupData {\r\n        return {\r\n            MovementController: {\r\n                Position: new eg.Vector2d(data[this.PowerupContract.PositionX] + HealthPack.SIZE.HalfWidth, data[this.PowerupContract.PositionY] + HealthPack.SIZE.HalfHeight),\r\n                Rotation: 0\r\n            },\r\n            ID: data[this.PowerupContract.ID],\r\n            Disposed: data[this.PowerupContract.Disposed],\r\n            Type: data[this.PowerupContract.Type],\r\n            LifeController: {\r\n                Alive: true,\r\n                Health: 0\r\n            }\r\n        };\r\n    }\r\n\r\n    public DecompressPayload(data: any): IPayloadData {\r\n        return {\r\n            Ships: data[this.PayloadContract.Ships],\r\n            LeaderboardPosition: data[this.PayloadContract.LeaderboardPosition],\r\n            Kills: data[this.PayloadContract.Kills],\r\n            Deaths: data[this.PayloadContract.Deaths],\r\n            Powerups: data[this.PayloadContract.Powerups],\r\n            Bullets: data[this.PayloadContract.Bullets],\r\n            ShipsInWorld: data[this.PayloadContract.ShipsInWorld],\r\n            BulletsInWorld: data[this.PayloadContract.BulletsInWorld],\r\n            Experience: data[this.PayloadContract.Experience],\r\n            ExperienceToNextLevel: data[this.PayloadContract.ExperienceToNextLevel],\r\n            Notification: data[this.PayloadContract.Notification],\r\n            LastCommandProcessed: data[this.PayloadContract.LastCommandProcessed],\r\n            KilledByName: data[this.PayloadContract.KilledByName],\r\n            KilledByPhoto: data[this.PayloadContract.KilledByPhoto]\r\n        };\r\n    }\r\n\r\n    public DecompressLeaderboard(data: any): ILeaderboardEntryData[] {\r\n        var payload: ILeaderboardEntryData[] = [];\r\n\r\n        for (var i = 0; i < data.length; i++) {\r\n            var item = this.DecompressLeaderboardEntry(data[i]);\r\n            item.Position = i + 1;\r\n\r\n            payload.push(item);\r\n        }\r\n\r\n        return payload;\r\n    }        \r\n\r\n    public Decompress(data: any): IPayloadData {\r\n        var payload: IPayloadData = this.DecompressPayload(data),\r\n            i: number = 0;\r\n\r\n        for (i = 0; i < payload.Ships.length; i++) {\r\n            payload.Ships[i] = this.DecompressShip(payload.Ships[i]);\r\n        }\r\n\r\n        for (i = 0; i < payload.Bullets.length; i++) {\r\n            payload.Bullets[i] = this.DecompressBullet(payload.Bullets[i]);\r\n        }\r\n\r\n        for (i = 0; i < payload.Powerups.length; i++) {\r\n            payload.Powerups[i] = this.DecompressPowerup(payload.Powerups[i]);\r\n        }\r\n\r\n        return payload;\r\n    }\r\n}","import { IUserInformation } from \"./IUserInformation\";\r\n\r\nexport class ServerConnectionManager {\r\n    constructor(private _authCookieName: string) {}\r\n\r\n    public PrepareRegistration(): IUserInformation {\r\n        var stateCookie: JQueryCookieStatic = $.cookie(this._authCookieName),\r\n            state: any = stateCookie ? JSON.parse((<any>stateCookie)) : {},\r\n            registrationID: string = state.RegistrationID;\r\n\r\n        if (registrationID) {\r\n            delete state.RegistrationID;\r\n\r\n            // Re-update the registration cookie\r\n            $.cookie(this._authCookieName, JSON.stringify(state), { path: '/', expires: 30 });\r\n\r\n            return {\r\n                Name: state.DisplayName,\r\n                Photo: state.Photo,\r\n                RegistrationID: registrationID\r\n            };\r\n        } else {\r\n            throw new Error(\"Registration ID not available.\");\r\n        }\r\n    }\r\n}"],"sourceRoot":""}